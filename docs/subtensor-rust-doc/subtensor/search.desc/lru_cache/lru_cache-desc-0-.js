searchState.loadedDescShard("lru_cache", 0, "A cache that holds a limited number of key-value pairs. …\nAn iterator over a cache’s key-value pairs in least- to …\nAn iterator over a cache’s key-value pairs in least- to …\nAn iterator over a cache’s key-value pairs in least- to …\nAn LRU cache.\nReturns the maximum number of key-value pairs the cache …\nRemoves all key-value pairs from the cache.\nChecks if the map contains the given key.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a mutable reference to the value corresponding to …\nInserts a key-value pair into the cache. If the key …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the cache contains no key-value pairs.\nReturns an iterator over the cache’s key-value pairs in …\nReturns an iterator over the cache’s key-value pairs in …\nReturns the number of key-value pairs in the cache.\nCreates an empty cache that can hold at most <code>capacity</code> …\nRemoves the given key from the cache and returns its …\nRemoves and returns the least recently used key-value pair …\nSets the number of key-value pairs the cache can hold. …\nCreates an empty cache that can hold at most <code>capacity</code> …")