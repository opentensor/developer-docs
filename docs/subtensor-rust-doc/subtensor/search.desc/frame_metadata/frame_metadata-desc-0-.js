searchState.loadedDescShard("frame_metadata", 0, "Decodable variant of the RuntimeMetadata.\nMetadata prefix.\nStores the encoded <code>RuntimeMetadata</code> as raw bytes.\nThe metadata of a runtime. The version ID encoded/decoded …\nEnum that should fail.\nMetadata prefixed by a u32 for reserved usage\nUnused; enum filler.\nVersion 1 for runtime metadata. No longer used.\nVersion 10 for runtime metadata, as raw encoded bytes.\nVersion 11 for runtime metadata, as raw encoded bytes.\nVersion 12 for runtime metadata, as raw encoded bytes.\nVersion 13 for runtime metadata, as raw encoded bytes.\nVersion 14 for runtime metadata.\nVersion 15 for runtime metadata.\nVersion 2 for runtime metadata. No longer used.\nVersion 3 for runtime metadata. No longer used.\nVersion 4 for runtime metadata. No longer used.\nVersion 5 for runtime metadata. No longer used.\nVersion 6 for runtime metadata. No longer used.\nVersion 7 for runtime metadata. No longer used.\nVersion 8 for runtime metadata, as raw encoded bytes.\nVersion 9 for runtime metadata, as raw encoded bytes.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMetadata v14\nMetadata v15\nGet the version number of the metadata.\n128-bit Blake2 hash.\nMultiple 128-bit Blake2 hashes concatenated.\n256-bit Blake2 hash.\nThe storage entry returns <code>T::Default</code> if the key is not …\nMetadata of the extrinsic used by the runtime.\nIdentity hashing (no hashing).\nCurrent prefix of metadata\nA storage map.\nThe storage entry returns an <code>Option&lt;T&gt;</code>, with <code>None</code> if the …\nMetadata for all calls in a pallet\nMetadata about one pallet constant.\nMetadata about a pallet error.\nMetadata about the pallet Event type.\nAll metadata about an runtime pallet.\nAll metadata of the pallet’s storage.\nPlain storage entry (just the value).\nLatest runtime metadata\nThe metadata of a runtime.\nMetadata of an extrinsic’s signed extension.\nMetadata about one storage entry.\nA storage entry modifier indicates how a storage entry is …\nA type of storage value.\nHasher used by storage maps\n128-bit XX hash.\n256-bit XX hash.\nMultiple 64-bit XX hashes concatenated.\nThe type of the additional signed data, with the data to …\nPallet calls metadata.\nPallet constants metadata.\nDefault value (SCALE encoded).\nStorage entry documentation.\nDocumentation of the constant.\nMetadata for all storage entries.\nPallet error metadata.\nPallet event metadata.\nMetadata of the extrinsic.\nMetadata of the extrinsic.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe unique signed extension identifier, which may be …\nDefine the index of the pallet, this index will be used …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn <code>Option</code> modifier of that storage entry.\nPallet name.\nVariable name of the storage entry.\nName of the pallet constant.\nCreate a new instance of <code>RuntimeMetadataV14</code>.\nMetadata of all the pallets.\nMetadata of all the pallets.\nThe common prefix used by all storage entries.\nThe signed extensions in the order they appear in the …\nPallet storage metadata.\nThe type of the <code>Runtime</code>.\nThe type of the <code>Runtime</code>.\nThe type of the extrinsic.\nThe type of the signed extension, with the data to be …\nType of the value stored in the entry.\nThe corresponding enum type for the pallet call.\nThe Event type.\nType of the pallet constant.\nThe error type information.\nType registry containing all types used in the metadata.\nType registry containing all types used in the metadata.\nValue stored in the constant (SCALE encoded).\nExtrinsic version.\nOne or more hashers, should be one hasher per key element.\nThe type of the key, can be a tuple with elements for each …\nThe type of the value.\nMetadata for custom types.\nThe associated value of a custom metadata type.\nMetadata of the extrinsic used by the runtime.\nThe type of the outer enums.\nAll metadata about an runtime pallet.\nMetadata of a runtime trait.\nMetadata of a runtime method.\nMetadata of a runtime method parameter.\nLatest runtime metadata\nThe metadata of a runtime.\nMetadata of an extrinsic’s signed extension.\nThe type of the additional signed data, with the data to …\nThe type of the address that signes the extrinsic\nMetadata of the Runtime API.\nMetadata of the Runtime API.\nThe type of the outer <code>RuntimeCall</code> enum.\nThe type of the outermost Call enum.\nPallet calls metadata.\nPallet constants metadata.\nAllows users to add custom types to the metadata.\nAllows users to add custom types to the metadata.\nTrait documentation.\nMethod documentation.\nPallet documentation.\nPallet error metadata.\nThe module error type of the <code>DispatchError::Module</code> variant.\nPallet event metadata.\nThe type of the outer <code>RuntimeEvent</code> enum.\nThe type of the outermost Extra enum.\nMetadata of the extrinsic.\nMetadata of the extrinsic.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe unique signed extension identifier, which may be …\nDefine the index of the pallet, this index will be used …\nMethod parameters.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe custom map.\nTrait methods.\nTrait name.\nMethod name.\nParameter name.\nPallet name.\nCreate a new instance of <code>RuntimeMetadataV15</code>.\nThe outer enums types as found in the runtime.\nThe outer enums types as found in the runtime.\nMethod output.\nMetadata of all the pallets.\nMetadata of all the pallets.\nThe type of the extrinsic’s signature.\nThe signed extensions in the order they appear in the …\nPallet storage metadata.\nThe type of the <code>Runtime</code>.\nThe type of the <code>Runtime</code>.\nParameter type.\nThe type of the signed extension, with the data to be …\nThe custom type.\nType registry containing all types used in the metadata.\nType registry containing all types used in the metadata.\nThe custom value of this type.\nExtrinsic version.")