searchState.loadedDescShard("lz4", 0, "lz4\nThis module provides access to the block mode functions of …\nFavor decompression speed over compression ratio. Requires …\nThis function is used to flag that this session of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new decoder which reads its input from the given …\nImmutable reader reference.\nImmutable writer reference.\nRepresents the compression mode do be used.\nDefault compression\nFast compression with acceleration paramet\nHigh compression with compression parameter\nCompresses the full src buffer using the specified …\nReturns the size of the buffer that is guaranteed to hold …\nCompresses the full <code>src</code> buffer using the specified …\nDecompresses the src buffer. If uncompressed_size is None, …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nEquivalent to C’s <code>void</code> type when used as a pointer.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")