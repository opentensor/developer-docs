searchState.loadedDescShard("if_watch", 0, "IP address watching.\nA local address has been deleted.\nAn address change event.\nAn IP network address, either IPv4 or IPv6.\nAn IPv4 network address.\nAn IPv6 network address.\nA new local address has been added.\nReturns the address.\nReturns the address.\nReturns the address.\nAggregate a <code>Vec</code> of <code>IpNet</code>s and return the result as a new …\nAggregate a <code>Vec</code> of <code>Ipv4Net</code>s and return the result as a new …\nAggregate a <code>Vec</code> of <code>Ipv6Net</code>s and return the result as a new …\nReturns the broadcast address.\nReturns the broadcast address.\nReturns the last address.\nTest if a network address contains either another network …\nTest if a network address contains either another network …\nTest if a network address contains either another network …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the host mask.\nReturns the host mask.\nReturns the host mask.\nReturn an <code>Iterator</code> over the host addresses in this network.\nReturn an <code>Iterator</code> over the host addresses in this network.\nReturn an <code>Iterator</code> over the host addresses in this network.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if this network and the given network are …\nReturns <code>true</code> if this network and the given network are …\nReturns <code>true</code> if this network and the given network are …\nReturns the maximum valid prefix length.\nReturns the maximum valid prefix length.\nReturns the maximum valid prefix length.\nReturns the network mask.\nReturns the network mask.\nReturns the network mask.\nReturns the network address.\nReturns the network address.\nReturns the network address.\nCreates a new IP network address from an <code>IpAddr</code> and prefix …\nCreates a new IPv4 network address from an <code>Ipv4Addr</code> and …\nCreates a new IPv6 network address from an <code>Ipv6Addr</code> and …\nCreates a new IP network address from an <code>IpAddr</code> and prefix …\nCreates a new IPv4 network address from an <code>Ipv4Addr</code> and …\nCreates a new IPv6 network address from an <code>Ipv6Addr</code> and …\nReturns the prefix length.\nReturns the prefix length.\nReturns the prefix length.\nReturns an <code>Iterator</code> over the subnets of this network with …\nReturns an <code>Iterator</code> over the subnets of this network with …\nReturns an <code>Iterator</code> over the subnets of this network with …\nReturns the <code>IpNet</code> that contains this one.\nReturns the <code>Ipv4Net</code> that contains this one.\nReturns the <code>Ipv6Net</code> that contains this one.\nAn interface watcher that uses <code>rtnetlink</code>’s <code>TokioSocket</code>\nReturns a copy of the network with the address truncated …\nReturns a copy of the network with the address truncated …\nReturns a copy of the network with the address truncated …\nCreates a new IP network address from an <code>IpAddr</code> and …\nCreates a new IPv4 network address from an <code>Ipv4Addr</code> and …\nCreates a new IPv6 network address from an <code>Ipv6Addr</code> and …\nWatches for interface changes.")