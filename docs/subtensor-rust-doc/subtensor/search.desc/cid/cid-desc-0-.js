searchState.loadedDescShard("cid", 0, "cid\nA Cid that contains a multihash with an allocated size of …\nRepresentation of a CID.\nContains the error value\nError types\nInput data is too short.\nInvalid CIDv0 base encoding.\nInvalid CIDv0 codec.\nInvalid CIDv0 multihash.\nInvalid CID version.\nInvalid explicit CIDv0.\nIo error.\nContains the success value\nMultibase or multihash codec failure\nType alias to use this library’s <code>Error</code> type in a <code>Result</code>.\nUnknown CID codec.\nCID version 0.\nCID version 1.\nVarint decode failure.\nThe version of the CID.\nReturns the cid codec.\nReturns the length in bytes needed to encode this cid into …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the cid multihash.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert a CIDv0 to a CIDv1. Returns unchanged if already a …\nCheck if the version of <code>data</code> bytes is CIDv0.\nCheck if the version of <code>data</code> string is CIDv0.\nCreate a new CID.\nCreate a new CIDv0.\nCreate a new CIDv1.\nReads the bytes from a byte stream.\nReturns the encoded bytes of the <code>Cid</code>.\nConvert CID into a multibase encoded string\nReturns the cid version.\nWrites the bytes to a byte stream, returns the number of …")