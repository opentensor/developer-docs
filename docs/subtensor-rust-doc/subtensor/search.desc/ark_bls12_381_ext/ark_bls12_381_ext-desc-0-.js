searchState.loadedDescShard("ark_bls12_381_ext", 0, "This library implements the BLS12_381 curve generated by …\nHooks for <em>BLS12-381</em> curve.\nPairing final exponentiation.\nMulti scalar multiplication on G1.\nMulti scalar multiplication on G2.\nProjective multiplication on G1.\nProjective multiplication on G2.\nPairing multi Miller loop.\nCoefficient <code>c0</code> in the representation of the field element …\nCoefficient <code>c0</code> in the representation of the field element …\nCoefficient <code>c1</code> in the representation of the field element …\nCoefficient <code>c1</code> in the representation of the field element …\nFinal exponentiation jumping into the user-defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMultiply this element by the quadratic nonresidue 1 + u. …\nMulti Miller loop jumping into the user-defined …\nSets <code>a = -a</code>.\nSets <code>a = -a</code>.\n<code>X / Z</code> projection of the affine <code>X</code>\n<code>X / Z</code> projection of the affine <code>X</code>\n<code>Y / Z</code> projection of the affine <code>Y</code>\n<code>Y / Z</code> projection of the affine <code>Y</code>\nProjective multiplicative inverse. Will be <code>0</code> only at …\nProjective multiplicative inverse. Will be <code>0</code> only at …\nCoefficient <code>c0</code> in the representation of the field element …\nCoefficient <code>c1</code> in the representation of the field element …\nCoefficient <code>c0</code> in the representation of the field element …\nCoefficient <code>c1</code> in the representation of the field element …\nBETA is a non-trivial cubic root of unity in Fq.\nG1_GENERATOR_X = …\nG1_GENERATOR_Y = …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMulti scalar multiplication jumping into the user-defined …\nAffine multiplication jumping into the user-defined …\nProjective multiplication jumping into the user-defined …\n<code>X / Z</code> projection of the affine <code>X</code>\n<code>Y / Z</code> projection of the affine <code>Y</code>\nProjective multiplicative inverse. Will be <code>0</code> only at …\nG2_GENERATOR_X_C0 = …\nG2_GENERATOR_X_C1 = …\nG2_GENERATOR_Y_C0 = …\nG2_GENERATOR_Y_C1 = …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMulti scalar multiplication jumping into the user-defined …\nAffine multiplication jumping into the user-defined …\nProjective multiplication jumping into the user-defined …\n<code>X / Z</code> projection of the affine <code>X</code>\n<code>Y / Z</code> projection of the affine <code>Y</code>\nProjective multiplicative inverse. Will be <code>0</code> only at …")