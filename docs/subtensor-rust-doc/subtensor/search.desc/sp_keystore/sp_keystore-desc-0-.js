searchState.loadedDescShard("sp_keystore", 0, "Keystore traits\nKeystore error\nPublic key type is not supported\nSomething that generates, stores and provides access to …\nThe keystore extension to register/retrieve from the …\nA shared pointer to a keystore implementation.\nProgramming errors\nKeystore unavailable\nValidation error\nEnable/disable the given code depending on …\nEnable/disable the given code depending on …\nGenerate a new ecdsa key pair for the given key type and …\nReturns all ecdsa public keys for the given key type.\nGenerate an ecdsa signature for a given message.\nGenerate an ecdsa signature for a given pre-hashed message.\nGenerate a new ed25519 key pair for the given key type and …\nReturns all ed25519 public keys for the given key type.\nGenerate an ed25519 signature for a given message.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new instance of <code>KeystoreExt</code>\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nChecks if the private keys for the given public key and …\nInsert a new secret key.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nList all supported keys of a given type.\nCreate a new instance of <code>KeystoreExt</code> using the given …\nConvenience method to sign a message using the given key …\nGenerate a new sr25519 key pair for the given key type and …\nReturns all the sr25519 public keys for the given key type.\nGenerate an sr25519 signature for a given message.\nGenerate an sr25519 VRF pre-output for a given input data.\nGenerate an sr25519 VRF signature for the given data.\nTypes that should only be used for testing!\nA keystore implementation usable in tests.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCreates a new instance of <code>Self</code>.")