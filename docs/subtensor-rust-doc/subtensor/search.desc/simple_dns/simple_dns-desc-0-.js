searchState.loadedDescShard("simple_dns", 0, "Simple DNS\nA request for all records, RFC 1035\nRFC 1035\nAuthoritative Answer - this bit is valid in responses, and …\nA request for a transfer of an entire zone, RFC 1035\nAttempted to perform an invalid operation\nEDNS Version not supported by the responder RFC 6891\nThe CHAOS class, RFC 1035\nPossible CLASS values for a Resource in a DNS packet Each …\nQuery for the specific CLASS\nThe CSNET class (Obsolete - used only for examples in some …\nCharacterString is expressed in one or two ways:\nContains the error value\nFailed to write the packet to the provided buffer\nFormat error - The name server was unable to interpret the …\nHesiod [Dyer 87], RFC 1035\nThe Internet, RFC 1035\nA request for incremental transfer of a zone. RFC 1995\nIncomplete dns packet, should try again after more data …\nCharacter String doesn’t follow RFC rules\nInvalid value for CLASS type\nProvided data is not valid for a DNS Packet\nProvided data is not valid for a header\nInvalid value for QCLASS type\nInvalid value for QTYPE type\nService Name Label doesn’t follow RFC rules\nService Name doesn’t follow RFC rules\nInvalid utf8 string\nInverse query (query a name by IP)\nA request for mail agent RRs (Obsolete - see MX), RFC 1035\nA request for mailbox-related records (MB, MG or MR), RFC …\nRFC 2136\nThe server is not authoritative for the zone named in the …\nA name used in the Prerequisite or Update Section is not …\nSome RRset that ought to exist, does not exist. RFC 2136\nA Name represents a domain-name, which consists of …\nName Error - Meaningful only for responses from an …\nNo error condition\nNot Implemented - The name server does not support the …\nNotify query\nPossible OPCODE values for a DNS packet, use to specify …\nContains the success value\nRepresents a DNS message packet\nPossible Packet Flags\nPossible QCLASS values for a Question in a DNS packet Each …\nPossible QTYPE values for a Question in a DNS packet Each …\nQuestion represents a query in the DNS Packet\nPossible RCODE values for a DNS packet RFC 1035 Response …\nRecursion Available is set or cleared in a response. It …\nRecursion Desired may be set in a query and is copied into …\nIndicates if this packet is a query or a response. This is …\nRefused - The name server refuses to perform the specified …\nReserved opcode for future use\nReserved for future use.\nResource Records are used to represent the answer, …\nAlias type for Result&lt;T, SimpleDnsError&gt;;\nServer failure - The name server was unable to process …\nServer status request\nError types for SimpleDns\nNormal query\nTrunCation - specifies that this message was truncated due …\nPossible TYPE values in DNS Resource Records Each value is …\nQuery for the specific TYPE\nUpdate query RFC 2136\nSome name that ought not to exist, does exist. RFC 2136\nSome RRset that ought not to exist, does exist. RFC 2136\nAditional records section. DO NOT use this field to add …\nGet a flags value with all known bits set.\nAnswers section\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nCreates a new Vec<code>&lt;u8&gt;</code> and write the contents of this …\nCreates a new Vec<code>&lt;u8&gt;</code> and write the contents of this …\nIndicates if this RR is a cache flush\nA <code>CLASS</code> that defines the class of the rdata field\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet the labels that compose this name\nCheck if the packet has flags set\nHelper functions to assert a buffer for the header flags …\nGet packet id\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTransforms the inner data into its owned type\nTransforms the inner data into its owned type\nTransforms the inner data into its owned type\nTransforms the inner data into its owned type\nChanges this packet into a reply packet by replacing its …\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nVerify if name ends with .local.\nReturns true if self is a subdomain of other\nReturns an Iter of this Name Labels\nYield a set of contained flags values.\nYield a set of contained named flags values.\nReturn true if current resource match given query class\nReturn true if current resource match given query type The …\nA <code>Name</code> to which this resource record pertains.\nName servers section\nCreates a new validated CharacterString\nCreates a new validated Name\nCreates a new question\nCreates a new ResourceRecord\nCreates a new empty packet with a query header\nCreates a new empty packet with a reply header\nCreate a new Name without checking for size limits\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nGet this packet OPCODE information\nGet a mutable reference for this packet OPCODE information\nGet the OPT resource record for this packet, if present\nGet a mutable reference for this packet OPT resource …\nParses a packet from a slice of bytes\na QCLASS whire specifics the class of the query, For …\na Name  to query for\na QTYPE which specifies the type of the query.\nQuestions section\nGet this packet RCODE information\nGet a mutable reference for  this packet RCODE information …\nContains RData implementations\nA <code>RData</code> with the contents of this resource record\nThe intersection of a source flags value with the …\nRemove flags present in the packet\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nSet flags in the packet\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nReturns a cloned self with cache_flush = true\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe time interval (in seconds) that the resource record …\nindicates if the queries prefers a unicast response. MDNS …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nConsume self and change the cache_flush bit\nReturns the subdomain part of self, based on <code>domain</code>. If …\nWrite the contents of this package in wire format with …\nWrite the contents of this package in wire format into the …\nReturns the additional records from the header buffer\nReturns the answers count from the header buffer\nVerify if buffer has the flags set. WARNING: This …\nReturns the packet id from the header buffer\nReturns the name servers count from the header buffer\nGet the OPCODE from the buffer\nReturns the questions count from the header buffer\nGet the RCODE from the buffer. WARNING: This information …\nRepresents a Resource Address (IPv4)\nRepresents a Resource Address (IPv6) rfc3596\nAFSDB records represents servers with ASD cells\nRFC 8659: Allow domain name holders to indicate whether …\nCanonical name for an alias, RFC 1035\nHINFO records are used to acquire general information …\nAn ISDN (Integrated Service Digital Network) number is …\nA Means for Expressing Location Information in the Domain …\nMailbox domain name (EXPERIMENTAL), RFC 1035\nMail destination (Obsolete - use MX), RFC 1035\nMail forwarder (Obsolete - use MX), RFC 1035\nMail group member (EXPERIMENTAL), RFC 1035\nMINFO recors are used to acquire mailbox or mail list …\nMail rename domain name (EXPERIMENTAL), RFC 1035\nMX is used to acquire mail exchange information\nAuthoritative name server, RFC 1035\nNSAP structure RFC 1706 ATTENTION: this code doesn’t …\nPTR for NSAP records, RFC 1348\nNULL resources are used to represent any kind of …\nOPT is a pseudo-rr used to carry control information If an …\nRepresents the variable part of an OPT rr\nDomain name pointer, RFC 1035\nRepresents the RData of each <code>TYPE</code>\nRP Responsible Person, RFC 1183\nThe RT resource record provides a route-through binding …\nSOA records are used to mark the start of a zone of …\nSRV records specifies the location of the server(s) for a …\nRepresents a TXT Resource Record\nPossible TYPE values in DNS Resource Records Each value is …\nThe WKS record is used to describe the well known services …\nX.25 address, RFC 1183\nAdministrative Authority\nAdd <code>char_string</code> to this TXT record\nAdd <code>char_string</code> to this TXT record as a validated …\na 32 bit ip address\na 128 bit ip address\nA CharacterString which specifies the address.\nAn 32 bit Internet address\nAuthority and Format Identifier\nThe altitude of the center of the sphere described by the …\nArea Identifier\nReturns parsed attributes from this TXT Record, valid …\nA variable length bit map.  The bit map must be a multiple …\nAssigned by the Expert Review process as defined by the …\nA CharacterString which specifies the CPU type.\nVaries per OPTION-CODE.  MUST be treated as a bit field.\nDSP Format Identifier\nA Name which specifies a mailbox which is to receive error …\nA Name which specifies a host willing to act as a mail …\nA 32 bit time value that specifies the upper limit on the …\nCritical or noncritical indicator\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nget a read only reference to internal data\nThe horizontal precision of the data, in centimeters, …\nThe  field is a name name of a host that has a server for …\nSystem Identifier\nInitial Domain Identifier\nA Name which specifies a host which will serve as an …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTransforms the inner data into its owned type\nTransforms the inner data into its owned type\nTransforms the inner data into its owned type\nTransforms the inner data into it owned type\nTransforms the inner data into its owned type\nTransforms the inner data into its owned type\nTransforms the inner data into its owned type\nTransforms the inner data into its owned type\nTransforms the inner data into its owned type\nTransforms the inner data into its owned type\nTransforms the inner data into its owned type\nTransforms the inner data into its owned type\nTransforms the inner data into its owned type\nTransforms the inner data into its owned type\nTransforms the inner data into its owned type\nTransforms the inner data into its owned type\nTransforms the inner data into its owned type\nTransforms the inner data into its owned type\nTransforms the inner data into its owned type\nTransforms the inner data into its owned type\nTransforms the inner data into its owned type\nTransforms the inner data into its owned type\nTransforms the inner data into its owned type\nTransforms the inner data into its owned type\nTransforms the inner data into its owned type\nTransforms the inner data into its owned type\nTransforms the inner data into its owned type\nTransforms the inner data into its owned type\nTransforms the inner data into its owned type\nTransforms the inner data into its owned type\nThe latitude of the center of the sphere described by the …\nSimilar to <code>attributes()</code> but it parses the full TXT record …\nThe longitude of the center of the sphere described by the …\nA Name which specifies a mailbox for the responsble person.\nThe unsigned 32 bit minimum TTL field that should be …\nThe Name of the name server that was the original or …\nCreates a new NULL rdata\nCreates a new empty TXT Record\nThe variable part of this OPT RR\nA CharacterString which specifies the operating system …\nThe port on this target host of this service\nA 16 bit integer which specifies the preference given to …\nA 16 bit integer which specifies the preference given to …\nThe priority of this target host. A client MUST attempt to …\nAn 8 bit IP protocol number\nRouting Domain Identifier\nA 32 bit time interval before the zone should be refreshed.\nA 32 bit time interval that should elapse before a failed …\nA Name which specifies a mailbox which is responsible for …\nA Name which specifies the mailbox of the person …\nReserved\nA CharacterString which specifies the subaddress.\nNSAP Selector\nThe unsigned 32 bit version number of the original copy of …\nThe diameter of a sphere enclosing the described entity, …\nAn integer that represents the subtype\nProperty described in the VALUE field. One of <code>issue</code>, …\nThe domain name of the target host\nA Name which specifies a domain name the TXT records.\nReturns the <code>TYPE</code> of this RData\nUDP packet size supported by the responder\nValue associated with property tag\nVersion number of the representation.  This must be zero.\nEDNS version supported by the responder\nThe vertical precision of the data, in centimeters, …\nA server selection mechanism. The weight field specifies …\nAdd <code>char_string</code> to this TXT record, consuming and …\nAdd <code>char_string</code> to this TXT record as a validated …")