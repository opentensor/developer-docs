searchState.loadedDescShard("core2", 0, "Traits for working with Errors.\n<code>Error</code> is a trait representing the basic expectations for …\nAttempts to downcast the box to a concrete type.\nAttempts to downcast the box to a concrete type.\nAttempts to downcast the box to a concrete type.\nForwards to the method defined on the type <code>dyn Error</code>.\nForwards to the method defined on the type <code>dyn Error</code>.\nReturns some mutable reference to the boxed value if it is …\nForwards to the method defined on the type <code>dyn Error</code>.\nForwards to the method defined on the type <code>dyn Error</code>.\nReturns some reference to the boxed value if it is of type …\nForwards to the method defined on the type <code>dyn Error</code>.\nForwards to the method defined on the type <code>dyn Error</code>.\nReturns <code>true</code> if the boxed type is the same as <code>T</code>\nThe lower-level source of this error, if any.\nA socket address could not be bound because the address is …\nA nonexistent interface was requested or the requested …\nAn entity already exists, often a file.\nThe operation failed because a pipe was closed.\nA <code>BufRead</code> is a type of <code>Read</code>er which has an internal …\nAn iterator over <code>u8</code> values of a reader.\nAdaptor to chain together two readers.\nThe connection was aborted (terminated) by the remote …\nThe connection was refused by the remote server.\nThe connection was reset by the remote server.\nSets the offset to the current position plus the specified …\nA <code>Cursor</code> wraps an in-memory buffer and provides it with a …\nSets the offset to the size of this object plus the …\nContains the error value\nThe error type for I/O operations of the <code>Read</code>, <code>Write</code>, <code>Seek</code>…\nA list specifying general categories of I/O error.\nThis operation was interrupted.\nData not valid for the operation were encountered.\nA parameter was incorrect.\nThe network operation failed because it was not connected …\nAn entity was not found, often a file.\nContains the success value\nAny I/O error not part of this list.\nThe operation lacked the necessary privileges to complete.\nThe <code>Read</code> trait allows for reading bytes from a source.\nA specialized <code>Result</code> type for I/O operations.\nThe <code>Seek</code> trait provides a cursor which can be moved within …\nEnumeration of possible methods to seek within an I/O …\nSets the offset to the provided number of bytes.\nReader adaptor which limits the bytes read from an …\nThe I/O operation’s timeout expired, causing it to be …\nAn error returned when an operation could not be completed …\nThe operation needs to block to complete, but the blocking …\nA trait for objects which are byte-oriented sinks.\nAn error returned when an operation could not be completed …\nCreates a “by reference” adaptor for this instance of …\nCreates a “by reference” adaptor for this instance of …\nCreates a “by reference” adaptor for this instance of …\nCreates a “by reference” adaptor for this instance of …\nTransforms this <code>Read</code> instance to an <code>Iterator</code> over its …\nTransforms this <code>Read</code> instance to an <code>Iterator</code> over its …\nCreates an adaptor which will chain this stream with …\nCreates an adaptor which will chain this stream with …\nTells this buffer that <code>amt</code> bytes have been consumed from …\nReturns the contents of the internal buffer, filling it …\nFlush this output stream, ensuring that all intermediately …\nReturns the argument unchanged.\nConverts an <code>ErrorKind</code> into an <code>Error</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets mutable references to the underlying readers in this …\nGets a mutable reference to the underlying value in this …\nGets a mutable reference to the underlying reader.\nReturns a reference to the inner error wrapped by this …\nGets references to the underlying readers in this <code>Chain</code>.\nGets a reference to the underlying value in this cursor.\nGets a reference to the underlying reader.\nDetermines if this <code>Read</code>er can work with buffers of …\nDetermines if this <code>Read</code>er can work with buffers of …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes the <code>Error</code>, returning its inner error (if any).\nConsumes the <code>Chain</code>, returning the wrapped readers.\nConsumes this cursor, returning the underlying value.\nConsumes the <code>Take</code>, returning the wrapped reader.\nReturns the corresponding <code>ErrorKind</code> for this error.\nReturns the number of bytes that can be read before this …\nCreates a new I/O error from a known kind of error as well …\nCreates a new cursor wrapping the provided underlying …\nReturns the current position of this cursor.\nPull some bytes from this source into the specified …\nRead the exact number of bytes required to fill <code>buf</code>.\nRead the exact number of bytes required to fill <code>buf</code>.\nRead all bytes until EOF in this source, placing them into …\nRead all bytes until EOF in this source, placing them into …\nSeek to an offset, in bytes, in a stream.\nSets the number of bytes that can be read before this …\nSets the position of this cursor.\nCreates an adaptor which will read at most <code>limit</code> bytes …\nCreates an adaptor which will read at most <code>limit</code> bytes …\nWrite a buffer into this writer, returning how many bytes …\nAttempts to write an entire buffer into this writer.\nAttempts to write an entire buffer into this writer.\nWrites a formatted string into this writer, returning any …\nWrites a formatted string into this writer, returning any …")