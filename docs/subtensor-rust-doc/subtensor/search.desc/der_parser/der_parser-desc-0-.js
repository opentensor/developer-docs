searchState.loadedDescShard("der_parser", 0, "License: MIT Apache License 2.0 docs.rs crates.io Download …\nContains the error value\nHolds the result of parsing functions\nObject ID (OID) representation which can be relative or …\nContains the success value\nGet the encoded oid without the header.\nBasic Encoding Rules (BER) objects and parser\nGet the encoded oid without the header.\nDistinguished Encoding Rules (DER) objects and parser\nError type for BER/DER parsers\nBuild an OID from an array of object identifier components.\nReturns the argument unchanged.\nBuild a relative OID from an array of object identifier …\nCalls <code>U::from(self)</code>.\nGet the bytes representation of the encoded oid\nReturn an iterator over the sub-identifiers (arcs). …\nCreate an OID from the ASN.1 DER encoded form. See the …\nCreate a relative OID from the ASN.1 DER encoded form. See …\nProcedural macro to get encoded oids, see the oid module.\nReturns true if <code>needle</code> is a prefix of the OID.\nConvert the OID to a string representation.\nCreate a deep copy of the oid.\n<code>Application</code> class of tags (<code>0b01</code>)\n<code>Application</code> class of tags (<code>0b01</code>)\nRepresentation of a BER-encoded (X.690) object\nBER object content\nBIT STRING: number of unused bits, and object\nBitString wrapper\nBmpString: decoded string\nBOOLEAN: decoded value\n<code>Context-Specific</code> class of tags (<code>0b10</code>)\nBER Object class of tag\n<code>Context-Specific</code> class of tags (<code>0b10</code>)\nDefinite form (X.690 8.1.3.3)\nEOC (no content)\nENUMERATED: decoded enum number\nGeneralString: decoded string\nGeneralizedTime: decoded string\nGraphicString: decoded string\nBER/DER object header (identifier and length)\nIA5String: decoded string\nIndefinite form (X.690 8.1.3.6)\nINTEGER: raw bytes\nBER Object Length\nDefault maximum object size (2^32)\nDefault maximum recursion limit\nNULL (no content)\nNumericString: decoded string\nOID\nObject descriptor: decoded string\nOCTET STRING: slice\nOptional object\n<code>Private</code> class of tags (<code>0b11</code>)\nPretty-print BER object\nPrintableString: decoded string\n<code>Private</code> class of tags (<code>0b11</code>)\nRELATIVE OID\nSEQUENCE: list of objects\nSET: list of objects\nT61String: decoded string\nBER/DER Tag as defined in X.680 section 8.4\nTagged object (EXPLICIT): class, tag  and content of inner …\n<code>Universal</code> class of tags (<code>0b00</code>)\nUTCTime: decoded string\nUTF8String: decoded string\n<code>Universal</code> class of tags (<code>0b00</code>)\nUniversalString: raw object bytes\nPrivate or Unknown (for ex. unknown tag) object\nVideotexString: decoded string\nVisibleString: decoded string\nBER object tree traversal to walk a shared borrow of a BER …\nBER object tree traversal to walk a shared borrow of a BER …\nAttempt to read an integer value from this object.\nAttempt to read a positive integer value from this object.\nAttempt to read a BitString value from DER object. This …\nAttempt to read a reference to a BitString value from DER …\nAttempt to read integer value from DER object. This can …\nAttempt to read a signed integer value from DER object.\nAttempt to read a signed integer value from this object.\nAttempt to read a signed integer value from DER object.\nAttempt to read a signed integer value from this object.\nAttempt to read an OID value from DER object. This can …\nAttempt to read an OID value from DER object. This can …\nAttempt to get a reference on the content from an optional …\nAttempt to extract the list of objects from a DER sequence.\nAttempt to extract the list of objects from a DER set. …\nAttempt to get the content from a DER object, as a slice. …\nAttempt to get the content from a DER object, as a str. …\nAttempt to get a reference on the content from a tagged …\nAttempt to read integer value from DER object.\nAttempt to read integer value from this object.\nAttempt to read integer value from DER object.\nAttempt to read integer value from this object.\nReturn error if <code>class</code> is not the expected class\nReturn error if class is not the expected class\nReturn error if object is not constructed\nReturn error if object is primitive\nReturn error if object length is definite\nReturn error if length is not definite\nReturn error if object is not primitive\nReturn error if object is not primitive\nReturn error if <code>tag</code> is not the expected tag\nReturn error if tag is not the expected tag\nParse the next bytes as the <em>content</em> of a BER object.\nRead an object header\nGet the BER object header’s class.\nReturn the class of this header.\nCompatibility module for old (pre-7.0) types\nReturn true if this header has the ‘constructed’ flag.\nGet length of primitive object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBuild a BerObject from a header and content.\nBuild a DER integer object from a slice containing an …\nBuild a BerObject from its content, using default flags …\nBuild a DER sequence object from a vector of DER objects\nBuild a DER set object from a vector of DER objects\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTest if object class is Application\nTest if object class is Application\nTest if object is constructed\nTest if object is constructed\nTest if object class is Context-specific\nTest if object class is Context-specific\nReturn true if length is definite\nReturn true if length is definite and equal to 0\nTest if object is primitive\nTest if object is primitive\nTest if object class is Private\nTest if object class is Private\nTest if bit <code>bitnum</code> is set\nTest if object class is Universal\nTest if object class is Universal\nGet the BER object header’s length.\nReturn the length of this header.\nBuild a new BER/DER header from the provided values\nBuild a new BER/DER header from the provided tag, with …\nParse BER object recursively\nParse any BER object (not recursive)\nParse any BER object recursively, specifying the maximum …\nParse any BER object recursively, specifying the maximum …\nRead an bitstring value\nRead a BmpString value\nRead a boolean value\nParse a BER object and apply provided function to content\nParse the next bytes as the content of a BER object …\nGet the content following a BER header\nParse the next bytes as the content of a BER object …\nRead end of content marker\nRead an enumerated value\nParse an optional tagged object, applying function to get …\nRead a Generalized time value\nRead a GeneralString value\nRead a GraphicString value\nParse BER object and try to decode it as a 32-bits signed …\nParse BER object and try to decode it as a 64-bits signed …\nRead an IA5 string value. The content is verified to be …\nParse an implicit tagged object, applying function to read …\nRead an integer value\nRead a null value\nRead a numeric string value. The content is verified to …\nRead an ObjectDescriptor value\nRead an octetstring value\nRead an object identifier value\nCombinator for building optional BER values\nRead a printable string value. The content is verified to …\nParse BER object recursively, specifying the maximum …\nRead a relative object identifier value\nParse a sequence of BER elements\nParse a defined sequence of DER elements (function version)\nParse a defined SEQUENCE object (generic function)\nParse a SEQUENCE OF object\nParse a SEQUENCE OF object (returning a vec)\nParse a set of BER elements\nParse a defined set of DER elements (function version)\nParse a defined SET object (generic version)\nParse a SET OF object\nParse a SET OF object (returning a vec)\nParse BER object and get content as slice\nRead a T61 string value\nRead a TAGGED EXPLICIT value (combinator)\nRead a TAGGED EXPLICIT value (generic version)\nRead a TAGGED IMPLICIT value (combinator)\nRead a TAGGED IMPLICIT value (generic version)\nParse BER object and try to decode it as a 32-bits …\nParse BER object and try to decode it as a 64-bits …\nRead a UniversalString value\nRead an UTC time value\nRead a UTF-8 string value. The encoding is checked.\nRead a Videotex string value\nRead a visible string value. The content is verified to …\nParse a BER object, expecting a value with specified tag\nGet the content following a DER header\nReturn the raw tag encoding, if it was stored in this …\nPerform a BFS traversal of the BER object, calling the …\nPerform a BFS traversal of the BER object, calling the …\nPerform a BFS traversal of the BER object, calling the …\nPerform a BFS traversal of the BER object, calling the …\nPerform a BFS traversal of the BER object, calling the …\nPerform a BFS traversal of the BER object, calling the …\nPerform a BFS traversal of the BER object, calling the …\nPerform a BFS traversal of the BER object, calling the …\nSet a tag for the BER object\nGet the BER object header’s tag.\nReturn the tag of this header.\nCalled for every BER object\nCalled for every BER object\nCalled for BER bitstring objects\nCalled for BER bitstring objects\nCalled for BER bitstring objects\nCalled for BER bitstring objects\nCalled for BER bmpstring objects\nCalled for BER bmpstring objects\nCalled for BER bmpstring objects\nCalled for BER bmpstring objects\nCalled for BER boolean objects\nCalled for BER boolean objects\nCalled for BER boolean objects\nCalled for BER boolean objects\nCalled for BER end-of-content objects\nCalled for BER end-of-content objects\nCalled for BER end-of-content objects\nCalled for BER end-of-content objects\nCalled for BER enum objects\nCalled for BER enum objects\nCalled for BER enum objects\nCalled for BER enum objects\nCalled for BER generalizedtime objects\nCalled for BER generalizedtime objects\nCalled for BER generalizedtime objects\nCalled for BER generalizedtime objects\nCalled for BER generalstring objects\nCalled for BER generalstring objects\nCalled for BER generalstring objects\nCalled for BER generalstring objects\nCalled for BER graphicstring objects\nCalled for BER graphicstring objects\nCalled for BER graphicstring objects\nCalled for BER graphicstring objects\nCalled for BER ia5string objects\nCalled for BER ia5string objects\nCalled for BER ia5string objects\nCalled for BER ia5string objects\nCalled for BER integer objects\nCalled for BER integer objects\nCalled for BER integer objects\nCalled for BER integer objects\nCalled for every BER object\nCalled for every BER object\nCalled for BER null objects\nCalled for BER null objects\nCalled for BER null objects\nCalled for BER null objects\nCalled for BER numericstring objects\nCalled for BER numericstring objects\nCalled for BER numericstring objects\nCalled for BER numericstring objects\nCalled for BER object descriptor objects\nCalled for BER object descriptor objects\nCalled for BER object descriptor objects\nCalled for BER object descriptor objects\nCalled for BER octetstring objects\nCalled for BER octetstring objects\nCalled for BER octetstring objects\nCalled for BER octetstring objects\nCalled for BER OID objects\nCalled for BER OID objects\nCalled for BER OID objects\nCalled for BER OID objects\nCalled for BER optional objects\nCalled for BER optional objects\nCalled for BER optional objects\nCalled for BER optional objects\nCalled for BER printablestring objects\nCalled for BER printablestring objects\nCalled for BER printablestring objects\nCalled for BER printablestring objects\nCalled for BER relative OID objects\nCalled for BER relative OID objects\nCalled for BER relative OID objects\nCalled for BER relative OID objects\nCalled for BER sequence objects\nCalled for BER sequence objects\nCalled for BER sequence objects\nCalled for BER sequence objects\nCalled for BER set objects\nCalled for BER set objects\nCalled for BER set objects\nCalled for BER set objects\nCalled for BER tagged objects\nCalled for BER tagged objects\nCalled for BER tagged objects\nCalled for BER tagged objects\nCalled for BER teletexstring objects\nCalled for BER teletexstring objects\nCalled for BER teletexstring objects\nCalled for BER teletexstring objects\nCalled for BER universalstring objects\nCalled for BER universalstring objects\nCalled for BER universalstring objects\nCalled for BER universalstring objects\nCalled for BER unknown objects\nCalled for BER unknown objects\nCalled for BER unknown objects\nCalled for BER unknown objects\nCalled for BER generalizedtime objects\nCalled for BER generalizedtime objects\nCalled for BER generalizedtime objects\nCalled for BER generalizedtime objects\nCalled for BER utf8string objects\nCalled for BER utf8string objects\nCalled for BER utf8string objects\nCalled for BER utf8string objects\nCalled for BER videotexstring objects\nCalled for BER videotexstring objects\nCalled for BER videotexstring objects\nCalled for BER videotexstring objects\nCalled for BER visiblestring objects\nCalled for BER visiblestring objects\nCalled for BER visiblestring objects\nCalled for BER visiblestring objects\nSet the class of this <code>Header</code>\nSet the constructed flags of this <code>Header</code>\nSet the length of this <code>Header</code>\nUpdate header to add reference to raw tag\nSet the tag of this <code>Header</code>\n<code>Application</code> class of tags (<code>0b01</code>)\n<code>Context-Specific</code> class of tags (<code>0b10</code>)\nDefinite form (X.690 8.1.3.3)\nIndefinite form (X.690 8.1.3.6)\n<code>Private</code> class of tags (<code>0b11</code>)\nBER/DER Tag as defined in X.680 section 8.4\n<code>Universal</code> class of tags (<code>0b00</code>)\n<code>Application</code> class of tags (<code>0b01</code>)\n<code>Application</code> class of tags (<code>0b01</code>)\nBIT STRING: number of unused bits, and object\nBmpString: decoded string\nBOOLEAN: decoded value\nBER Object class of tag\n<code>Context-Specific</code> class of tags (<code>0b10</code>)\n<code>Context-Specific</code> class of tags (<code>0b10</code>)\nDER Object class of tag (same as <code>BerClass</code>)\nRepresentation of a DER-encoded (X.690) object\nBER object content\nDER object header (identifier and length)\nDER tag (same as BER tag)\nEOC (no content)\nENUMERATED: decoded enum number\nGeneralString: decoded string\nGeneralizedTime: decoded string\nGraphicString: decoded string\nBER/DER object header (identifier and length)\nIA5String: decoded string\nINTEGER: raw bytes\nNULL (no content)\nNumericString: decoded string\nOID\nObject descriptor: decoded string\nOCTET STRING: slice\nOptional object\nPrintableString: decoded string\n<code>Private</code> class of tags (<code>0b11</code>)\n<code>Private</code> class of tags (<code>0b11</code>)\nRELATIVE OID\nSEQUENCE: list of objects\nSET: list of objects\nT61String: decoded string\nBER/DER Tag as defined in X.680 section 8.4\nTagged object (EXPLICIT): class, tag  and content of inner …\nUTCTime: decoded string\nUTF8String: decoded string\n<code>Universal</code> class of tags (<code>0b00</code>)\n<code>Universal</code> class of tags (<code>0b00</code>)\nUniversalString: raw object bytes\nPrivate or Unknown (for ex. unknown tag) object\nVideotexString: decoded string\nVisibleString: decoded string\nParse DER object content recursively\nParse the next bytes as the content of a DER object.\nRead an object header (DER)\nParse DER object recursively\nRead an bitstring value\nRead a BmpString value\nRead a boolean value\nParse a DER object and apply provided function to content\nParse the next bytes as the content of a DER object …\nParse the next bytes as the content of a DER object …\nRead end of content marker\nRead an enumerated value\nParse an optional tagged object, applying function to get …\nRead a Generalized time value\nRead a GeneralString value\nRead a GraphicString value\nParse DER object and try to decode it as a 32-bits signed …\nParse DER object and try to decode it as a 64-bits signed …\nRead an IA5 string value. The content is verified to be …\nParse an implicit tagged object, applying function to read …\nRead an integer value\nRead a null value\nRead a numeric string value. The content is verified to …\nRead a ObjectDescriptor value\nRead an octetstring value\nRead an object identifier value\nRead a printable string value. The content is verified to …\nParse DER object recursively, specifying the maximum …\nRead a relative object identifier value\nParse a sequence of DER elements\nParse a defined sequence of DER elements (function version)\nParse a defined SEQUENCE object (generic function)\nParse a SEQUENCE OF object\nParse a SEQUENCE OF object (returning a vec)\nParse a set of DER elements\nParse a defined set of DER elements (function version)\nParse a defined SET object (generic version)\nParse a SET OF object\nParse a SET OF object (returning a vec)\nParse DER object and get content as slice\nRead a T61 string value\nRead a TAGGED EXPLICIT value (combinator)\nRead a TAGGED EXPLICIT value (generic version)\nRead a TAGGED IMPLICIT value (combinator)\nRead a TAGGED IMPLICIT value (generic version)\nParse DER object and try to decode it as a 32-bits …\nParse DER object and try to decode it as a 64-bits …\nRead a UniversalString value\nRead an UTC time value\nRead a UTF-8 string value. The encoding is checked.\nRead a Videotex string value\nRead a printable string value. The content is verified to …\nParse a DER object, expecting a value with specified tag\nBER recursive parsing reached maximum depth\nBER recursive parsing reached maximum depth\nHolds the result of parsing functions\nBER object does not have the expected type\nBER object does not have the expected type\nBER object does not have the expected value\nBER object does not have the expected value\nDER object was expected to be constructed (and found to be …\nDER object was expected to be constructed (and found to be …\nDER object was expected to be primitive (and found to be …\nDER object was expected to be primitive (and found to be …\nObject must not be constructed\nError types for DER constraints\nDER Failed constraint: {0:?}\nDER Failed constraint: {0:?}\nHolds the result of parsing functions (DER)\nContains the error value\nContains the error value\nThe error type for operations of the <code>FromBer</code>, <code>FromDer</code>, and …\nincomplete data, missing: {0:?}\nincomplete data, missing: {0:?}\nIndefinite length not allowed\nIndefinite length not allowed\nIndefinite length not allowed\nInteger must not be empty\nLeading 0xff in negative Integer encoding\nLeading zeroes in Integer encoding\nBER integer is negative, while an unsigned integer was …\nBER integer is negative, while an unsigned integer was …\nInteger too large to fit requested type\nInteger too large to fit requested type\nBoolean value must be 0x00 of 0xff\nInvalid Date or Time\nInvalid Date or Time\nInvalid Length\nInvalid Length\nInvalid Tag\nInvalid Tag\nInvalid Value when parsing object with tag {tag:?} {msg:}\nInvalid Value when parsing object with tag {tag:?} {msg:}\nRequesting borrowed data from a temporary object\nRequesting borrowed data from a temporary object\nDateTime object is missing seconds\nDateTime object is missing timezone\nnom error: {0:?}\nnom error: {0:?}\nObject must be constructed\nContains the success value\nContains the success value\nInvalid encoding or forbidden characters in string\nInvalid encoding or forbidden characters in string\nUnexpected Class (expected: {expected:?}, actual: …\nUnexpected Class (expected: {expected:?}, actual: …\nUnexpected Tag (expected: {expected:?}, actual: {actual:?})\nUnexpected Tag (expected: {expected:?}, actual: {actual:?})\nUnknown tag: {0:?}\nUnknown tag: {0:?}\nFeature is not yet implemented\nFeature is not yet implemented\nBitstring unused bits must be set to zero\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBuild an error from the provided invalid value\nBuild an error from the provided unexpected class\nBuild an error from the provided unexpected tag\nObject ID (OID) representation which can be relative or …")