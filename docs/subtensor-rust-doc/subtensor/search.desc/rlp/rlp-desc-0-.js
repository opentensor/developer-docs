searchState.loadedDescShard("rlp", 0, "Recursive Length Prefix serialization crate.\nCustom rlp decoding error.\nValue\nRLP decodable trait\nError concerning the RLP decoder.\nThe RLP encoded empty list.\nStructure encodable to RLP\nList\nThe RLP encoded empty data (used to mean “null value”).\nEmpty\nStores basic information about item\nRLP prototype\nData-oriented view onto rlp-slice.\nData length number has a prefixed zero byte, invalid for …\nExpect encoded data, RLP was something else.\nExpect an encoded list, RLP was something else.\nDeclared length is inconsistent with data specified after.\nExpected a different size list.\nNon-canonical (longer than necessary) representation used …\nDeclared length is invalid and results in overflow\nData has additional bytes at the end of the valid RLP …\nData has too few bytes for valid RLP.\nIterator over rlp-slice list elements.\nList length number has a prefixed zero byte, invalid for …\nAppendable rlp encoder.\nAppends value to the end of stream, chainable.\nApends null to the end of stream, chainable.\nAppends value to the end of stream, but do not count it as …\nAppends iterator to the end of stream, chainable.\nAppends list of values to the end of stream, chainable.\nAppends raw (pre-serialised) RLP data. Use with caution. …\nAppends raw (pre-serialised) RLP data. Checks for size …\nGet raw encoded bytes\nReturns an Rlp item in a list at the given index.\nReturns an Rlp item in a list at the given index along …\nDeclare appending the list of given size, chainable.\nDeclare appending the list of unknown size, chainable.\nClear the output stream so far.\nShortcut function to decode trusted rlp\nDecode a value from RLP bytes\nShortcut function to encode structure into rlp.\nCalculate total RLP size for appended payload.\nFinalize current unbounded list. Panics if no unbounded …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new object from the given bytes RLP. The bytes\nReturns the argument unchanged.\nHeader length in bytes\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if stream doesnt expect any more items.\nReturns current RLP size in bytes for the data pushed into …\nInitializes instance of empty <code>Stream</code>.\nInitializes the <code>Stream</code> as a list.\nInitializes the <code>Stream</code> as a list.\nInitializes instance of empty <code>Stream</code>.\nStreams out encoded bytes.\nAppend a value to the stream\nGet rlp-encoded bytes for this instance\nGet rlp-encoded bytes for this instance\nTotal size of the RLP.\nValue length in bytes")