searchState.loadedDescShard("pallet_drand", 0, "Drand Bridge Pallet\nDefines application identifier for crypto keys of this …\nthe drand quicknet chain hash quicknet uses ‘Tiny’ …\nBased on the above <code>KeyTypeId</code> we need to generate a …\nconstruct a message (e.g. signed by drand)\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nA collection of verifiers\nAn optimized way to verify Drand pulses from quicket …\nA generic <code>AppPublic</code> wrapper type over $pair crypto; this …\nA generic <code>AppPublic</code> wrapper type over $public crypto; this …\nA generic <code>AppPublic</code> wrapper type over $public crypto; this …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert into wrapped generic public key type.\nConvert into wrapped generic signature type.\nConvert into wrapped generic key pair type.\nThe identifier type for an offchain worker.\nthe drand beacon configuration\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nfailed to connect to the\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe maximum number of milliseconds we are willing to wait …\nthe round number did not increment\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nSuccessfully set a new pulse(s).\nThe value retrieved was <code>None</code> as no value was previously …\nThe <code>Pallet</code> struct, the main type that implements traits …\nthe pulse could not be verified\nmap round number to pulse\nThe overarching runtime event type.\nThere was an attempt to increment the value in storage …\nA configuration for base priority of unsigned transactions.\nthe pulse is invalid\nsomething that knows how to verify beacon pulses\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>set_beacon_config</code>.\nCreate a call with the variant <code>write_pulse</code>.\nget the randomness at a specific block height returns […\nallows the root user to set the beacon configuration …\nallows the root user to set the beacon configuration …\nAuto-generated docs-only module listing all (public and …\nValidate unsigned call to this module.\nVerify and write a pulse from the beacon into the runtime\nVerify and write a pulse from the beacon into the runtime\nallows the root user to set the beacon configuration …\nVerify and write a pulse from the beacon into the runtime\nthe drand beacon configuration\nWarning: Doc-Only\nDefines the block when next unsigned transaction will be …\nmap round number to pulse\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA drand chain configuration\nPayload used by to hold the beacon config required to …\nthe expected response body from the drand api endpoint …\nan opaque hash type\na pulse from the drand beacon the expected response body …\nmetadata for the drand beacon configuration\nmetadata associated with the drand info response\nRepresents an opaque public key used in drand’s quicknet\nA pulse from the drand beacon\nPayload used by to hold the pulse data required to submit …\nthe round number to track rounds of the beacon\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nthe sha256 hash of the signature\nthe sha256 hash of the signature\nthe randomness round number\nthe randomness round number\nBLS sig for the current round\nBLS sig for the current round\nthe default configuration fetches from quicknet\nA verifier to check values received from quicknet. It …\nThe unsafe skip verifier is just a pass-through …\nsomething to verify beacon pulses\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nverify the given pulse using beacon_config")