searchState.loadedDescShard("forwarded_header_value", 0, "This module implements parsing for the Forwarded header as …\nThis structure represents the contents of the Forwarded …\nIterator over stanzas in a ForwardedHeaderValue\nErrors that can occur while parsing a ForwardedHeaderValue\nA single forwarded-for line; there may be a sequence of …\nHTTP\nHTTPS\nRemote identifier. This can be an IP:port pair, a bare IP, …\nHTTP protocol from the remote host\nGet the forwarded-by IP, if one is present\nGet the forwarded-for IP, if one is present\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nParse the value from a Forwarded header into this structure\nParse the value from an X-Forwarded-For header into this …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the value closest to this system (the right-most …\nGet the value farthest from this system (the left-most …\nReturn the IP address for this identifier, if there is …\nThis can never be empty\nIterate through all ForwardedStanzas\nThe number of valid stanzas in this value\nGet the value closest to this system (the right-most …\nReturn the rightmost non-empty forwarded-for IP, if one is …\nGet the value farthest from this system (the left-most …\nReturn the leftmost forwarded-for IP, if one is present")