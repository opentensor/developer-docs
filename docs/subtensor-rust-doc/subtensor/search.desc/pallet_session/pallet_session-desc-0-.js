searchState.loadedDescShard("pallet_session", 0, "Session Pallet\nWraps the author-scraping logic for consensus engines that …\nAll the key type ids this session handler can process.\nEnds the session after a fixed period of blocks.\nHandler for session life cycle events.\nA trait for managing creation of new validator set.\nDecides whether the session should be ended.\n<code>SessionHandler</code> for tests that use <code>UintAuthorityId</code> as <code>Keys</code>.\nEnd the session.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPlan a new session, and optionally provide the new …\nSame as <code>new_session</code>, but it this should only be called at …\nA notification for end of the session.\nA validator got disabled. Act accordingly until a new …\nThe given validator set will be used for the genesis …\nSession set has changed; act appropriately. Note that this …\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nReturn <code>true</code> if the session should be ended.\nStart an already planned session.\nAutogenerated weights for <code>pallet_session</code>\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nCurrent index of the session.\nIndices of disabled validators.\nRegistered duplicate key.\nError for the session pallet.\nThe <code>Event</code> enum of this pallet\nCan be used to configure the genesis state of this pallet.\nInvalid ownership proof.\nThe owner of a key. The key is the <code>KeyTypeId</code> + the encoded …\nThe keys.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nNew session has happened. Note that the argument is the …\nThe next session keys for a validator.\nSomething that can predict the next session rotation. This …\nKey setting account is not live, so it’s impossible to …\nNo associated validator ID for account.\nNo keys are associated with this account.\nThe <code>Pallet</code> struct, the main type that implements traits …\nTrue if the underlying economic identities or weighting …\nThe queued keys for the next session. When the next …\nThe overarching event type.\nHandler when a session has changed.\nHandler for managing new session.\nIndicator for when to end the session.\nA stable ID for a validator.\nA conversion from account ID to validator ID.\nThe current set of validators.\nWeight information for extrinsics in this pallet.\nPublic function to access the current session index.\nDisable the validator identified by <code>c</code>. (If using with the …\nDisable the validator of index <code>i</code>, returns <code>false</code> if the …\nPublic function to access the disabled validators.\nAuto-generated docs-only module listing all defined …\nThis session pallet always calls new_session and …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nQuery the owner of a session key by returning the owner’…\nInitial list of validator at genesis representing by their …\nCreate a call with the variant <code>purge_keys</code>.\nCreate a call with the variant <code>set_keys</code>.\nList of (AccountId, ValidatorId, Keys) that will be …\nCalled when a block is initialized. Will rotate session if …\nRemoves any session key(s) of the function caller.\nRemoves any session key(s) of the function caller.\nPublic function to access the queued keys.\nMove on to next session. Register new validator set and …\nSets the session key(s) of the function caller to <code>keys</code>. …\nSets the session key(s) of the function caller to <code>keys</code>. …\nAuto-generated docs-only module listing all (public and …\nUpgrade the key type from some old type to a new type. …\nPublic function to access the current set of validators.\nRemoves any session key(s) of the function caller.\nSets the session key(s) of the function caller to <code>keys</code>. …\nCurrent index of the session.\nIndices of disabled validators.\nThe owner of a key. The key is the <code>KeyTypeId</code> + the encoded …\nThe next session keys for a validator.\nTrue if the underlying economic identities or weighting …\nThe queued keys for the next session. When the next …\nThe current set of validators.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWeights for <code>pallet_session</code> using the Substrate node and …\nWeight functions needed for <code>pallet_session</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: <code>Staking::Ledger</code> (r:1 w:0) Proof: <code>Staking::Ledger</code> (…\nStorage: <code>Staking::Ledger</code> (r:1 w:0) Proof: <code>Staking::Ledger</code> (…")