searchState.loadedDescShard("pallet_commitments", 0, "Returns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nAutogenerated weights for <code>pallet_commitments</code>\nAccount is not allowed to make commitments to the chain\nContains a variant per dispatchable extrinsic that this …\nInterface to access-limit metadata commitments\nA commitment was set\nA timelock-encrypted commitment was auto-revealed\nConfiguration trait of this pallet.\nCurrency type that will be used to reserve deposits for …\nThe default Maximum Space\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe amount held on deposit per additional field for a …\nUsed to retrieve the given subnet’s tempo\nThe amount held on deposit for a registered identity\nThe maximum number of additional fields that can be added …\nStorage type is <code>StorageValue</code> with value type <code>u32</code>.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nInterface to trigger other pallets when metadata is …\nThe <code>Pallet</code> struct, the main type that implements traits …\nBecause this pallet emits events, it depends on the runtime…\nSpace Limit Exceeded for the current interval\nUsed to retrieve the given subnet’s tempo\nA timelock-encrypted commitment was set\nTracks all CommitmentOf that have at least one timelocked …\nAccount passed too many additional fields to their …\nIndicates that unreserve returned a leftover, which is …\nMaps (netuid, who) -&gt; usage (how many “bytes” they’…\nWeight information for extrinsics in this pallet.\nThe default Maximum Space\nAn auto-generated getter for <code>CommitmentOf</code>.\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nUsed to retreive the epoch index for the given subnet.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn auto-generated getter for <code>LastBondsReset</code>.\nAn auto-generated getter for <code>LastCommitment</code>.\nAn auto-generated getter for <code>MaxSpace</code>.\nCreate a call with the variant <code>set_commitment</code>.\nCreate a call with the variant <code>set_max_space</code>.\nCreate a call with the variant <code>set_rate_limit</code>.\nAn auto-generated getter for <code>RevealedCommitments</code>.\nSet the commitment for a given netuid\nSet the commitment for a given netuid\nSudo-set MaxSpace\nSudo-set MaxSpace\n<em>DEPRECATED</em> Sudo-set the commitment rate limit\n<em>DEPRECATED</em> Sudo-set the commitment rate limit\nAuto-generated docs-only module listing all (public and …\nAn auto-generated getter for <code>TimelockedIndex</code>.\nAn auto-generated getter for <code>UsedSpaceOf</code>.\nThe netuid of the commitment\nThe netuid of the commitment\nThe netuid of the commitment\nThe drand round to reveal\nThe account\nThe account\nThe account\nSet the commitment for a given netuid\nSudo-set MaxSpace\n<em>DEPRECATED</em> Sudo-set the commitment rate limit\nIdentity data by account\nWarning: Doc-Only\nWarning: Doc-Only\nWarning: Doc-Only\nWarning: Doc-Only\nTracks all CommitmentOf that have at least one timelocked …\nMaps (netuid, who) -&gt; usage (how many “bytes” they’…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe data is stored directly (up to 512 bytes).\nOnly the Blake2 hash of the data is stored. The preimage …\nRepresents stored data which can be:\nOnly the Keccak-256 hash of the data is stored. The …\nMaximum size of the serialized timelock commitment in bytes\nNo data here.\nThe data is stored directly (up to 128 bytes).\nInformation concerning the identity of the controller of …\nFlag to trigger bonds reset for subnet\nContains the decrypted data of a revealed commitment.\nOnly the SHA2-256 hash of the data is stored. The preimage …\nOnly the SHA3-256 hash of the data is stored. The preimage …\nA timelock-encrypted commitment with a reveal round.\nTracks how much “space” each (netuid, who) has used …\nAmount held on deposit for this information.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nInformation on the identity.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if this is a timelock-encrypted commitment.\nLast epoch block\nSpace used\nWeights for <code>pallet_commitments</code> using the Substrate node …\nWeight functions needed for <code>pallet_commitments</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: Commitments LastCommitment (r:1 w:1) Proof …\nSudo setting rate limit for commitments")