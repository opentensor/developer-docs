searchState.loadedDescShard("pallet_evm", 0, "EVM Pallet\nBasic account information.\nTrait to be implemented for evm address mapping.\nType alias for currency balance.\nThe transaction balance is too low\nA trait for getting a block hash by number.\nThe environment explicitly set call errors as fatal error.\nCall stack is too deep (runtime).\nContext of the runtime.\nCreate opcode encountered collision (runtime).\nCreate init code exceeds limit (runtime).\nAttempt to create an empty account (runtime, unused).\nEncountered the designated invalid opcode.\nImplements the transaction payment for a pallet …\nImplements transaction payment for a pallet implementing …\nEnsure that the address is AccountId20.\nEnsure that the origin never happens.\nEnsure that the origin is root.\nEnsure that the EVM address is the same as the Substrate …\nEnsure that the address is truncated hash of the origin. …\nContains the error value\nMachine returns a normal EVM error.\nReverts the state changes and consume all the gas.\nRuntime configuration.\nExit error reason.\nExit fatal reason.\nExit reason.\nExit revert reason.\nExit succeed reason.\nMachine encountered an error that is not supposed to be …\nMark this failure as fatal, and all EVM execution stacks …\nTrait that outputs the current transaction gas price.\nThe transaction gas limit is too hign\nThe transaction gas limit is too low\nThe transaction gas price is too low\nA mapping function that converts Ethereum gas to Substrate …\nHashed address mapping.\nIdentity address mapping.\nThe chain id is incorrect\nInvalid opcode during execution or starting byte is 0xef. …\nThe transaction fee input is invalid\nJump destination is invalid.\nAn opcode accesses memory region, but the region is …\nThe transaction signature is invalid\nNonce reached maximum value of 2^64-1 …\nThe operation is not supported.\nContains the success value\nHandle withdrawing, refunding and depositing of …\nOther normal errors.\nOther fatal errors.\nNot enough fund to start the execution (runtime).\nExecution runs out of gas (runtime).\nAn opcode accesses external information, but the request …\nPC underflowed (unused).\nOne single precompile used by EVM engine.\nData returned by a precompile in case of failure.\nHandle provided to a precompile to interact with the EVM.\nData returned by a precompile on success.\nA set of precompiles.\nThe transaction priority fee is too high\nMachine encountered an explicit return.\nMachine encountered an explicit revert.\nReverts the state changes. Returns the provided error …\nMachine encountered an explicit revert.\nTrying to push into a stack over stack limit.\nTrying to pop from an empty stack.\nMachine encountered an explicit stop.\nReturns the Substrate block hash by number.\nMachine has succeeded.\nSuccess return type.\nMachine encountered an explicit suicide.\nTransaction validation errors\nThe transaction nonce is too high\nThe transaction nonce is too low\nThe trap (interrupt) is unhandled.\nUnknown error\nExternal input from the transaction.\nExecution address.\nApparent value of the EVM.\nAccount balance.\nBerlin hard fork configuration.\nPerform subcall in provided context. Precompile specifies …\nTake l64 for callcreate after gas.\nCall limit.\nCall stipend.\nCaller of the EVM.\nRetreive the code address (what is the address of the …\nRetreive the context in which the precompile is executed.\nAfter the transaction was executed the actual fee can be …\nCreate contract limit.\nWhether create transactions and create opcode increases …\nEIP-3529\nEIP-3541\nWhether empty account is considered exists.\nPerform the origin check.\nWhether to throw out of gas error when …\nWhether the gasometer is running in estimate mode.\nTry to execute the precompile with given <code>handle</code> which …\nTries to execute a precompile in the precompile set. If …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nFrontier hard fork configuration.\nGas paid per address in transaction access list (see …\nGas paid per storage key in transaction access list (see …\nGas paid for accessing cold account.\nGas paid for BALANCE opcode.\nGas paid for CALL opcode.\nGas paid for EXP opcode for every byte.\nGas paid for extcode.\nGas paid for extcodehash.\nRetreive the gas limit of this call.\nCurrent transaction gas price.\nGas paid for SLOAD opcode.\nGas paid for cold SLOAD opcode.\nGas paid for sstore reset.\nGas paid for sstore set.\nGas paid for accessing ready storage.\nGas paid for SUICIDE opcode.\nGas paid for SUICIDE opcode when it hits a new account.\nGas paid for a message call transaction.\nGas paid for a contract creation transaction.\nGas paid for non-zero data in a transaction.\nGas paid for zero data in a transaction.\nHas ext block fee. See EIP-3198\nHas bitwise shifting.\nHas chain ID.\nHas create2.\nHas delegate call.\nHas ext code hash.\nHas PUSH0 opcode. See EIP-3855\nHas return data.\nHas revert.\nHas self balance.\nEIP-2929\nRetreive the input data the precompile is called with.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert from Substrate balance to EVM balance (U256) with …\nConvert from EVM (U256) balance to Substrate balance with …\nWhether the exit is error.\nWhether the exit is fatal.\nCheck if the given address is a precompile. Should only be …\nWhether the exit is revert.\nIs the precompile call is done statically.\nWhether the exit is succeeded.\nIstanbul hard fork configuration.\nRecord a log.\nlondon hard fork configuration.\nEIP-3860, maximum size limit of init_code.\nEIP-3529\nMemory limit.\nThe Merge (Paris) hard fork configuration.\nReturn the minimal required gas price.\nAccount nonce.\nOrigin of the transaction.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nIntroduced in EIP1559 to handle the priority tip.\nRecord cost to the Runtime gasometer.\nRecord Substrate specific cost.\nRefund Substrate specific cost.\nGas paid for sstore refund.\nRetreive the remaining gas.\nShanghai hard fork configuration.\nEIP-1283.\nEIP-1706.\nStack limit.\nTry with origin.\nEIP-3651\nAutogenerated weights for pallet_evm\nBefore the transaction is executed the payment of the …\nStorage type is <code>StorageMap</code> with key type <code>H160</code> and value …\nStorage type is <code>StorageMap</code> with key type <code>H160</code> and value …\nStorage type is <code>StorageDoubleMap</code> with key1 type H160, key2 …\nMapping from address to account id.\nBalance conversion between Substrate balances and EVM …\nNot enough balance to perform action\nThe block gas limit. Can be a simple constant, or an …\nBlock number to block hash.\nContains a variant per dispatchable extrinsic that this …\nAllow the origin to call on behalf of given address.\nChain ID of EVM.\nConfiguration trait of this pallet.\nA contract has been created at given address.\nA contract was attempted to be created, but the execution …\nCurrency type for withdraw and balance storage.\nStorage type is <code>StorageValue</code> with value type <code>bool</code>.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nA contract has been executed successfully with states …\nA contract has been executed with errors. States are …\nCalculator for current gas price.\nCalculating total fee overflowed\nFind author for the current block.\nGas limit Pov size ratio.\nGas limit is too high.\nGas limit is too low.\nGas price is too low.\nMaps Ethereum gas to Substrate weight.\nCan be used to configure the genesis state of this pallet.\nThe chain id is invalid.\nNonce is invalid\nthe signature is invalid.\nEthereum events from contracts.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nOrigin is not allowed to perform the operation.\nTo handle fee deduction for EVM transactions. An example …\nCalled on create calls, used to record owner\nThe <code>Pallet</code> struct, the main type that implements traits …\nCalculating total payment overflowed\nPrecompiles associated with this EVM engine.\nEVM reentrancy\nEVM execution runner.\nThe overarching event type.\nDefine the quick clear limit of storage clearing when a …\nStorage type is <code>StorageMap</code> with key type <code>H160</code> and value …\nGet the timestamp for the current block.\nEIP-3607,\nUndefined error.\nWeight information for extrinsics in this pallet.\nWeight corresponding to a gas unit.\nStorage type is <code>StorageValue</code> with value type <code>Vec &lt; H160 &gt;</code>.\nWithdraw fee failed\nAllow the origin to withdraw on behalf of given address.\nGet the account basic in EVM format.\nGet the account metadata (hash and size) from storage if …\nIssue an EVM call operation. This is similar to a message …\nIssue an EVM call operation. This is similar to a message …\nEVM config used in the module.\nIssue an EVM create operation. This is similar to a …\nIssue an EVM create operation. This is similar to a …\nIssue an EVM create2 operation.\nIssue an EVM create2 operation.\nCreate an account.\nAuto-generated docs-only module listing all defined …\nGet the author using the FindAuthor trait.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck whether an account is empty.\nCheck whether an account is a suicided contract\nCreate a call with the variant <code>call</code>.\nCreate a call with the variant <code>create</code>.\nCreate a call with the variant <code>create2</code>.\nCreate a call with the variant <code>disable_whitelist</code>.\nCreate a call with the variant <code>set_whitelist</code>.\nCreate a call with the variant <code>withdraw</code>.\nRemove an account.\nRemove an account if its empty.\nAuto-generated docs-only module listing all (public and …\nWithdraw balance from EVM into currency/balances pallet.\nWithdraw balance from EVM into currency/balances pallet.\nIssue an EVM call operation. This is similar to a message …\nIssue an EVM create operation. This is similar to a …\nIssue an EVM create2 operation.\nWarning: Doc-Only\nWarning: Doc-Only\nWithdraw balance from EVM into currency/balances pallet.\nWarning: Doc-Only\nWarning: Doc-Only\nWarning: Doc-Only\nWarning: Doc-Only\nWarning: Doc-Only\nWarning: Doc-Only\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nEVM stack-based runner.\nSubstrate backend for EVM.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new backend with given vicinity.\nWeights for pallet_evm using the Substrate node and …\nWeight functions needed for pallet_evm.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.")