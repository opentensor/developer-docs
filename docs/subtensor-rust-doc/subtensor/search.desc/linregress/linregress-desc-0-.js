searchState.loadedDescShard("linregress", 0, "<code>linregress</code> provides an easy to use implementation of …\nYou must specify either a formula or data columns.\nRequested column is not in data. (Column given as String)\nDrop the columns containing the invalid values.\nAn error that can occur in this crate.\nA builder to create and fit a linear regression model.\nThe RegressionModel internal state is inconsistent\nNumber of slopes and output names is inconsistent.\nThe given vectors have inconsistent lengths\nGiven data columns are invalid.\nGiven formula is invalid.\nHow to proceed if given non real <code>f64</code> values (NaN or …\nA fitted regression model\nA column used in the model is misising from the provided …\nError while fitting the model. (Details given as String)\nCannot fit model without data.\nCannot fit model without formula or data columns.\nA container struct for the regression data.\nA builder to create a RegressionData struct for use with a …\nError while processing the regression data. (Details given …\nA fitted regression model.\nRegressor and regressand dimensions do not match. (Column …\nReturn an error to the caller.\nOnly exposed for use in doc comments. This macro is not …\nOnly exposed for use in doc comments. This macro is not …\nBuild a <code>RegressionData</code> struct from the given data.\nSet the data to be used for the regression.\nSet the columns to be used as regressand and regressors …\nFits the model and returns a <code>RegressionModel</code> if successful.\nFit a regression model directly on a matrix of input data\nLike <code>fit_low_level_regression_model</code> but does not compute …\nLike <code>fit</code> but does not perfom any statistics on the …\nSet the formula to use for the regression.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConfigure how to handle non real <code>f64</code> values (NaN or …\nIterates over pairs of regressor columns and their …\nIterates over pairs of regressor columns and their …\nIterates over pairs of regressor columns and their …\nCreate as new FormulaRegressionBuilder with no data or …\nCreate a new <code>RegressionDataBuilder</code>.\nThe two-tailed p-values for the t-statistics of the …\nThe two-tailed p-values for the t-statistics of the …\nThe model’s intercept and slopes (also known as betas)\nThe model’s intercept and slopes (also known as betas)\nEvaluates the model on given new input data and returns …\nThe names of the regressor columns\nThe residuals of the model\nThe residuals of the model\nR-squared of the model\nR-squared of the model\nAdjusted R-squared of the model\nAdjusted R-squared of the model\nA scale factor for the covariance matrix\nA scale factor for the covariance matrix\nThe standard errors of the parameter estimates\nThe standard errors of the parameter estimates\nSum of squared residuals\nSum of squared residuals")