searchState.loadedDescShard("fp_evm", 0, "<code>System::Account</code> 16(hash) + 20 (key) + 60 …\n<code>AccountCodesMetadata</code> read, temptatively 16 (hash) + 20 …\n16 (hash1) + 20 (key1) + 16 (hash2) + 32 (key2) + 32 …\n<code>ADD</code>\n<code>ADDMOD</code>\n<code>ADDRESS</code>\n<code>AND</code>\nBasic account information.\n<code>BALANCE</code>\n<code>BASEFEE</code>\n<code>BLOCKHASH</code>\n<code>BYTE</code>\nThe transaction balance is too low\n<code>CALL</code>\n<code>CALLCODE</code>\n<code>CALLDATACOPY</code>\n<code>CALLDATALOAD</code>\n<code>CALLDATASIZE</code>\n<code>CALLER</code>\n<code>CALLVALUE</code>\n<code>CHAINID</code>\n<code>CODECOPY</code>\n<code>CODESIZE</code>\n<code>COINBASE</code>\n<code>CREATE</code>\n<code>CREATE2</code>\nCall stack is too deep (runtime).\nRuntime configuration.\nContext of the runtime.\nCreate opcode encountered collision (runtime).\nCreate init code exceeds limit (runtime).\nAttempt to create an empty account (runtime, unused).\n<code>DELEGATECALL</code>\n<code>DIFFICULTY</code>\n<code>DIV</code>\n<code>DUPn</code>\nEncountered the designated invalid opcode.\nSee EIP-3541\n<code>EQ</code>\n<code>EXP</code>\n<code>EXTCODECOPY</code>\n<code>EXTCODEHASH</code>\n<code>EXTCODESIZE</code>\nContains the error value\nMachine returns a normal EVM error.\nReverts the state changes and consume all the gas.\nExit error reason.\nExit reason.\nExit revert reason.\nExit succeed reason.\nMachine encountered an error that is not supposed to be …\nMark this failure as fatal, and all EVM execution stacks …\nTrait that outputs the current transaction gas price.\n<code>GAS</code>\n<code>GASLIMIT</code>\n<code>GASPRICE</code>\n<code>GT</code>\nThe transaction gas limit is too hign\nThe transaction gas limit is too low\nThe transaction gas price is too low\nAccount definition used for genesis block construction.\n<code>INVALID</code>\n<code>ISZERO</code>\nAccount basic proof size + 5 bytes max of <code>decode_len</code> call.\nThe chain id is incorrect\nInvalid opcode during execution or starting byte is 0xef. …\nThe transaction fee input is invalid\nJump destination is invalid.\nAn opcode accesses memory region, but the region is …\nThe transaction signature is invalid\n<code>JUMP</code>\n<code>JUMPDEST</code>\n<code>JUMPI</code>\n<code>LOGn</code>\n<code>LT</code>\n<code>MLOAD</code>\n<code>MOD</code>\n<code>MSIZE</code>\n<code>MSTORE</code>\n<code>MSTORE8</code>\n<code>MUL</code>\n<code>MULMOD</code>\nNonce reached maximum value of 2^64-1 …\n<code>NOT</code>\n<code>NUMBER</code>\n<code>OR</code>\n<code>ORIGIN</code>\nContains the success value\nOpcode enum. One-to-one corresponding to an <code>u8</code> value.\nOther normal errors.\nNot enough fund to start the execution (runtime).\nExecution runs out of gas (runtime).\nAn opcode accesses external information, but the request …\n<code>PC</code>\nPC underflowed (unused).\n<code>POP</code>\n<code>PUSHn</code>\nOne single precompile used by EVM engine.\nData returned by a precompile in case of failure.\nHandle provided to a precompile to interact with the EVM.\nData returned by a precompile on success.\nA set of precompiles.\nThe transaction priority fee is too high\n<code>RETURN</code>\n<code>RETURNDATACOPY</code>\n<code>RETURNDATASIZE</code>\n<code>REVERT</code>\nMachine encountered an explicit return.\nMachine encountered an explicit revert.\nReverts the state changes. Returns the provided error …\nMachine encountered an explicit revert.\n<code>SAR</code>\n<code>SDIV</code>\n<code>SELFBALANCE</code>\n<code>SGT</code>\n<code>SHA3</code>\n<code>SHL</code>\n<code>SHR</code>\n<code>SIGNEXTEND</code>\n<code>SLOAD</code>\n<code>SLT</code>\n<code>SMOD</code>\n<code>SSTORE</code>\n<code>STATICCALL</code>\n<code>STOP</code>\n<code>SUB</code>\n<code>SUICIDE</code>\n<code>SWAPn</code>\nTrying to push into a stack over stack limit.\nTrying to pop from an empty stack.\nMachine encountered an explicit stop.\nMachine has succeeded.\nMachine encountered an explicit suicide.\n<code>TIMESTAMP</code>\nTransaction validation errors\nTransfer from source to target, with given value.\nThe transaction nonce is too high\nThe transaction nonce is too low\nUnknown error\nExternal input from the transaction.\nFixed trie 32 byte hash.\n<code>XOR</code>\nExecution address.\nApparent value of the EVM.\nAccount balance.\nAccount balance.\nBerlin hard fork configuration.\nPerform subcall in provided context. Precompile specifies …\nTake l64 for callcreate after gas.\nCall limit.\nCall stipend.\nCaller of the EVM.\nAccount code.\nRetreive the code address (what is the address of the …\nRetreive the context in which the precompile is executed.\nCreate contract limit.\nWhether create transactions and create opcode increases …\nEIP-3529\nEIP-3541\nThe result of applying a gas ratio to the most used …\nWhether empty account is considered exists.\nWhether to throw out of gas error when …\nWhether the gasometer is running in estimate mode.\nTry to execute the precompile with given <code>handle</code> which …\nTries to execute a precompile in the precompile set. If …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nFrontier hard fork configuration.\nGas paid per address in transaction access list (see …\nGas paid per storage key in transaction access list (see …\nGas paid for accessing cold account.\nGas paid for BALANCE opcode.\nGas paid for CALL opcode.\nGas paid for EXP opcode for every byte.\nGas paid for extcode.\nGas paid for extcodehash.\nRetreive the gas limit of this call.\nCurrent transaction gas price.\nGas paid for SLOAD opcode.\nGas paid for cold SLOAD opcode.\nGas paid for sstore reset.\nGas paid for sstore set.\nGas paid for accessing ready storage.\nGas paid for SUICIDE opcode.\nGas paid for SUICIDE opcode when it hits a new account.\nGas paid for a message call transaction.\nGas paid for a contract creation transaction.\nGas paid for non-zero data in a transaction.\nGas paid for zero data in a transaction.\nHas ext block fee. See EIP-3198\nHas bitwise shifting.\nHas chain ID.\nHas create2.\nHas delegate call.\nHas ext code hash.\nHas PUSH0 opcode. See EIP-3855\nHas return data.\nHas revert.\nHas self balance.\nEIP-2929\nRetreive the input data the precompile is called with.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the exit is error.\nWhether the exit is fatal.\nCheck if the given address is a precompile. Should only be …\nWhether the opcode is a push opcode.\nWhether the exit is revert.\nIs the precompile call is done statically.\nWhether the exit is succeeded.\nIstanbul hard fork configuration.\nRecord a log.\nlondon hard fork configuration.\nEIP-3860, maximum size limit of init_code.\nEIP-3529\nMemory limit.\nThe Merge (Paris) hard fork configuration.\nReturn the minimal required gas price.\nAccount nonce.\nAccount nonce.\nOrigin of the transaction.\nRecord cost to the Runtime gasometer.\nRecord Substrate specific cost.\nRefund Substrate specific cost.\nGas paid for sstore refund.\nRetreive the remaining gas.\nShanghai hard fork configuration.\nSource address.\nEIP-1283.\nEIP-1706.\nStack limit.\nThe used_gas as returned by the evm gasometer on exit.\nFull account storage.\nTarget address.\nTransfer value.\nEIP-3651\n<code>WeightPerGas</code> is an approximate ratio of the amount of …")