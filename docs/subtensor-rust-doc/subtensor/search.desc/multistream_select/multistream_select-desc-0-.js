searchState.loadedDescShard("multistream_select", 0, "Multistream-select Protocol Negotiation\nA <code>Future</code> returned by <code>dialer_select_proto</code> which negotiates …\nProtocol negotiation failed because no protocol could be …\nReceived an invalid message from the remote.\nA protocol (name) is invalid.\nI/O error.\nThe <code>Future</code> returned by <code>listener_select_proto</code> that performs …\nAn I/O stream that has settled on an (application-layer) …\nA <code>Future</code> that waits on the completion of protocol …\nError that can happen when negotiating a protocol with the …\nA protocol error.\nA protocol error occurred during the negotiation.\nToo many protocols have been returned by the remote.\nVersion 1 of the multistream-select protocol. See 1 and 2.\nA “lazy” variant of version 1 that is identical on the …\nSupported multistream-select versions.\nReturns a <code>NegotiatedComplete</code> future that waits for protocol\nReturns a <code>Future</code> that negotiates a protocol on the given …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a <code>Future</code> that negotiates a protocol on the given …")