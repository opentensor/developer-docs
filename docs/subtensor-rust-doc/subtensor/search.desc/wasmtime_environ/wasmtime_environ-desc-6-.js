searchState.loadedDescShard("wasmtime_environ", 6, "Represents the kind of module instance type.\nThe instance type is the result of instantiating a module …\nThe instance type is the result of instantiating a …\nRepresents a kebab string slice used in validation.\nRepresents an owned kebab string for validation.\nThe type is a list.\nThe entity is a memory.\nThe definition is for a core module type.\nThe entity is a core module.\nRepresents a core module type.\nThe type is an <code>option</code>.\nThe value type is one of the primitive types.\nThe type is a primitive value type.\nThe type is a record.\nRepresents a record type.\nThe type is a <code>result</code>.\nThe entity is a table.\nThe entity is a tag.\nThe type is a tuple.\nRepresents a tuple type.\nA unified type definition for validating WebAssembly …\nThe type is represented with the given type identifier.\nThe entity is a type.\nRepresents a unique identifier for a type known to a …\nRepresents the types known to a <code>crate::Validator</code> once …\nRepresents the types known to a <code>crate::Validator</code> during …\nThe type is a union.\nRepresents a union type.\nThe entity is a value.\nThe type is a variant.\nRepresents a variant case.\nRepresents a variant type.\nConverts the type to a component function type.\nConverts the type to a component instance type.\nConverts the type to a component type.\nConverts the type to a component defined type.\nConverts the type to a core function type.\nConverts the type to a core module instance type.\nConverts the kebab string to a kebab string slice.\nConverts the type to a core module type.\nGets a reference to this validation type information.\nGets the underlying string slice.\nGets the underlying string.\nThe map of variant cases.\nGets the type of a component at the given component index.\nGets the type of a component at the given component index.\nGets the count of imported, exported, or aliased …\nGets the component entity type for the given component …\nGets the component entity type for the given component …\nGets the type of a component function at the given …\nGets the type of a component function at the given …\nGets the count of imported, exported, or aliased component …\nGets the type of an component instance at the given …\nGets the type of an component instance at the given …\nGets the count of imported, exported, or aliased component …\nGets the type of an element segment at the given element …\nGets the type of an element segment at the given element …\nGets the count of element segments.\nGets the entity type from the given export.\nGets the entity type from the given export.\nGets the entity type from the given import.\nGets the entity type for the given import.\nGets the exports of the instance type.\nGets the exports of the instance type.\nThe exports of the module type.\nThe exports of the component type.\nThe map of record fields.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets a defined core function type at the given type index.\nGets a defined core function type at the given type index.\nGets the type of a core function at the given function …\nGets the type of a core function at the given function …\nGets the count of imported and defined core functions.\nGets the type of a global at the given global index.\nGets the type of a global at the given global index.\nGets the count of imported and defined globals.\nGets a type id from a type index.\nGets a type id from a type index.\nThe imports of the module type.\nThe imports of the component type.\nGets the type of a module instance at the given module …\nGets the type of a module instance at the given module …\nGets the count of imported, exported, or aliased core …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDetermines if component value type <code>a</code> is a subtype of <code>b</code>.\nDetermines if entity type <code>a</code> is a subtype of <code>b</code>.\nDetermines if module type <code>a</code> is a subtype of <code>b</code>.\nDetermines if component entity type <code>a</code> is a subtype of <code>b</code>.\nDetermines if component type <code>a</code> is a subtype of <code>b</code>.\nDetermines if component instance type <code>a</code> is a subtype of <code>b</code>.\nDetermines if component function type <code>a</code> is a subtype of <code>b</code>.\nDetermines if component defined type <code>a</code> is a subtype of <code>b</code>.\nThe kind of module instance type.\nThe kind of instance type.\nLooks up an import by its module and name.\nGets the type of a memory at the given memory index.\nGets the type of a memory at the given memory index.\nGets the count of imported and defined memories.\nGets the type of a module at the given module index.\nGets the type of a module at the given module index.\nGets the count of imported, exported, or aliased modules.\nCreates a new kebab string slice.\nCreates a new kebab string.\nThe function parameters.\nAttempts to lookup the type id that <code>ty</code> is an alias of.\nThe name of the variant case refined by this one.\nThe function’s results.\nGets the type of a table at the given table index.\nGets the type of a table at the given table index.\nGets the count of imported and defined tables.\nGets the type of a tag at the given tag index.\nGets the type of a tag at the given tag index.\nGets the count of imported and defined tags.\nConverts the slice to an owned string.\nThe variant case type.\nGets a type at the given type index.\nGets a type at the given type index.\nGets the count of core types.\nGets a type based on its type id.\nGets a type based on its type id.\nThe types of the tuple.\nThe types of the union.\nGets the type of a value at the given value index.\nGets the type of a value at the given value index.\nGets the count of imported, exported, or aliased values.\nThe <code>error</code> type.\nThe <code>ok</code> type.\nThis is the identifier of the type that was created when …\nThis is the identifier of the type that was referenced …")