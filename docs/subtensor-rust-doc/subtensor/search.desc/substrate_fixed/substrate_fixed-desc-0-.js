searchState.loadedDescShard("substrate_fixed", 0, "Fixed-point numbers\nThe number of fractional bits.\nThe number of fractional bits.\nThe number of fractional bits.\nThe number of fractional bits.\nThe number of fractional bits.\nThe number of fractional bits.\nThe number of fractional bits.\nThe number of fractional bits.\nThe number of fractional bits.\nThe number of fractional bits.\nA 128-bit fixed-point signed number with <code>Frac</code> fractional …\nA 16-bit fixed-point signed number with <code>Frac</code> fractional …\nA 32-bit fixed-point signed number with <code>Frac</code> fractional …\nA 64-bit fixed-point signed number with <code>Frac</code> fractional …\nAn eight-bit fixed-point signed number with <code>Frac</code> …\nA 128-bit fixed-point unsigned number with <code>Frac</code> fractional …\nA 16-bit fixed-point unsigned number with <code>Frac</code> fractional …\nA 32-bit fixed-point unsigned number with <code>Frac</code> fractional …\nA 64-bit fixed-point unsigned number with <code>Frac</code> fractional …\nAn eight-bit fixed-point unsigned number with <code>Frac</code> …\nThe number of integer bits.\nThe number of integer bits.\nThe number of integer bits.\nThe number of integer bits.\nThe number of integer bits.\nThe number of integer bits.\nThe number of integer bits.\nThe number of integer bits.\nThe number of integer bits.\nThe number of integer bits.\nAn error which can be returned when parsing a fixed-point …\nProvides intentionally wrapped arithmetic on fixed-point …\nWrapping absolute value. Returns the absolute value, …\nReturns the absolute value.\nReturns the absolute value.\nReturns the absolute value.\nReturns the absolute value.\nReturns the absolute value.\nWrapping ceil. Rounds to the next integer towards +∞, …\nRounds to the next integer towards +∞.\nRounds to the next integer towards +∞.\nRounds to the next integer towards +∞.\nRounds to the next integer towards +∞.\nRounds to the next integer towards +∞.\nRounds to the next integer towards +∞.\nRounds to the next integer towards +∞.\nRounds to the next integer towards +∞.\nRounds to the next integer towards +∞.\nRounds to the next integer towards +∞.\nChecked absolute value. Returns the absolute value, or <code>None</code>…\nChecked absolute value. Returns the absolute value, or <code>None</code>…\nChecked absolute value. Returns the absolute value, or <code>None</code>…\nChecked absolute value. Returns the absolute value, or <code>None</code>…\nChecked absolute value. Returns the absolute value, or <code>None</code>…\nChecked addition. Returns the sum, or <code>None</code> on overflow.\nChecked addition. Returns the sum, or <code>None</code> on overflow.\nChecked addition. Returns the sum, or <code>None</code> on overflow.\nChecked addition. Returns the sum, or <code>None</code> on overflow.\nChecked addition. Returns the sum, or <code>None</code> on overflow.\nChecked addition. Returns the sum, or <code>None</code> on overflow.\nChecked addition. Returns the sum, or <code>None</code> on overflow.\nChecked addition. Returns the sum, or <code>None</code> on overflow.\nChecked addition. Returns the sum, or <code>None</code> on overflow.\nChecked addition. Returns the sum, or <code>None</code> on overflow.\nChecked ceil. Rounds to the next integer towards +∞, …\nChecked ceil. Rounds to the next integer towards +∞, …\nChecked ceil. Rounds to the next integer towards +∞, …\nChecked ceil. Rounds to the next integer towards +∞, …\nChecked ceil. Rounds to the next integer towards +∞, …\nChecked ceil. Rounds to the next integer towards +∞, …\nChecked ceil. Rounds to the next integer towards +∞, …\nChecked ceil. Rounds to the next integer towards +∞, …\nChecked ceil. Rounds to the next integer towards +∞, …\nChecked ceil. Rounds to the next integer towards +∞, …\nChecked division. Returns the quotient, or <code>None</code> if the …\nChecked division. Returns the quotient, or <code>None</code> if the …\nChecked division. Returns the quotient, or <code>None</code> if the …\nChecked division. Returns the quotient, or <code>None</code> if the …\nChecked division. Returns the quotient, or <code>None</code> if the …\nChecked division. Returns the quotient, or <code>None</code> if the …\nChecked division. Returns the quotient, or <code>None</code> if the …\nChecked division. Returns the quotient, or <code>None</code> if the …\nChecked division. Returns the quotient, or <code>None</code> if the …\nChecked division. Returns the quotient, or <code>None</code> if the …\nChecked Euclidean division. Returns the quotient, or <code>None</code> …\nChecked Euclidean division. Returns the quotient, or <code>None</code> …\nChecked Euclidean division. Returns the quotient, or <code>None</code> …\nChecked Euclidean division. Returns the quotient, or <code>None</code> …\nChecked Euclidean division. Returns the quotient, or <code>None</code> …\nChecked Euclidean division. Returns the quotient, or <code>None</code> …\nChecked Euclidean division. Returns the quotient, or <code>None</code> …\nChecked Euclidean division. Returns the quotient, or <code>None</code> …\nChecked Euclidean division. Returns the quotient, or <code>None</code> …\nChecked Euclidean division. Returns the quotient, or <code>None</code> …\nChecked Euclidean division by an integer. Returns the …\nChecked Euclidean division by an integer. Returns the …\nChecked Euclidean division by an integer. Returns the …\nChecked Euclidean division by an integer. Returns the …\nChecked Euclidean division by an integer. Returns the …\nChecked Euclidean division by an integer. Returns the …\nChecked Euclidean division by an integer. Returns the …\nChecked Euclidean division by an integer. Returns the …\nChecked Euclidean division by an integer. Returns the …\nChecked Euclidean division by an integer. Returns the …\nChecked division by an integer. Returns the quotient, or …\nChecked division by an integer. Returns the quotient, or …\nChecked division by an integer. Returns the quotient, or …\nChecked division by an integer. Returns the quotient, or …\nChecked division by an integer. Returns the quotient, or …\nChecked division by an integer. Returns the quotient, or …\nChecked division by an integer. Returns the quotient, or …\nChecked division by an integer. Returns the quotient, or …\nChecked division by an integer. Returns the quotient, or …\nChecked division by an integer. Returns the quotient, or …\nChecked floor. Rounds to the next integer towards …\nChecked floor. Rounds to the next integer towards …\nChecked floor. Rounds to the next integer towards …\nChecked floor. Rounds to the next integer towards …\nChecked floor. Rounds to the next integer towards …\nChecked floor. Rounds to the next integer towards …\nChecked floor. Rounds to the next integer towards …\nChecked floor. Rounds to the next integer towards …\nChecked floor. Rounds to the next integer towards …\nChecked floor. Rounds to the next integer towards …\nConverts a fixed-point number if it fits, otherwise …\nConverts a fixed-point number if it fits, otherwise …\nConverts a fixed-point number if it fits, otherwise …\nConverts a fixed-point number if it fits, otherwise …\nConverts a fixed-point number if it fits, otherwise …\nConverts a fixed-point number if it fits, otherwise …\nConverts a fixed-point number if it fits, otherwise …\nConverts a fixed-point number if it fits, otherwise …\nConverts a fixed-point number if it fits, otherwise …\nConverts a fixed-point number if it fits, otherwise …\nCreates a fixed-point number from another number if it …\nCreates a fixed-point number from another number if it …\nCreates a fixed-point number from another number if it …\nCreates a fixed-point number from another number if it …\nCreates a fixed-point number from another number if it …\nCreates a fixed-point number from another number if it …\nCreates a fixed-point number from another number if it …\nCreates a fixed-point number from another number if it …\nCreates a fixed-point number from another number if it …\nCreates a fixed-point number from another number if it …\nChecked multiplication. Returns the product, or <code>None</code> on …\nChecked multiplication. Returns the product, or <code>None</code> on …\nChecked multiplication. Returns the product, or <code>None</code> on …\nChecked multiplication. Returns the product, or <code>None</code> on …\nChecked multiplication. Returns the product, or <code>None</code> on …\nChecked multiplication. Returns the product, or <code>None</code> on …\nChecked multiplication. Returns the product, or <code>None</code> on …\nChecked multiplication. Returns the product, or <code>None</code> on …\nChecked multiplication. Returns the product, or <code>None</code> on …\nChecked multiplication. Returns the product, or <code>None</code> on …\nChecked multiplication by an integer. Returns the product, …\nChecked multiplication by an integer. Returns the product, …\nChecked multiplication by an integer. Returns the product, …\nChecked multiplication by an integer. Returns the product, …\nChecked multiplication by an integer. Returns the product, …\nChecked multiplication by an integer. Returns the product, …\nChecked multiplication by an integer. Returns the product, …\nChecked multiplication by an integer. Returns the product, …\nChecked multiplication by an integer. Returns the product, …\nChecked multiplication by an integer. Returns the product, …\nChecked negation. Returns the negated value, or <code>None</code> on …\nChecked negation. Returns the negated value, or <code>None</code> on …\nChecked negation. Returns the negated value, or <code>None</code> on …\nChecked negation. Returns the negated value, or <code>None</code> on …\nChecked negation. Returns the negated value, or <code>None</code> on …\nChecked negation. Returns the negated value, or <code>None</code> on …\nChecked negation. Returns the negated value, or <code>None</code> on …\nChecked negation. Returns the negated value, or <code>None</code> on …\nChecked negation. Returns the negated value, or <code>None</code> on …\nChecked negation. Returns the negated value, or <code>None</code> on …\nReturns the smallest power of two that is ≥ <code>self</code>, or …\nReturns the smallest power of two that is ≥ <code>self</code>, or …\nReturns the smallest power of two that is ≥ <code>self</code>, or …\nReturns the smallest power of two that is ≥ <code>self</code>, or …\nReturns the smallest power of two that is ≥ <code>self</code>, or …\nChecked remainder. Returns the remainder, or <code>None</code> if the …\nChecked remainder. Returns the remainder, or <code>None</code> if the …\nChecked remainder. Returns the remainder, or <code>None</code> if the …\nChecked remainder. Returns the remainder, or <code>None</code> if the …\nChecked remainder. Returns the remainder, or <code>None</code> if the …\nChecked remainder. Returns the remainder, or <code>None</code> if the …\nChecked remainder. Returns the remainder, or <code>None</code> if the …\nChecked remainder. Returns the remainder, or <code>None</code> if the …\nChecked remainder. Returns the remainder, or <code>None</code> if the …\nChecked remainder. Returns the remainder, or <code>None</code> if the …\nChecked remainder for Euclidean division. Returns the …\nChecked remainder for Euclidean division. Returns the …\nChecked remainder for Euclidean division. Returns the …\nChecked remainder for Euclidean division. Returns the …\nChecked remainder for Euclidean division. Returns the …\nChecked remainder for Euclidean division. Returns the …\nChecked remainder for Euclidean division. Returns the …\nChecked remainder for Euclidean division. Returns the …\nChecked remainder for Euclidean division. Returns the …\nChecked remainder for Euclidean division. Returns the …\nChecked remainder for Euclidean division by an integer. …\nChecked remainder for Euclidean division by an integer. …\nChecked remainder for Euclidean division by an integer. …\nChecked remainder for Euclidean division by an integer. …\nChecked remainder for Euclidean division by an integer. …\nChecked remainder for Euclidean division by an integer. …\nChecked remainder for Euclidean division by an integer. …\nChecked remainder for Euclidean division by an integer. …\nChecked remainder for Euclidean division by an integer. …\nChecked remainder for Euclidean division by an integer. …\nChecked fixed-point remainder for division by an integer. …\nChecked fixed-point remainder for division by an integer. …\nChecked fixed-point remainder for division by an integer. …\nChecked fixed-point remainder for division by an integer. …\nChecked fixed-point remainder for division by an integer. …\nChecked fixed-point remainder for division by an integer. …\nChecked fixed-point remainder for division by an integer. …\nChecked fixed-point remainder for division by an integer. …\nChecked fixed-point remainder for division by an integer. …\nChecked fixed-point remainder for division by an integer. …\nChecked round. Rounds to the nearest integer, with ties …\nChecked round. Rounds to the nearest integer, with ties …\nChecked round. Rounds to the nearest integer, with ties …\nChecked round. Rounds to the nearest integer, with ties …\nChecked round. Rounds to the nearest integer, with ties …\nChecked round. Rounds to the nearest integer, with ties …\nChecked round. Rounds to the nearest integer, with ties …\nChecked round. Rounds to the nearest integer, with ties …\nChecked round. Rounds to the nearest integer, with ties …\nChecked round. Rounds to the nearest integer, with ties …\nChecked round. Rounds to the nearest integer, with ties …\nChecked round. Rounds to the nearest integer, with ties …\nChecked round. Rounds to the nearest integer, with ties …\nChecked round. Rounds to the nearest integer, with ties …\nChecked round. Rounds to the nearest integer, with ties …\nChecked round. Rounds to the nearest integer, with ties …\nChecked round. Rounds to the nearest integer, with ties …\nChecked round. Rounds to the nearest integer, with ties …\nChecked round. Rounds to the nearest integer, with ties …\nChecked round. Rounds to the nearest integer, with ties …\nChecked shift left. Returns the shifted number, or <code>None</code> if …\nChecked shift left. Returns the shifted number, or <code>None</code> if …\nChecked shift left. Returns the shifted number, or <code>None</code> if …\nChecked shift left. Returns the shifted number, or <code>None</code> if …\nChecked shift left. Returns the shifted number, or <code>None</code> if …\nChecked shift left. Returns the shifted number, or <code>None</code> if …\nChecked shift left. Returns the shifted number, or <code>None</code> if …\nChecked shift left. Returns the shifted number, or <code>None</code> if …\nChecked shift left. Returns the shifted number, or <code>None</code> if …\nChecked shift left. Returns the shifted number, or <code>None</code> if …\nChecked shift right. Returns the shifted number, or <code>None</code> …\nChecked shift right. Returns the shifted number, or <code>None</code> …\nChecked shift right. Returns the shifted number, or <code>None</code> …\nChecked shift right. Returns the shifted number, or <code>None</code> …\nChecked shift right. Returns the shifted number, or <code>None</code> …\nChecked shift right. Returns the shifted number, or <code>None</code> …\nChecked shift right. Returns the shifted number, or <code>None</code> …\nChecked shift right. Returns the shifted number, or <code>None</code> …\nChecked shift right. Returns the shifted number, or <code>None</code> …\nChecked shift right. Returns the shifted number, or <code>None</code> …\nChecked subtraction. Returns the difference, or <code>None</code> on …\nChecked subtraction. Returns the difference, or <code>None</code> on …\nChecked subtraction. Returns the difference, or <code>None</code> on …\nChecked subtraction. Returns the difference, or <code>None</code> on …\nChecked subtraction. Returns the difference, or <code>None</code> on …\nChecked subtraction. Returns the difference, or <code>None</code> on …\nChecked subtraction. Returns the difference, or <code>None</code> on …\nChecked subtraction. Returns the difference, or <code>None</code> on …\nChecked subtraction. Returns the difference, or <code>None</code> on …\nChecked subtraction. Returns the difference, or <code>None</code> on …\nConverts a fixed-point number if it fits, otherwise …\nConverts a fixed-point number if it fits, otherwise …\nConverts a fixed-point number if it fits, otherwise …\nConverts a fixed-point number if it fits, otherwise …\nConverts a fixed-point number if it fits, otherwise …\nConverts a fixed-point number if it fits, otherwise …\nConverts a fixed-point number if it fits, otherwise …\nConverts a fixed-point number if it fits, otherwise …\nConverts a fixed-point number if it fits, otherwise …\nConverts a fixed-point number if it fits, otherwise …\nConverts a fixed-point number to another number if it …\nConverts a fixed-point number to another number if it …\nConverts a fixed-point number to another number if it …\nConverts a fixed-point number to another number if it …\nConverts a fixed-point number to another number if it …\nConverts a fixed-point number to another number if it …\nConverts a fixed-point number to another number if it …\nConverts a fixed-point number to another number if it …\nConverts a fixed-point number to another number if it …\nConverts a fixed-point number to another number if it …\nThis module contains constants.\nReturns the number of ones in the binary representation.\nReturns the number of ones in the binary representation.\nReturns the number of ones in the binary representation.\nReturns the number of ones in the binary representation.\nReturns the number of ones in the binary representation.\nReturns the number of ones in the binary representation.\nReturns the number of ones in the binary representation.\nReturns the number of ones in the binary representation.\nReturns the number of ones in the binary representation.\nReturns the number of ones in the binary representation.\nReturns the number of ones in the binary representation.\nReturns the number of zeros in the binary representation.\nReturns the number of zeros in the binary representation.\nReturns the number of zeros in the binary representation.\nReturns the number of zeros in the binary representation.\nReturns the number of zeros in the binary representation.\nReturns the number of zeros in the binary representation.\nReturns the number of zeros in the binary representation.\nReturns the number of zeros in the binary representation.\nReturns the number of zeros in the binary representation.\nReturns the number of zeros in the binary representation.\nReturns the number of zeros in the binary representation.\nEuclidean division.\nEuclidean division.\nEuclidean division.\nEuclidean division.\nEuclidean division.\nEuclidean division.\nEuclidean division.\nEuclidean division.\nEuclidean division.\nEuclidean division.\nEuclidean division.\nEuclidean division by an integer.\nEuclidean division by an integer.\nEuclidean division by an integer.\nEuclidean division by an integer.\nEuclidean division by an integer.\nEuclidean division by an integer.\nEuclidean division by an integer.\nEuclidean division by an integer.\nEuclidean division by an integer.\nEuclidean division by an integer.\nEuclidean division by an integer.\nWrapping floor. Rounds to the next integer towards −∞, …\nRounds to the next integer towards −∞.\nRounds to the next integer towards −∞.\nRounds to the next integer towards −∞.\nRounds to the next integer towards −∞.\nRounds to the next integer towards −∞.\nRounds to the next integer towards −∞.\nRounds to the next integer towards −∞.\nRounds to the next integer towards −∞.\nRounds to the next integer towards −∞.\nRounds to the next integer towards −∞.\nReturns the fractional part.\nReturns the fractional part.\nReturns the fractional part.\nReturns the fractional part.\nReturns the fractional part.\nReturns the fractional part.\nReturns the fractional part.\nReturns the fractional part.\nReturns the fractional part.\nReturns the fractional part.\nReturns the fractional part.\nReturns the number of fractional bits.\nReturns the number of fractional bits.\nReturns the number of fractional bits.\nReturns the number of fractional bits.\nReturns the number of fractional bits.\nReturns the number of fractional bits.\nReturns the number of fractional bits.\nReturns the number of fractional bits.\nReturns the number of fractional bits.\nReturns the number of fractional bits.\nReturns the number of fractional bits.\nReturns the argument unchanged.\nWraps a fixed-point number.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a <code>bool</code> to a fixed-point number.\nConverts an integer to a fixed-point number.\nConverts an integer to a fixed-point number.\nConverts an integer to a fixed-point number.\nReturns the argument unchanged.\nConverts a <code>bool</code> to a fixed-point number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts an integer to a fixed-point number.\nConverts an integer to a fixed-point number.\nConverts an integer to a fixed-point number.\nReturns the argument unchanged.\nConverts a fixed-pint number.\nConverts a <code>bool</code> to a fixed-point number.\nConverts a fixed-pint number.\nConverts an integer to a fixed-point number.\nConverts a <code>bool</code> to a fixed-point number.\nReturns the argument unchanged.\nConverts a fixed-pint number.\nConverts an integer to a fixed-point number.\nConverts a fixed-pint number.\nConverts an integer to a fixed-point number.\nConverts an integer to a fixed-point number.\nConverts a fixed-pint number.\nConverts an integer to a fixed-point number.\nReturns the argument unchanged.\nConverts an integer to a fixed-point number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts an integer to a fixed-point number.\nConverts an integer to a fixed-point number.\nConverts an integer to a fixed-point number.\nConverts a fixed-pint number.\nConverts a <code>bool</code> to a fixed-point number.\nConverts a <code>bool</code> to a fixed-point number.\nConverts an integer to a fixed-point number.\nReturns the argument unchanged.\nConverts a <code>bool</code> to a fixed-point number.\nConverts an integer to a fixed-point number.\nConverts an integer to a fixed-point number.\nReturns the argument unchanged.\nConverts a fixed-pint number.\nConverts an integer to a fixed-point number.\nConverts a fixed-pint number.\nConverts an integer to a fixed-point number.\nConverts an integer to a fixed-point number.\nConverts an integer to a fixed-point number.\nConverts a fixed-pint number.\nConverts an integer to a fixed-point number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts an integer to a fixed-point number.\nReturns the argument unchanged.\nConverts a <code>bool</code> to a fixed-point number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts an integer to a fixed-point number.\nConverts an integer to a fixed-point number.\nConverts an integer to a fixed-point number.\nConverts an integer to a fixed-point number.\nReturns the argument unchanged.\nConverts an integer to a fixed-point number.\nConverts an integer to a fixed-point number.\nConverts a fixed-pint number.\nConverts an integer to a fixed-point number.\nConverts a <code>bool</code> to a fixed-point number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a <code>bool</code> to a fixed-point number.\nConverts an integer to a fixed-point number.\nConverts an integer to a fixed-point number.\nConverts an integer to a fixed-point number.\nConverts an integer to a fixed-point number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts an integer to a fixed-point number.\nConverts an integer to a fixed-point number.\nConverts a fixed-pint number.\nConverts an integer to a fixed-point number.\nConverts a fixed-pint number.\nConverts an integer to a fixed-point number.\nConverts an integer to a fixed-point number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nReturns the argument unchanged.\nCreates a fixed-point number from its representation as a …\nCreates a fixed-point number from its representation as a …\nCreates a fixed-point number from its representation as a …\nCreates a fixed-point number from its representation as a …\nCreates a fixed-point number from its representation as a …\nCreates a fixed-point number from its representation as a …\nCreates a fixed-point number from its representation as a …\nCreates a fixed-point number from its representation as a …\nCreates a fixed-point number from its representation as a …\nCreates a fixed-point number from its representation as a …\nCreates a fixed-point number that has a bitwise …\nCreates a fixed-point number that has a bitwise …\nCreates a fixed-point number that has a bitwise …\nCreates a fixed-point number that has a bitwise …\nCreates a fixed-point number that has a bitwise …\nCreates a fixed-point number that has a bitwise …\nCreates a fixed-point number that has a bitwise …\nCreates a fixed-point number that has a bitwise …\nCreates a fixed-point number that has a bitwise …\nCreates a fixed-point number that has a bitwise …\nCreates a fixed-point number that has a bitwise …\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number.\nCreates a fixed-point number from its representation as a …\nCreates a fixed-point number from its representation as a …\nCreates a fixed-point number from its representation as a …\nCreates a fixed-point number from its representation as a …\nCreates a fixed-point number from its representation as a …\nCreates a fixed-point number from its representation as a …\nCreates a fixed-point number from its representation as a …\nCreates a fixed-point number from its representation as a …\nCreates a fixed-point number from its representation as a …\nCreates a fixed-point number from its representation as a …\nCreates a fixed-point number from its representation as a …\nCreates a fixed-point number from its representation as a …\nCreates a fixed-point number from its representation as a …\nCreates a fixed-point number from its representation as a …\nCreates a fixed-point number from its representation as a …\nCreates a fixed-point number from its representation as a …\nCreates a fixed-point number from its representation as a …\nCreates a fixed-point number from its representation as a …\nCreates a fixed-point number from its representation as a …\nCreates a fixed-point number from its representation as a …\nWrapping conversion from another number.\nCreates a fixed-point number from another number.\nCreates a fixed-point number from another number.\nCreates a fixed-point number from another number.\nCreates a fixed-point number from another number.\nCreates a fixed-point number from another number.\nCreates a fixed-point number from another number.\nCreates a fixed-point number from another number.\nCreates a fixed-point number from another number.\nCreates a fixed-point number from another number.\nCreates a fixed-point number from another number.\nParses a string slice containing decimal digits to return …\nParses a string slice to return a fixed-point number.\nParses a string slice to return a fixed-point number.\nParses a string slice to return a fixed-point number.\nParses a string slice to return a fixed-point number.\nParses a string slice to return a fixed-point number.\nParses a string slice to return a fixed-point number.\nParses a string slice to return a fixed-point number.\nParses a string slice to return a fixed-point number.\nParses a string slice to return a fixed-point number.\nParses a string slice to return a fixed-point number.\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nReturns the integer part.\nReturns the integer part.\nReturns the integer part.\nReturns the integer part.\nReturns the integer part.\nReturns the integer part.\nReturns the integer part.\nReturns the integer part.\nReturns the integer part.\nReturns the integer part.\nReturns the integer part.\nReturns the number of integer bits.\nReturns the number of integer bits.\nReturns the number of integer bits.\nReturns the number of integer bits.\nReturns the number of integer bits.\nReturns the number of integer bits.\nReturns the number of integer bits.\nReturns the number of integer bits.\nReturns the number of integer bits.\nReturns the number of integer bits.\nReturns the number of integer bits.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the number is &lt; 0.\nReturns <code>true</code> if the number is &lt; 0.\nReturns <code>true</code> if the number is &lt; 0.\nReturns <code>true</code> if the number is &lt; 0.\nReturns <code>true</code> if the number is &lt; 0.\nReturns <code>true</code> if the number is &lt; 0.\nReturns <code>true</code> if the number is &gt; 0.\nReturns <code>true</code> if the number is &gt; 0.\nReturns <code>true</code> if the number is &gt; 0.\nReturns <code>true</code> if the number is &gt; 0.\nReturns <code>true</code> if the number is &gt; 0.\nReturns <code>true</code> if the number is &gt; 0.\nReturns <code>true</code> if the fixed-point number is 2k for some …\nReturns <code>true</code> if the fixed-point number is 2k for some …\nReturns <code>true</code> if the fixed-point number is 2k for some …\nReturns <code>true</code> if the fixed-point number is 2k for some …\nReturns <code>true</code> if the fixed-point number is 2k for some …\nReturns <code>true</code> if the fixed-point number is 2k for some …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nConverts a <code>bool</code> to a fixed-point number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a number.\nConverts a <code>bool</code> to a fixed-point number.\nConverts an integer to a fixed-point number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a <code>bool</code> to a fixed-point number.\nConverts a fixed-pint number.\nConverts an integer to a fixed-point number.\nConverts an integer to a fixed-point number.\nConverts a number.\nConverts a number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts an integer to a fixed-point number.\nConverts a fixed-pint number.\nConverts an integer to a fixed-point number.\nConverts a fixed-pint number.\nConverts a <code>bool</code> to a fixed-point number.\nConverts an integer to a fixed-point number.\nConverts an integer to a fixed-point number.\nConverts a fixed-pint number.\nConverts an integer to a fixed-point number.\nConverts a <code>bool</code> to a fixed-point number.\nConverts a fixed-pint number.\nConverts an integer to a fixed-point number.\nConverts a fixed-pint number.\nConverts an integer to a fixed-point number.\nConverts a number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a <code>bool</code> to a fixed-point number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts an integer to a fixed-point number.\nConverts a number.\nConverts a <code>bool</code> to a fixed-point number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts an integer to a fixed-point number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a <code>bool</code> to a fixed-point number.\nConverts an integer to a fixed-point number.\nConverts a number.\nConverts a fixed-pint number.\nConverts an integer to a fixed-point number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts an integer to a fixed-point number.\nConverts an integer to a fixed-point number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a number.\nConverts a <code>bool</code> to a fixed-point number.\nConverts an integer to a fixed-point number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts an integer to a fixed-point number.\nConverts an integer to a fixed-point number.\nConverts a fixed-pint number.\nConverts an integer to a fixed-point number.\nConverts an integer to a fixed-point number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts an integer to a fixed-point number.\nConverts a fixed-pint number.\nConverts an integer to a fixed-point number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts a number.\nConverts a fixed-pint number.\nConverts an integer to a fixed-point number.\nConverts an integer to a fixed-point number.\nConverts an integer to a fixed-point number.\nConverts a fixed-pint number.\nConverts an integer to a fixed-point number.\nConverts a fixed-pint number.\nConverts a fixed-pint number.\nConverts an integer to a fixed-point number.\nConverts an integer to a fixed-point number.\nConverts a <code>bool</code> to a fixed-point number.\nConverts a fixed-pint number.\nConverts an integer to a fixed-point number.\nConverts a fixed-pint number.\nReturns the largest value that can be represented.\nReturns the largest value that can be represented.\nReturns the largest value that can be represented.\nReturns the largest value that can be represented.\nReturns the largest value that can be represented.\nReturns the largest value that can be represented.\nReturns the largest value that can be represented.\nReturns the largest value that can be represented.\nReturns the largest value that can be represented.\nReturns the largest value that can be represented.\nReturns the largest value that can be represented.\nReturns the smallest value that can be represented.\nReturns the smallest value that can be represented.\nReturns the smallest value that can be represented.\nReturns the smallest value that can be represented.\nReturns the smallest value that can be represented.\nReturns the smallest value that can be represented.\nReturns the smallest value that can be represented.\nReturns the smallest value that can be represented.\nReturns the smallest value that can be represented.\nReturns the smallest value that can be represented.\nReturns the smallest value that can be represented.\nReturns the smallest power of two that is ≥ <code>self</code>.\nReturns the smallest power of two that is ≥ <code>self</code>.\nReturns the smallest power of two that is ≥ <code>self</code>.\nReturns the smallest power of two that is ≥ <code>self</code>.\nReturns the smallest power of two that is ≥ <code>self</code>.\nReturns the smallest power of two that is ≥ <code>self</code>.\nOverflowing absolute value.\nOverflowing absolute value.\nOverflowing absolute value.\nOverflowing absolute value.\nOverflowing absolute value.\nOverflowing addition.\nOverflowing addition.\nOverflowing addition.\nOverflowing addition.\nOverflowing addition.\nOverflowing addition.\nOverflowing addition.\nOverflowing addition.\nOverflowing addition.\nOverflowing addition.\nOverflowing ceil. Rounds to the next integer towards +∞.\nOverflowing ceil. Rounds to the next integer towards +∞.\nOverflowing ceil. Rounds to the next integer towards +∞.\nOverflowing ceil. Rounds to the next integer towards +∞.\nOverflowing ceil. Rounds to the next integer towards +∞.\nOverflowing ceil. Rounds to the next integer towards +∞.\nOverflowing ceil. Rounds to the next integer towards +∞.\nOverflowing ceil. Rounds to the next integer towards +∞.\nOverflowing ceil. Rounds to the next integer towards +∞.\nOverflowing ceil. Rounds to the next integer towards +∞.\nOverflowing division.\nOverflowing division.\nOverflowing division.\nOverflowing division.\nOverflowing division.\nOverflowing division.\nOverflowing division.\nOverflowing division.\nOverflowing division.\nOverflowing division.\nOverflowing Euclidean division.\nOverflowing Euclidean division.\nOverflowing Euclidean division.\nOverflowing Euclidean division.\nOverflowing Euclidean division.\nOverflowing Euclidean division.\nOverflowing Euclidean division.\nOverflowing Euclidean division.\nOverflowing Euclidean division.\nOverflowing Euclidean division.\nOverflowing Euclidean division by an integer.\nOverflowing Euclidean division by an integer.\nOverflowing Euclidean division by an integer.\nOverflowing Euclidean division by an integer.\nOverflowing Euclidean division by an integer.\nOverflowing Euclidean division by an integer.\nOverflowing Euclidean division by an integer.\nOverflowing Euclidean division by an integer.\nOverflowing Euclidean division by an integer.\nOverflowing Euclidean division by an integer.\nOverflowing division by an integer.\nOverflowing division by an integer.\nOverflowing division by an integer.\nOverflowing division by an integer.\nOverflowing division by an integer.\nOverflowing division by an integer.\nOverflowing division by an integer.\nOverflowing division by an integer.\nOverflowing division by an integer.\nOverflowing division by an integer.\nOverflowing floor. Rounds to the next integer towards …\nOverflowing floor. Rounds to the next integer towards …\nOverflowing floor. Rounds to the next integer towards …\nOverflowing floor. Rounds to the next integer towards …\nOverflowing floor. Rounds to the next integer towards …\nOverflowing floor. Rounds to the next integer towards …\nOverflowing floor. Rounds to the next integer towards …\nOverflowing floor. Rounds to the next integer towards …\nOverflowing floor. Rounds to the next integer towards …\nOverflowing floor. Rounds to the next integer towards …\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number.\nCreates a fixed-point number from another number.\nCreates a fixed-point number from another number.\nCreates a fixed-point number from another number.\nCreates a fixed-point number from another number.\nCreates a fixed-point number from another number.\nCreates a fixed-point number from another number.\nCreates a fixed-point number from another number.\nCreates a fixed-point number from another number.\nCreates a fixed-point number from another number.\nCreates a fixed-point number from another number.\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nOverflowing multiplication.\nOverflowing multiplication.\nOverflowing multiplication.\nOverflowing multiplication.\nOverflowing multiplication.\nOverflowing multiplication.\nOverflowing multiplication.\nOverflowing multiplication.\nOverflowing multiplication.\nOverflowing multiplication.\nOverflowing multiplication by an integer.\nOverflowing multiplication by an integer.\nOverflowing multiplication by an integer.\nOverflowing multiplication by an integer.\nOverflowing multiplication by an integer.\nOverflowing multiplication by an integer.\nOverflowing multiplication by an integer.\nOverflowing multiplication by an integer.\nOverflowing multiplication by an integer.\nOverflowing multiplication by an integer.\nOverflowing negation.\nOverflowing negation.\nOverflowing negation.\nOverflowing negation.\nOverflowing negation.\nOverflowing negation.\nOverflowing negation.\nOverflowing negation.\nOverflowing negation.\nOverflowing negation.\nRemainder for Euclidean division by an integer.\nRemainder for Euclidean division by an integer.\nRemainder for Euclidean division by an integer.\nRemainder for Euclidean division by an integer.\nRemainder for Euclidean division by an integer.\nRemainder for Euclidean division by an integer.\nRemainder for Euclidean division by an integer.\nRemainder for Euclidean division by an integer.\nRemainder for Euclidean division by an integer.\nRemainder for Euclidean division by an integer.\nRemainder for division by an integer.\nRemainder for division by an integer.\nRemainder for division by an integer.\nRemainder for division by an integer.\nRemainder for division by an integer.\nRemainder for division by an integer.\nRemainder for division by an integer.\nRemainder for division by an integer.\nRemainder for division by an integer.\nRemainder for division by an integer.\nOverflowing round. Rounds to the next integer to the …\nOverflowing round. Rounds to the next integer to the …\nOverflowing round. Rounds to the next integer to the …\nOverflowing round. Rounds to the next integer to the …\nOverflowing round. Rounds to the next integer to the …\nOverflowing round. Rounds to the next integer to the …\nOverflowing round. Rounds to the next integer to the …\nOverflowing round. Rounds to the next integer to the …\nOverflowing round. Rounds to the next integer to the …\nOverflowing round. Rounds to the next integer to the …\nOverflowing round. Rounds to the next integer to the …\nOverflowing round. Rounds to the next integer to the …\nOverflowing round. Rounds to the next integer to the …\nOverflowing round. Rounds to the next integer to the …\nOverflowing round. Rounds to the next integer to the …\nOverflowing round. Rounds to the next integer to the …\nOverflowing round. Rounds to the next integer to the …\nOverflowing round. Rounds to the next integer to the …\nOverflowing round. Rounds to the next integer to the …\nOverflowing round. Rounds to the next integer to the …\nOverflowing shift left.\nOverflowing shift left.\nOverflowing shift left.\nOverflowing shift left.\nOverflowing shift left.\nOverflowing shift left.\nOverflowing shift left.\nOverflowing shift left.\nOverflowing shift left.\nOverflowing shift left.\nOverflowing shift right.\nOverflowing shift right.\nOverflowing shift right.\nOverflowing shift right.\nOverflowing shift right.\nOverflowing shift right.\nOverflowing shift right.\nOverflowing shift right.\nOverflowing shift right.\nOverflowing shift right.\nOverflowing subtraction.\nOverflowing subtraction.\nOverflowing subtraction.\nOverflowing subtraction.\nOverflowing subtraction.\nOverflowing subtraction.\nOverflowing subtraction.\nOverflowing subtraction.\nOverflowing subtraction.\nOverflowing subtraction.\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number to another number.\nConverts a fixed-point number to another number.\nConverts a fixed-point number to another number.\nConverts a fixed-point number to another number.\nConverts a fixed-point number to another number.\nConverts a fixed-point number to another number.\nConverts a fixed-point number to another number.\nConverts a fixed-point number to another number.\nConverts a fixed-point number to another number.\nConverts a fixed-point number to another number.\nA prelude for users of the <em>fixed</em> crate.\nRemainder for Euclidean division.\nRemainder for Euclidean division.\nRemainder for Euclidean division.\nRemainder for Euclidean division.\nRemainder for Euclidean division.\nRemainder for Euclidean division.\nRemainder for Euclidean division.\nRemainder for Euclidean division.\nRemainder for Euclidean division.\nRemainder for Euclidean division.\nRemainder for Euclidean division.\nRemainder for Euclidean division.\nRemainder for Euclidean division by an integer.\nRemainder for Euclidean division by an integer.\nRemainder for Euclidean division by an integer.\nRemainder for Euclidean division by an integer.\nRemainder for Euclidean division by an integer.\nRemainder for Euclidean division by an integer.\nRemainder for Euclidean division by an integer.\nRemainder for Euclidean division by an integer.\nRemainder for Euclidean division by an integer.\nRemainder for Euclidean division by an integer.\nShifts to the left by <code>n</code> bits, wrapping the truncated bits …\nShifts to the left by <code>n</code> bits, wrapping the truncated bits …\nShifts to the left by <code>n</code> bits, wrapping the truncated bits …\nShifts to the left by <code>n</code> bits, wrapping the truncated bits …\nShifts to the left by <code>n</code> bits, wrapping the truncated bits …\nShifts to the left by <code>n</code> bits, wrapping the truncated bits …\nShifts to the left by <code>n</code> bits, wrapping the truncated bits …\nShifts to the left by <code>n</code> bits, wrapping the truncated bits …\nShifts to the left by <code>n</code> bits, wrapping the truncated bits …\nShifts to the left by <code>n</code> bits, wrapping the truncated bits …\nShifts to the left by <code>n</code> bits, wrapping the truncated bits …\nShifts to the right by <code>n</code> bits, wrapping the truncated bits …\nShifts to the right by <code>n</code> bits, wrapping the truncated bits …\nShifts to the right by <code>n</code> bits, wrapping the truncated bits …\nShifts to the right by <code>n</code> bits, wrapping the truncated bits …\nShifts to the right by <code>n</code> bits, wrapping the truncated bits …\nShifts to the right by <code>n</code> bits, wrapping the truncated bits …\nShifts to the right by <code>n</code> bits, wrapping the truncated bits …\nShifts to the right by <code>n</code> bits, wrapping the truncated bits …\nShifts to the right by <code>n</code> bits, wrapping the truncated bits …\nShifts to the right by <code>n</code> bits, wrapping the truncated bits …\nShifts to the right by <code>n</code> bits, wrapping the truncated bits …\nWrapping round. Rounds to the next integer to the nearest, …\nRounds to the nearest integer, with ties rounded away from …\nRounds to the nearest integer, with ties rounded away from …\nRounds to the nearest integer, with ties rounded away from …\nRounds to the nearest integer, with ties rounded away from …\nRounds to the nearest integer, with ties rounded away from …\nRounds to the nearest integer, with ties rounded away from …\nRounds to the nearest integer, with ties rounded away from …\nRounds to the nearest integer, with ties rounded away from …\nRounds to the nearest integer, with ties rounded away from …\nRounds to the nearest integer, with ties rounded away from …\nWrapping round. Rounds to the next integer to the nearest, …\nRounds to the nearest integer, with ties rounded to even.\nRounds to the nearest integer, with ties rounded to even.\nRounds to the nearest integer, with ties rounded to even.\nRounds to the nearest integer, with ties rounded to even.\nRounds to the nearest integer, with ties rounded to even.\nRounds to the nearest integer, with ties rounded to even.\nRounds to the nearest integer, with ties rounded to even.\nRounds to the nearest integer, with ties rounded to even.\nRounds to the nearest integer, with ties rounded to even.\nRounds to the nearest integer, with ties rounded to even.\nRounds to the next integer towards 0.\nRounds to the next integer towards 0.\nRounds to the next integer towards 0.\nRounds to the next integer towards 0.\nRounds to the next integer towards 0.\nRounds to the next integer towards 0.\nRounds to the next integer towards 0.\nRounds to the next integer towards 0.\nRounds to the next integer towards 0.\nRounds to the next integer towards 0.\nRounds to the next integer towards 0.\nSaturating absolute value. Returns the absolute value, …\nSaturating absolute value. Returns the absolute value, …\nSaturating absolute value. Returns the absolute value, …\nSaturating absolute value. Returns the absolute value, …\nSaturating absolute value. Returns the absolute value, …\nSaturating addition. Returns the sum, saturating on …\nSaturating addition. Returns the sum, saturating on …\nSaturating addition. Returns the sum, saturating on …\nSaturating addition. Returns the sum, saturating on …\nSaturating addition. Returns the sum, saturating on …\nSaturating addition. Returns the sum, saturating on …\nSaturating addition. Returns the sum, saturating on …\nSaturating addition. Returns the sum, saturating on …\nSaturating addition. Returns the sum, saturating on …\nSaturating addition. Returns the sum, saturating on …\nSaturating ceil. Rounds to the next integer towards +∞, …\nSaturating ceil. Rounds to the next integer towards +∞, …\nSaturating ceil. Rounds to the next integer towards +∞, …\nSaturating ceil. Rounds to the next integer towards +∞, …\nSaturating ceil. Rounds to the next integer towards +∞, …\nSaturating ceil. Rounds to the next integer towards +∞, …\nSaturating ceil. Rounds to the next integer towards +∞, …\nSaturating ceil. Rounds to the next integer towards +∞, …\nSaturating ceil. Rounds to the next integer towards +∞, …\nSaturating ceil. Rounds to the next integer towards +∞, …\nSaturating division. Returns the quotient, saturating on …\nSaturating division. Returns the quotient, saturating on …\nSaturating division. Returns the quotient, saturating on …\nSaturating division. Returns the quotient, saturating on …\nSaturating division. Returns the quotient, saturating on …\nSaturating division. Returns the quotient, saturating on …\nSaturating division. Returns the quotient, saturating on …\nSaturating division. Returns the quotient, saturating on …\nSaturating division. Returns the quotient, saturating on …\nSaturating division. Returns the quotient, saturating on …\nSaturating Euclidean division. Returns the quotient, …\nSaturating Euclidean division. Returns the quotient, …\nSaturating Euclidean division. Returns the quotient, …\nSaturating Euclidean division. Returns the quotient, …\nSaturating Euclidean division. Returns the quotient, …\nSaturating Euclidean division. Returns the quotient, …\nSaturating Euclidean division. Returns the quotient, …\nSaturating Euclidean division. Returns the quotient, …\nSaturating Euclidean division. Returns the quotient, …\nSaturating Euclidean division. Returns the quotient, …\nSaturating floor. Rounds to the next integer towards …\nSaturating floor. Rounds to the next integer towards …\nSaturating floor. Rounds to the next integer towards …\nSaturating floor. Rounds to the next integer towards …\nSaturating floor. Rounds to the next integer towards …\nSaturating floor. Rounds to the next integer towards …\nSaturating floor. Rounds to the next integer towards …\nSaturating floor. Rounds to the next integer towards …\nSaturating floor. Rounds to the next integer towards …\nSaturating floor. Rounds to the next integer towards …\nConverts a fixed-point number, saturating if it does not …\nConverts a fixed-point number, saturating if it does not …\nConverts a fixed-point number, saturating if it does not …\nConverts a fixed-point number, saturating if it does not …\nConverts a fixed-point number, saturating if it does not …\nConverts a fixed-point number, saturating if it does not …\nConverts a fixed-point number, saturating if it does not …\nConverts a fixed-point number, saturating if it does not …\nConverts a fixed-point number, saturating if it does not …\nConverts a fixed-point number, saturating if it does not …\nCreates a fixed-point number from another number, …\nCreates a fixed-point number from another number, …\nCreates a fixed-point number from another number, …\nCreates a fixed-point number from another number, …\nCreates a fixed-point number from another number, …\nCreates a fixed-point number from another number, …\nCreates a fixed-point number from another number, …\nCreates a fixed-point number from another number, …\nCreates a fixed-point number from another number, …\nCreates a fixed-point number from another number, …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nPrases a string slice containing hexadecimal digits to …\nPrases a string slice containing hexadecimal digits to …\nPrases a string slice containing hexadecimal digits to …\nPrases a string slice containing hexadecimal digits to …\nPrases a string slice containing hexadecimal digits to …\nPrases a string slice containing hexadecimal digits to …\nPrases a string slice containing hexadecimal digits to …\nPrases a string slice containing hexadecimal digits to …\nPrases a string slice containing hexadecimal digits to …\nPrases a string slice containing hexadecimal digits to …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nSaturating multiplication. Returns the product, saturating …\nSaturating multiplication. Returns the product, saturating …\nSaturating multiplication. Returns the product, saturating …\nSaturating multiplication. Returns the product, saturating …\nSaturating multiplication. Returns the product, saturating …\nSaturating multiplication. Returns the product, saturating …\nSaturating multiplication. Returns the product, saturating …\nSaturating multiplication. Returns the product, saturating …\nSaturating multiplication. Returns the product, saturating …\nSaturating multiplication. Returns the product, saturating …\nSaturating multiplication by an integer. Returns the …\nSaturating multiplication by an integer. Returns the …\nSaturating multiplication by an integer. Returns the …\nSaturating multiplication by an integer. Returns the …\nSaturating multiplication by an integer. Returns the …\nSaturating multiplication by an integer. Returns the …\nSaturating multiplication by an integer. Returns the …\nSaturating multiplication by an integer. Returns the …\nSaturating multiplication by an integer. Returns the …\nSaturating multiplication by an integer. Returns the …\nSaturating negation. Returns the negated value, saturating …\nSaturating negation. Returns the negated value, saturating …\nSaturating negation. Returns the negated value, saturating …\nSaturating negation. Returns the negated value, saturating …\nSaturating negation. Returns the negated value, saturating …\nSaturating negation. Returns the negated value, saturating …\nSaturating negation. Returns the negated value, saturating …\nSaturating negation. Returns the negated value, saturating …\nSaturating negation. Returns the negated value, saturating …\nSaturating negation. Returns the negated value, saturating …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating subtraction. Returns the difference, saturating …\nSaturating subtraction. Returns the difference, saturating …\nSaturating subtraction. Returns the difference, saturating …\nSaturating subtraction. Returns the difference, saturating …\nSaturating subtraction. Returns the difference, saturating …\nSaturating subtraction. Returns the difference, saturating …\nSaturating subtraction. Returns the difference, saturating …\nSaturating subtraction. Returns the difference, saturating …\nSaturating subtraction. Returns the difference, saturating …\nSaturating subtraction. Returns the difference, saturating …\nConverts a fixed-point number, saturating if it does not …\nConverts a fixed-point number, saturating if it does not …\nConverts a fixed-point number, saturating if it does not …\nConverts a fixed-point number, saturating if it does not …\nConverts a fixed-point number, saturating if it does not …\nConverts a fixed-point number, saturating if it does not …\nConverts a fixed-point number, saturating if it does not …\nConverts a fixed-point number, saturating if it does not …\nConverts a fixed-point number, saturating if it does not …\nConverts a fixed-point number, saturating if it does not …\nConverts a fixed-point number to another number, …\nConverts a fixed-point number to another number, …\nConverts a fixed-point number to another number, …\nConverts a fixed-point number to another number, …\nConverts a fixed-point number to another number, …\nConverts a fixed-point number to another number, …\nConverts a fixed-point number to another number, …\nConverts a fixed-point number to another number, …\nConverts a fixed-point number to another number, …\nConverts a fixed-point number to another number, …\nReturns a number representing the sign of <code>self</code>.\nReturns a number representing the sign of <code>self</code>.\nReturns a number representing the sign of <code>self</code>.\nReturns a number representing the sign of <code>self</code>.\nReturns a number representing the sign of <code>self</code>.\nReturns a number representing the sign of <code>self</code>.\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nCreates an integer that has a bitwise representation …\nCreates an integer that has a bitwise representation …\nCreates an integer that has a bitwise representation …\nCreates an integer that has a bitwise representation …\nCreates an integer that has a bitwise representation …\nCreates an integer that has a bitwise representation …\nCreates an integer that has a bitwise representation …\nCreates an integer that has a bitwise representation …\nCreates an integer that has a bitwise representation …\nCreates an integer that has a bitwise representation …\nCreates an integer that has a bitwise representation …\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number.\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nConverts a fixed-point number to another number, wrapping …\nConverts a fixed-point number to another number.\nConverts a fixed-point number to another number.\nConverts a fixed-point number to another number.\nConverts a fixed-point number to another number.\nConverts a fixed-point number to another number.\nConverts a fixed-point number to another number.\nConverts a fixed-point number to another number.\nConverts a fixed-point number to another number.\nConverts a fixed-point number to another number.\nConverts a fixed-point number to another number.\nReturns the number of trailing zeros in the binary …\nReturns the number of trailing zeros in the binary …\nReturns the number of trailing zeros in the binary …\nReturns the number of trailing zeros in the binary …\nReturns the number of trailing zeros in the binary …\nReturns the number of trailing zeros in the binary …\nReturns the number of trailing zeros in the binary …\nReturns the number of trailing zeros in the binary …\nReturns the number of trailing zeros in the binary …\nReturns the number of trailing zeros in the binary …\nReturns the number of trailing zeros in the binary …\nThis module contains traits.\nThis module contains transcendental functions.\nThis module provides type aliases for all supported …\nWrapping absolute value. Returns the absolute value, …\nWrapping absolute value. Returns the absolute value, …\nWrapping absolute value. Returns the absolute value, …\nWrapping absolute value. Returns the absolute value, …\nWrapping absolute value. Returns the absolute value, …\nWrapping addition. Returns the sum, wrapping on overflow.\nWrapping addition. Returns the sum, wrapping on overflow.\nWrapping addition. Returns the sum, wrapping on overflow.\nWrapping addition. Returns the sum, wrapping on overflow.\nWrapping addition. Returns the sum, wrapping on overflow.\nWrapping addition. Returns the sum, wrapping on overflow.\nWrapping addition. Returns the sum, wrapping on overflow.\nWrapping addition. Returns the sum, wrapping on overflow.\nWrapping addition. Returns the sum, wrapping on overflow.\nWrapping addition. Returns the sum, wrapping on overflow.\nWrapping ceil. Rounds to the next integer towards +∞, …\nWrapping ceil. Rounds to the next integer towards +∞, …\nWrapping ceil. Rounds to the next integer towards +∞, …\nWrapping ceil. Rounds to the next integer towards +∞, …\nWrapping ceil. Rounds to the next integer towards +∞, …\nWrapping ceil. Rounds to the next integer towards +∞, …\nWrapping ceil. Rounds to the next integer towards +∞, …\nWrapping ceil. Rounds to the next integer towards +∞, …\nWrapping ceil. Rounds to the next integer towards +∞, …\nWrapping ceil. Rounds to the next integer towards +∞, …\nWrapping division. Returns the quotient, wrapping on …\nWrapping division. Returns the quotient, wrapping on …\nWrapping division. Returns the quotient, wrapping on …\nWrapping division. Returns the quotient, wrapping on …\nWrapping division. Returns the quotient, wrapping on …\nWrapping division. Returns the quotient, wrapping on …\nWrapping division. Returns the quotient, wrapping on …\nWrapping division. Returns the quotient, wrapping on …\nWrapping division. Returns the quotient, wrapping on …\nWrapping division. Returns the quotient, wrapping on …\nWrapping Euclidean division. Returns the quotient, …\nWrapping Euclidean division. Returns the quotient, …\nWrapping Euclidean division. Returns the quotient, …\nWrapping Euclidean division. Returns the quotient, …\nWrapping Euclidean division. Returns the quotient, …\nWrapping Euclidean division. Returns the quotient, …\nWrapping Euclidean division. Returns the quotient, …\nWrapping Euclidean division. Returns the quotient, …\nWrapping Euclidean division. Returns the quotient, …\nWrapping Euclidean division. Returns the quotient, …\nWrapping Euclidean division by an integer. Returns the …\nWrapping Euclidean division by an integer. Returns the …\nWrapping Euclidean division by an integer. Returns the …\nWrapping Euclidean division by an integer. Returns the …\nWrapping Euclidean division by an integer. Returns the …\nWrapping Euclidean division by an integer. Returns the …\nWrapping Euclidean division by an integer. Returns the …\nWrapping Euclidean division by an integer. Returns the …\nWrapping Euclidean division by an integer. Returns the …\nWrapping Euclidean division by an integer. Returns the …\nWrapping division by an integer. Returns the quotient.\nWrapping division by an integer. Returns the quotient.\nWrapping division by an integer. Returns the quotient.\nWrapping division by an integer. Returns the quotient.\nWrapping division by an integer. Returns the quotient.\nWrapping division by an integer. Returns the quotient, …\nWrapping division by an integer. Returns the quotient, …\nWrapping division by an integer. Returns the quotient, …\nWrapping division by an integer. Returns the quotient, …\nWrapping division by an integer. Returns the quotient, …\nWrapping floor. Rounds to the next integer towards −∞. …\nWrapping floor. Rounds to the next integer towards −∞. …\nWrapping floor. Rounds to the next integer towards −∞. …\nWrapping floor. Rounds to the next integer towards −∞. …\nWrapping floor. Rounds to the next integer towards −∞. …\nWrapping floor. Rounds to the next integer towards −∞, …\nWrapping floor. Rounds to the next integer towards −∞, …\nWrapping floor. Rounds to the next integer towards −∞, …\nWrapping floor. Rounds to the next integer towards −∞, …\nWrapping floor. Rounds to the next integer towards −∞, …\nConverts a fixed-point number, wrapping if it does not fit.\nConverts a fixed-point number, wrapping if it does not fit.\nConverts a fixed-point number, wrapping if it does not fit.\nConverts a fixed-point number, wrapping if it does not fit.\nConverts a fixed-point number, wrapping if it does not fit.\nConverts a fixed-point number, wrapping if it does not fit.\nConverts a fixed-point number, wrapping if it does not fit.\nConverts a fixed-point number, wrapping if it does not fit.\nConverts a fixed-point number, wrapping if it does not fit.\nConverts a fixed-point number, wrapping if it does not fit.\nCreates a fixed-point number from another number, wrapping …\nCreates a fixed-point number from another number, wrapping …\nCreates a fixed-point number from another number, wrapping …\nCreates a fixed-point number from another number, wrapping …\nCreates a fixed-point number from another number, wrapping …\nCreates a fixed-point number from another number, wrapping …\nCreates a fixed-point number from another number, wrapping …\nCreates a fixed-point number from another number, wrapping …\nCreates a fixed-point number from another number, wrapping …\nCreates a fixed-point number from another number, wrapping …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nWrapping multiplication. Returns the product, wrapping on …\nWrapping multiplication. Returns the product, wrapping on …\nWrapping multiplication. Returns the product, wrapping on …\nWrapping multiplication. Returns the product, wrapping on …\nWrapping multiplication. Returns the product, wrapping on …\nWrapping multiplication. Returns the product, wrapping on …\nWrapping multiplication. Returns the product, wrapping on …\nWrapping multiplication. Returns the product, wrapping on …\nWrapping multiplication. Returns the product, wrapping on …\nWrapping multiplication. Returns the product, wrapping on …\nWrapping multiplication by an integer. Returns the …\nWrapping multiplication by an integer. Returns the …\nWrapping multiplication by an integer. Returns the …\nWrapping multiplication by an integer. Returns the …\nWrapping multiplication by an integer. Returns the …\nWrapping multiplication by an integer. Returns the …\nWrapping multiplication by an integer. Returns the …\nWrapping multiplication by an integer. Returns the …\nWrapping multiplication by an integer. Returns the …\nWrapping multiplication by an integer. Returns the …\nWrapping negation. Returns the negated value, wrapping on …\nWrapping negation. Returns the negated value, wrapping on …\nWrapping negation. Returns the negated value, wrapping on …\nWrapping negation. Returns the negated value, wrapping on …\nWrapping negation. Returns the negated value, wrapping on …\nWrapping negation. Returns the negated value, wrapping on …\nWrapping negation. Returns the negated value, wrapping on …\nWrapping negation. Returns the negated value, wrapping on …\nWrapping negation. Returns the negated value, wrapping on …\nWrapping negation. Returns the negated value, wrapping on …\nWrapping remainder for Euclidean division by an integer. …\nWrapping remainder for Euclidean division by an integer. …\nWrapping remainder for Euclidean division by an integer. …\nWrapping remainder for Euclidean division by an integer. …\nWrapping remainder for Euclidean division by an integer. …\nWrapping remainder for Euclidean division by an integer. …\nWrapping remainder for Euclidean division by an integer. …\nWrapping remainder for Euclidean division by an integer. …\nWrapping remainder for Euclidean division by an integer. …\nWrapping remainder for Euclidean division by an integer. …\nRemainder for division by an integer.\nRemainder for division by an integer.\nRemainder for division by an integer.\nRemainder for division by an integer.\nRemainder for division by an integer.\nRemainder for division by an integer.\nRemainder for division by an integer.\nRemainder for division by an integer.\nRemainder for division by an integer.\nRemainder for division by an integer.\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping shift left. Wraps <code>rhs</code> if <code>rhs</code> ≥ 8, then shifts …\nWrapping shift left. Wraps <code>rhs</code> if <code>rhs</code> ≥ 16, then …\nWrapping shift left. Wraps <code>rhs</code> if <code>rhs</code> ≥ 32, then …\nWrapping shift left. Wraps <code>rhs</code> if <code>rhs</code> ≥ 64, then …\nWrapping shift left. Wraps <code>rhs</code> if <code>rhs</code> ≥ 128, then …\nWrapping shift left. Wraps <code>rhs</code> if <code>rhs</code> ≥ 8, then shifts …\nWrapping shift left. Wraps <code>rhs</code> if <code>rhs</code> ≥ 16, then …\nWrapping shift left. Wraps <code>rhs</code> if <code>rhs</code> ≥ 32, then …\nWrapping shift left. Wraps <code>rhs</code> if <code>rhs</code> ≥ 64, then …\nWrapping shift left. Wraps <code>rhs</code> if <code>rhs</code> ≥ 128, then …\nWrapping shift right. Wraps <code>rhs</code> if <code>rhs</code> ≥ 8, then …\nWrapping shift right. Wraps <code>rhs</code> if <code>rhs</code> ≥ 16, then …\nWrapping shift right. Wraps <code>rhs</code> if <code>rhs</code> ≥ 32, then …\nWrapping shift right. Wraps <code>rhs</code> if <code>rhs</code> ≥ 64, then …\nWrapping shift right. Wraps <code>rhs</code> if <code>rhs</code> ≥ 128, then …\nWrapping shift right. Wraps <code>rhs</code> if <code>rhs</code> ≥ 8, then …\nWrapping shift right. Wraps <code>rhs</code> if <code>rhs</code> ≥ 16, then …\nWrapping shift right. Wraps <code>rhs</code> if <code>rhs</code> ≥ 32, then …\nWrapping shift right. Wraps <code>rhs</code> if <code>rhs</code> ≥ 64, then …\nWrapping shift right. Wraps <code>rhs</code> if <code>rhs</code> ≥ 128, then …\nWrapping subtraction. Returns the difference, wrapping on …\nWrapping subtraction. Returns the difference, wrapping on …\nWrapping subtraction. Returns the difference, wrapping on …\nWrapping subtraction. Returns the difference, wrapping on …\nWrapping subtraction. Returns the difference, wrapping on …\nWrapping subtraction. Returns the difference, wrapping on …\nWrapping subtraction. Returns the difference, wrapping on …\nWrapping subtraction. Returns the difference, wrapping on …\nWrapping subtraction. Returns the difference, wrapping on …\nWrapping subtraction. Returns the difference, wrapping on …\nConverts a fixed-point number, wrapping if it does not fit.\nConverts a fixed-point number, wrapping if it does not fit.\nConverts a fixed-point number, wrapping if it does not fit.\nConverts a fixed-point number, wrapping if it does not fit.\nConverts a fixed-point number, wrapping if it does not fit.\nConverts a fixed-point number, wrapping if it does not fit.\nConverts a fixed-point number, wrapping if it does not fit.\nConverts a fixed-point number, wrapping if it does not fit.\nConverts a fixed-point number, wrapping if it does not fit.\nConverts a fixed-point number, wrapping if it does not fit.\nConverts a fixed-point number to another number, wrapping …\nConverts a fixed-point number to another number, wrapping …\nConverts a fixed-point number to another number, wrapping …\nConverts a fixed-point number to another number, wrapping …\nConverts a fixed-point number to another number, wrapping …\nConverts a fixed-point number to another number, wrapping …\nConverts a fixed-point number to another number, wrapping …\nConverts a fixed-point number to another number, wrapping …\nConverts a fixed-point number to another number, wrapping …\nConverts a fixed-point number to another number, wrapping …\ne = 2.71828…\n1/π = 0.318309…\n1/√2 = 0.707106…\n1/τ = 0.159154…\n2/π = 0.636619…\n2/√π = 1.12837…\n2/τ = 0.318309…\n4/τ = 0.636619…\nπ/2 = 1.57079…\nπ/3 = 1.04719…\nπ/4 = 0.785398…\nπ/6 = 0.523598…\nπ/8 = 0.392699…\nτ/12 = 0.523598…\nτ/2 = 3.14159…\nτ/3 = 2.09439…\nτ/4 = 1.57079…\nτ/6 = 1.04719…\nτ/8 = 0.785398…\nln 10 = 2.30258…\nln 2 = 0.693147…\nlog10 2 = 0.301029…\nlog10 e = 0.434294…\nlog2 10 = 3.32192…\nlog2 e = 1.44269…\nπ = 3.14159…\n√2 = 1.41421…\nτ = 6.28318…\nThe primitive integer underlying type.\nA byte array with the same size as the type.\nThis trait provides methods common to all fixed-point …\nThis trait is used to provide supertraits to the <code>Fixed</code> …\nThis trait provides methods common to all signed …\nThis trait provides methods common to all unsigned …\nThe number of fractional bits.\nThis trait provides checked conversions from fixed-point …\nThis trait provides infallible conversions that might be …\nThis trait provides infallible conversions that might be …\nThis trait provides checked conversions to fixed-point …\nReturns the absolute value.\nRounds to the next integer towards +∞.\nChecked absolute value. Returns the absolute value, or <code>None</code>…\nChecked addition. Returns the sum, or <code>None</code> on overflow.\nChecked ceil. Rounds to the next integer towards +∞, …\nChecked division. Returns the quotient, or <code>None</code> if the …\nChecked remainder for Euclidean division. Returns the …\nChecked Euclidean division by an integer. Returns the …\nChecked division by an integer. Returns the quotient, or …\nChecked floor. Rounds to the next integer towards −∞, …\nConverts from a fixed-point number if it fits, otherwise …\nCreates a fixed-point number from another number if it …\nChecked multiplication. Returns the product, or <code>None</code> on …\nChecked multiplication by an integer. Returns the product, …\nChecked negation. Returns the negated value, or <code>None</code> on …\nReturns the smallest power of two that is ≥ <code>self</code>, or …\nChecked remainder. Returns the remainder, or <code>None</code> if the …\nChecked remainder for Euclidean division. Returns the …\nChecked remainder for Euclidean division by an integer. …\nChecked fixed-point remainder for division by an integer. …\nChecked round. Rounds to the nearest integer, with ties …\nChecked round. Rounds to the nearest integer, with ties …\nChecked shift left. Returns the shifted number, or <code>None</code> if …\nChecked shift right. Returns the shifted number, or <code>None</code> …\nChecked subtraction. Returns the difference, or <code>None</code> on …\nConverts to a fixed-point number if it fits, otherwise …\nConverts a fixed-point number to another number if it fits,\nReturns the number of ones in the binary representation.\nReturns the number of zeros in the binary representation.\nEuclidean division by an integer.\nEuclidean division by an integer.\nRounds to the next integer towards −∞.\nReturns the fractional part.\nReturns the number of fractional bits.\nCreates a fixed-point number from its representation as a …\nCreates a fixed-point number that has a bitwise …\nConverts from a fixed-point number.\nCreates a fixed-point number from its representation as a …\nCreates a fixed-point number from its representation as a …\nCreates a fixed-point number from another number.\nParses a string slice containing binary digits to return a …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing octal digits to return a …\nReturns the integer part.\nReturns the number of integer bits.\nReturns <code>true</code> if the number is &lt; 0.\nReturns <code>true</code> if the number is &gt; 0.\nReturns <code>true</code> if the fixed-point number is 2k for some …\nReturns the number of leading zeros in the binary …\nPerforms the conversion.\nPerforms the conversion.\nReturns the largest value that can be represented.\nReturns the smallest value that can be represented.\nReturns the smallest power of two that is ≥ <code>self</code>.\nOverflowing absolute value.\nOverflowing addition.\nOverflowing ceil. Rounds to the next integer towards +∞.\nOverflowing division.\nOverflowing Euclidean division.\nOverflowing Euclidean division by an integer.\nOverflowing division by an integer.\nOverflowing floor. Rounds to the next integer towards …\nConverts from a fixed-point number.\nCreates a fixed-point number from another number.\nParses a string slice containing decimal digits to return a\nParses a string slice containing binary digits to return a …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing octal digits to return a …\nOverflowing multiplication.\nOverflowing multiplication by an integer.\nOverflowing negation.\nOverflowing remainder for Euclidean division by an integer.\nRemainder for division by an integer.\nOverflowing round. Rounds to the next integer to the …\nOverflowing round. Rounds to the next integer to the …\nOverflowing shift left.\nOverflowing shift right.\nOverflowing subtraction.\nConverts to a fixed-point number.\nConverts a fixed-point number to another number.\nRemainder for Euclidean division.\nRemainder for Euclidean division by an integer.\nShifts to the left by <code>n</code> bits, wrapping the truncated bits …\nShifts to the right by <code>n</code> bits, wrapping the truncated bits …\nRounds to the nearest integer, with ties rounded away from …\nRounds to the nearest integer, with ties rounded to even.\nRounds to the next integer towards 0.\nSaturating absolute value. Returns the absolute value, …\nSaturating addition. Returns the sum, saturating on …\nSaturating ceil. Rounds to the next integer towards +∞, …\nSaturating division. Returns the quotient, saturating on …\nSaturating Euclidean division. Returns the quotient, …\nSaturating floor. Rounds to the next integer towards …\nConverts from a fixed-point number, saturating if it does …\nCreates a fixed-point number from another number, …\nParses a string slice containing decimal digits to return a\nParses a string slice containing binary digits to return a …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing octal digits to return a …\nSaturating multiplication. Returns the product, saturating …\nSaturating multiplication by an integer. Returns the …\nSaturated negation. Returns the negated value, saturating …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating subtraction. Returns the difference, saturating …\nConverts to a fixed-point number, saturating if it does …\nConverts a fixed-point number to another number, …\nReturns a number representing the sign of <code>self</code>.\nReturns the memory representation of this fixed-point …\nCreates an integer that has a bitwise representation …\nConverts to a fixed-point number.\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nConverts a fixed-point number to another number.\nReturns the number of trailing zeros in the binary …\nWrapping absolute value. Returns the absolute value, …\nWrapping addition. Returns the sum, wrapping on overflow.\nWrapping ceil. Rounds to the next integer towards +∞, …\nWrapping division. Returns the quotient, wrapping on …\nWrapping Euclidean division. Returns the quotient, …\nWrapping Euclidean division by an integer. Returns the …\nWrapping division by an integer. Returns the quotient, …\nWrapping floor. Rounds to the next integer towards −∞, …\nConverts from a fixed-point number, wrapping if it does …\nCreates a fixed-point number from another number, wrapping …\nParses a string slice containing decimal digits to return a\nParses a string slice containing binary digits to return a …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing octal digits to return a …\nWrapping multiplication. Returns the product, wrapping on …\nWrapping multiplication by an integer. Returns the …\nWrapping negation. Returns the negated value, wrapping on …\nWrapping remainder for Euclidean division by an integer. …\nRemainder for division by an integer.\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping shift left. Wraps <code>rhs</code> if <code>rhs</code> ≥ the number of …\nWrapping shift right. Wraps <code>rhs</code> if <code>rhs</code> ≥ the number of …\nWrapping subtraction. Returns the difference, wrapping on …\nConverts to a fixed-point number, wrapping if it does not …\nConverts a fixed-point number to another number, wrapping …\ne\npi/2\npi/4\nlog2(e)\none\npi\nthree\ntwo\n2*pi\nzero\narcsine function in radians\ncosine function in radians\nexponential function e^(operand)\nnatural logarithm\nbase 2 logarithm\npower\npower with integer exponend\nsine function in radians\nsquare root\ntangent function in radians\n<code>FixedI128</code> with no integer bits and 128 fractional bits.\n<code>FixedI16</code> with no integer bits and 16 fractional bits.\n<code>FixedI32</code> with no integer bits and 32 fractional bits.\n<code>FixedI64</code> with no integer bits and 64 fractional bits.\n<code>FixedI8</code> with no integer bits and eight fractional bits.\n<code>FixedI128</code> with 100 integer bits and 28 fractional bits.\n<code>FixedI128</code> with 101 integer bits and 27 fractional bits.\n<code>FixedI128</code> with 102 integer bits and 26 fractional bits.\n<code>FixedI128</code> with 103 integer bits and 25 fractional bits.\n<code>FixedI128</code> with 104 integer bits and 24 fractional bits.\n<code>FixedI128</code> with 105 integer bits and 23 fractional bits.\n<code>FixedI128</code> with 106 integer bits and 22 fractional bits.\n<code>FixedI128</code> with 107 integer bits and 21 fractional bits.\n<code>FixedI128</code> with 108 integer bits and 20 fractional bits.\n<code>FixedI128</code> with 109 integer bits and 19 fractional bits.\n<code>FixedI128</code> with 10 integer bits and 118 fractional bits.\n<code>FixedI32</code> with 10 integer bits and 22 fractional bits.\n<code>FixedI64</code> with 10 integer bits and 54 fractional bits.\n<code>FixedI16</code> with 10 integer bits and six fractional bits.\n<code>FixedI128</code> with 110 integer bits and 18 fractional bits.\n<code>FixedI128</code> with 111 integer bits and 17 fractional bits.\n<code>FixedI128</code> with 112 integer bits and 16 fractional bits.\n<code>FixedI128</code> with 113 integer bits and 15 fractional bits.\n<code>FixedI128</code> with 114 integer bits and 14 fractional bits.\n<code>FixedI128</code> with 115 integer bits and 13 fractional bits.\n<code>FixedI128</code> with 116 integer bits and 12 fractional bits.\n<code>FixedI128</code> with 117 integer bits and 11 fractional bits.\n<code>FixedI128</code> with 118 integer bits and 10 fractional bits.\n<code>FixedI128</code> with 119 integer bits and nine fractional bits.\n<code>FixedI128</code> with 11 integer bits and 117 fractional bits.\n<code>FixedI32</code> with 11 integer bits and 21 fractional bits.\n<code>FixedI16</code> with 11 integer bits and five fractional bits.\n<code>FixedI64</code> with 11 integer bits and 53 fractional bits.\n<code>FixedI128</code> with 120 integer bits and eight fractional bits.\n<code>FixedI128</code> with 121 integer bits and seven fractional bits.\n<code>FixedI128</code> with 122 integer bits and six fractional bits.\n<code>FixedI128</code> with 123 integer bits and five fractional bits.\n<code>FixedI128</code> with 124 integer bits and four fractional bits.\n<code>FixedI128</code> with 125 integer bits and three fractional bits.\n<code>FixedI128</code> with 126 integer bits and two fractional bits.\n<code>FixedI128</code> with 127 integer bits and one fractional bit.\n<code>FixedI128</code> with 128 integer bits and no fractional bits.\n<code>FixedI128</code> with 12 integer bits and 116 fractional bits.\n<code>FixedI32</code> with 12 integer bits and 20 fractional bits.\n<code>FixedI16</code> with 12 integer bits and four fractional bits.\n<code>FixedI64</code> with 12 integer bits and 52 fractional bits.\n<code>FixedI128</code> with 13 integer bits and 115 fractional bits.\n<code>FixedI32</code> with 13 integer bits and 19 fractional bits.\n<code>FixedI16</code> with 13 integer bits and three fractional bits.\n<code>FixedI64</code> with 13 integer bits and 51 fractional bits.\n<code>FixedI128</code> with 14 integer bits and 114 fractional bits.\n<code>FixedI32</code> with 14 integer bits and 18 fractional bits.\n<code>FixedI16</code> with 14 integer bits and two fractional bits.\n<code>FixedI64</code> with 14 integer bits and 50 fractional bits.\n<code>FixedI16</code> with 15 integer bits and one fractional bit.\n<code>FixedI128</code> with 15 integer bits and 113 fractional bits.\n<code>FixedI32</code> with 15 integer bits and 17 fractional bits.\n<code>FixedI64</code> with 15 integer bits and 49 fractional bits.\n<code>FixedI16</code> with 16 integer bits and no fractional bits.\n<code>FixedI128</code> with 16 integer bits and 112 fractional bits.\n<code>FixedI32</code> with 16 integer bits and 16 fractional bits.\n<code>FixedI64</code> with 16 integer bits and 48 fractional bits.\n<code>FixedI128</code> with 17 integer bits and 111 fractional bits.\n<code>FixedI32</code> with 17 integer bits and 15 fractional bits.\n<code>FixedI64</code> with 17 integer bits and 47 fractional bits.\n<code>FixedI128</code> with 18 integer bits and 110 fractional bits.\n<code>FixedI32</code> with 18 integer bits and 14 fractional bits.\n<code>FixedI64</code> with 18 integer bits and 46 fractional bits.\n<code>FixedI128</code> with 19 integer bits and 109 fractional bits.\n<code>FixedI32</code> with 19 integer bits and 13 fractional bits.\n<code>FixedI64</code> with 19 integer bits and 45 fractional bits.\n<code>FixedI128</code> with one integer bit and 127 fractional bits.\n<code>FixedI16</code> with one integer bit and 15 fractional bits.\n<code>FixedI32</code> with one integer bit and 31 fractional bits.\n<code>FixedI64</code> with one integer bit and 63 fractional bits.\n<code>FixedI8</code> with one integer bit and seven fractional bits.\n<code>FixedI128</code> with 20 integer bits and 108 fractional bits.\n<code>FixedI32</code> with 20 integer bits and 12 fractional bits.\n<code>FixedI64</code> with 20 integer bits and 44 fractional bits.\n<code>FixedI128</code> with 21 integer bits and 107 fractional bits.\n<code>FixedI32</code> with 21 integer bits and 11 fractional bits.\n<code>FixedI64</code> with 21 integer bits and 43 fractional bits.\n<code>FixedI32</code> with 22 integer bits and 10 fractional bits.\n<code>FixedI128</code> with 22 integer bits and 106 fractional bits.\n<code>FixedI64</code> with 22 integer bits and 42 fractional bits.\n<code>FixedI128</code> with 23 integer bits and 105 fractional bits.\n<code>FixedI64</code> with 23 integer bits and 41 fractional bits.\n<code>FixedI32</code> with 23 integer bits and nine fractional bits.\n<code>FixedI128</code> with 24 integer bits and 104 fractional bits.\n<code>FixedI64</code> with 24 integer bits and 40 fractional bits.\n<code>FixedI32</code> with 24 integer bits and eight fractional bits.\n<code>FixedI128</code> with 25 integer bits and 103 fractional bits.\n<code>FixedI64</code> with 25 integer bits and 39 fractional bits.\n<code>FixedI32</code> with 25 integer bits and seven fractional bits.\n<code>FixedI128</code> with 26 integer bits and 102 fractional bits.\n<code>FixedI64</code> with 26 integer bits and 38 fractional bits.\n<code>FixedI32</code> with 26 integer bits and six fractional bits.\n<code>FixedI128</code> with 27 integer bits and 101 fractional bits.\n<code>FixedI64</code> with 27 integer bits and 37 fractional bits.\n<code>FixedI32</code> with 27 integer bits and five fractional bits.\n<code>FixedI128</code> with 28 integer bits and 100 fractional bits.\n<code>FixedI64</code> with 28 integer bits and 36 fractional bits.\n<code>FixedI32</code> with 28 integer bits and four fractional bits.\n<code>FixedI32</code> with 29 integer bits and three fractional bits.\n<code>FixedI64</code> with 29 integer bits and 35 fractional bits.\n<code>FixedI128</code> with 29 integer bits and 99 fractional bits.\n<code>FixedI128</code> with two integer bits and 126 fractional bits.\n<code>FixedI16</code> with two integer bits and 14 fractional bits.\n<code>FixedI32</code> with two integer bits and 30 fractional bits.\n<code>FixedI8</code> with two integer bits and six fractional bits.\n<code>FixedI64</code> with two integer bits and 62 fractional bits.\n<code>FixedI32</code> with 30 integer bits and two fractional bits.\n<code>FixedI64</code> with 30 integer bits and 34 fractional bits.\n<code>FixedI128</code> with 30 integer bits and 98 fractional bits.\n<code>FixedI32</code> with 31 integer bits and one fractional bit.\n<code>FixedI64</code> with 31 integer bits and 33 fractional bits.\n<code>FixedI128</code> with 31 integer bits and 97 fractional bits.\n<code>FixedI32</code> with 32 integer bits and no fractional bits.\n<code>FixedI64</code> with 32 integer bits and 32 fractional bits.\n<code>FixedI128</code> with 32 integer bits and 96 fractional bits.\n<code>FixedI64</code> with 33 integer bits and 31 fractional bits.\n<code>FixedI128</code> with 33 integer bits and 95 fractional bits.\n<code>FixedI64</code> with 34 integer bits and 30 fractional bits.\n<code>FixedI128</code> with 34 integer bits and 94 fractional bits.\n<code>FixedI64</code> with 35 integer bits and 29 fractional bits.\n<code>FixedI128</code> with 35 integer bits and 93 fractional bits.\n<code>FixedI64</code> with 36 integer bits and 28 fractional bits.\n<code>FixedI128</code> with 36 integer bits and 92 fractional bits.\n<code>FixedI64</code> with 37 integer bits and 27 fractional bits.\n<code>FixedI128</code> with 37 integer bits and 91 fractional bits.\n<code>FixedI64</code> with 38 integer bits and 26 fractional bits.\n<code>FixedI128</code> with 38 integer bits and 90 fractional bits.\n<code>FixedI64</code> with 39 integer bits and 25 fractional bits.\n<code>FixedI128</code> with 39 integer bits and 89 fractional bits.\n<code>FixedI128</code> with three integer bits and 125 fractional bits.\n<code>FixedI16</code> with three integer bits and 13 fractional bits.\n<code>FixedI32</code> with three integer bits and 29 fractional bits.\n<code>FixedI8</code> with three integer bits and five fractional bits.\n<code>FixedI64</code> with three integer bits and 61 fractional bits.\n<code>FixedI64</code> with 40 integer bits and 24 fractional bits.\n<code>FixedI128</code> with 40 integer bits and 88 fractional bits.\n<code>FixedI64</code> with 41 integer bits and 23 fractional bits.\n<code>FixedI128</code> with 41 integer bits and 87 fractional bits.\n<code>FixedI64</code> with 42 integer bits and 22 fractional bits.\n<code>FixedI128</code> with 42 integer bits and 86 fractional bits.\n<code>FixedI64</code> with 43 integer bits and 21 fractional bits.\n<code>FixedI128</code> with 43 integer bits and 85 fractional bits.\n<code>FixedI64</code> with 44 integer bits and 20 fractional bits.\n<code>FixedI128</code> with 44 integer bits and 84 fractional bits.\n<code>FixedI64</code> with 45 integer bits and 19 fractional bits.\n<code>FixedI128</code> with 45 integer bits and 83 fractional bits.\n<code>FixedI64</code> with 46 integer bits and 18 fractional bits.\n<code>FixedI128</code> with 46 integer bits and 82 fractional bits.\n<code>FixedI64</code> with 47 integer bits and 17 fractional bits.\n<code>FixedI128</code> with 47 integer bits and 81 fractional bits.\n<code>FixedI64</code> with 48 integer bits and 16 fractional bits.\n<code>FixedI128</code> with 48 integer bits and 80 fractional bits.\n<code>FixedI64</code> with 49 integer bits and 15 fractional bits.\n<code>FixedI128</code> with 49 integer bits and 79 fractional bits.\n<code>FixedI16</code> with four integer bits and 12 fractional bits.\n<code>FixedI128</code> with four integer bits and 124 fractional bits.\n<code>FixedI32</code> with four integer bits and 28 fractional bits.\n<code>FixedI8</code> with four integer bits and four fractional bits.\n<code>FixedI64</code> with four integer bits and 60 fractional bits.\n<code>FixedI64</code> with 50 integer bits and 14 fractional bits.\n<code>FixedI128</code> with 50 integer bits and 78 fractional bits.\n<code>FixedI64</code> with 51 integer bits and 13 fractional bits.\n<code>FixedI128</code> with 51 integer bits and 77 fractional bits.\n<code>FixedI64</code> with 52 integer bits and 12 fractional bits.\n<code>FixedI128</code> with 52 integer bits and 76 fractional bits.\n<code>FixedI64</code> with 53 integer bits and 11 fractional bits.\n<code>FixedI128</code> with 53 integer bits and 75 fractional bits.\n<code>FixedI64</code> with 54 integer bits and 10 fractional bits.\n<code>FixedI128</code> with 54 integer bits and 74 fractional bits.\n<code>FixedI128</code> with 55 integer bits and 73 fractional bits.\n<code>FixedI64</code> with 55 integer bits and nine fractional bits.\n<code>FixedI128</code> with 56 integer bits and 72 fractional bits.\n<code>FixedI64</code> with 56 integer bits and eight fractional bits.\n<code>FixedI64</code> with 57 integer bits and seven fractional bits.\n<code>FixedI128</code> with 57 integer bits and 71 fractional bits.\n<code>FixedI64</code> with 58 integer bits and six fractional bits.\n<code>FixedI128</code> with 58 integer bits and 70 fractional bits.\n<code>FixedI64</code> with 59 integer bits and five fractional bits.\n<code>FixedI128</code> with 59 integer bits and 69 fractional bits.\n<code>FixedI16</code> with five integer bits and 11 fractional bits.\n<code>FixedI128</code> with five integer bits and 123 fractional bits.\n<code>FixedI32</code> with five integer bits and 27 fractional bits.\n<code>FixedI8</code> with five integer bits and three fractional bits.\n<code>FixedI64</code> with five integer bits and 59 fractional bits.\n<code>FixedI64</code> with 60 integer bits and four fractional bits.\n<code>FixedI128</code> with 60 integer bits and 68 fractional bits.\n<code>FixedI64</code> with 61 integer bits and three fractional bits.\n<code>FixedI128</code> with 61 integer bits and 67 fractional bits.\n<code>FixedI64</code> with 62 integer bits and two fractional bits.\n<code>FixedI128</code> with 62 integer bits and 66 fractional bits.\n<code>FixedI64</code> with 63 integer bits and one fractional bit.\n<code>FixedI128</code> with 63 integer bits and 65 fractional bits.\n<code>FixedI64</code> with 64 integer bits and no fractional bits.\n<code>FixedI128</code> with 64 integer bits and 64 fractional bits.\n<code>FixedI128</code> with 65 integer bits and 63 fractional bits.\n<code>FixedI128</code> with 66 integer bits and 62 fractional bits.\n<code>FixedI128</code> with 67 integer bits and 61 fractional bits.\n<code>FixedI128</code> with 68 integer bits and 60 fractional bits.\n<code>FixedI128</code> with 69 integer bits and 59 fractional bits.\n<code>FixedI16</code> with six integer bits and 10 fractional bits.\n<code>FixedI128</code> with six integer bits and 122 fractional bits.\n<code>FixedI8</code> with six integer bits and two fractional bits.\n<code>FixedI32</code> with six integer bits and 26 fractional bits.\n<code>FixedI64</code> with six integer bits and 58 fractional bits.\n<code>FixedI128</code> with 70 integer bits and 58 fractional bits.\n<code>FixedI128</code> with 71 integer bits and 57 fractional bits.\n<code>FixedI128</code> with 72 integer bits and 56 fractional bits.\n<code>FixedI128</code> with 73 integer bits and 55 fractional bits.\n<code>FixedI128</code> with 74 integer bits and 54 fractional bits.\n<code>FixedI128</code> with 75 integer bits and 53 fractional bits.\n<code>FixedI128</code> with 76 integer bits and 52 fractional bits.\n<code>FixedI128</code> with 77 integer bits and 51 fractional bits.\n<code>FixedI128</code> with 78 integer bits and 50 fractional bits.\n<code>FixedI128</code> with 79 integer bits and 49 fractional bits.\n<code>FixedI8</code> with seven integer bits and one fractional bit.\n<code>FixedI128</code> with seven integer bits and 121 fractional bits.\n<code>FixedI32</code> with seven integer bits and 25 fractional bits.\n<code>FixedI64</code> with seven integer bits and 57 fractional bits.\n<code>FixedI16</code> with seven integer bits and nine fractional bits.\n<code>FixedI128</code> with 80 integer bits and 48 fractional bits.\n<code>FixedI128</code> with 81 integer bits and 47 fractional bits.\n<code>FixedI128</code> with 82 integer bits and 46 fractional bits.\n<code>FixedI128</code> with 83 integer bits and 45 fractional bits.\n<code>FixedI128</code> with 84 integer bits and 44 fractional bits.\n<code>FixedI128</code> with 85 integer bits and 43 fractional bits.\n<code>FixedI128</code> with 86 integer bits and 42 fractional bits.\n<code>FixedI128</code> with 87 integer bits and 41 fractional bits.\n<code>FixedI128</code> with 88 integer bits and 40 fractional bits.\n<code>FixedI128</code> with 89 integer bits and 39 fractional bits.\n<code>FixedI8</code> with eight integer bits and no fractional bits.\n<code>FixedI128</code> with eight integer bits and 120 fractional bits.\n<code>FixedI32</code> with eight integer bits and 24 fractional bits.\n<code>FixedI64</code> with eight integer bits and 56 fractional bits.\n<code>FixedI16</code> with eight integer bits and eight fractional bits.\n<code>FixedI128</code> with 90 integer bits and 38 fractional bits.\n<code>FixedI128</code> with 91 integer bits and 37 fractional bits.\n<code>FixedI128</code> with 92 integer bits and 36 fractional bits.\n<code>FixedI128</code> with 93 integer bits and 35 fractional bits.\n<code>FixedI128</code> with 94 integer bits and 34 fractional bits.\n<code>FixedI128</code> with 95 integer bits and 33 fractional bits.\n<code>FixedI128</code> with 96 integer bits and 32 fractional bits.\n<code>FixedI128</code> with 97 integer bits and 31 fractional bits.\n<code>FixedI128</code> with 98 integer bits and 30 fractional bits.\n<code>FixedI128</code> with 99 integer bits and 29 fractional bits.\n<code>FixedI128</code> with nine integer bits and 119 fractional bits.\n<code>FixedI32</code> with nine integer bits and 23 fractional bits.\n<code>FixedI64</code> with nine integer bits and 55 fractional bits.\n<code>FixedI16</code> with nine integer bits and seven fractional bits.\n<code>FixedU128</code> with no integer bits and 128 fractional bits.\n<code>FixedU16</code> with no integer bits and 16 fractional bits.\n<code>FixedU32</code> with no integer bits and 32 fractional bits.\n<code>FixedU64</code> with no integer bits and 64 fractional bits.\n<code>FixedU8</code> with no integer bits and eight fractional bits.\n<code>FixedU128</code> with 100 integer bits and 28 fractional bits.\n<code>FixedU128</code> with 101 integer bits and 27 fractional bits.\n<code>FixedU128</code> with 102 integer bits and 26 fractional bits.\n<code>FixedU128</code> with 103 integer bits and 25 fractional bits.\n<code>FixedU128</code> with 104 integer bits and 24 fractional bits.\n<code>FixedU128</code> with 105 integer bits and 23 fractional bits.\n<code>FixedU128</code> with 106 integer bits and 22 fractional bits.\n<code>FixedU128</code> with 107 integer bits and 21 fractional bits.\n<code>FixedU128</code> with 108 integer bits and 20 fractional bits.\n<code>FixedU128</code> with 109 integer bits and 19 fractional bits.\n<code>FixedU128</code> with 10 integer bits and 118 fractional bits.\n<code>FixedU32</code> with 10 integer bits and 22 fractional bits.\n<code>FixedU64</code> with 10 integer bits and 54 fractional bits.\n<code>FixedU16</code> with 10 integer bits and six fractional bits.\n<code>FixedU128</code> with 110 integer bits and 18 fractional bits.\n<code>FixedU128</code> with 111 integer bits and 17 fractional bits.\n<code>FixedU128</code> with 112 integer bits and 16 fractional bits.\n<code>FixedU128</code> with 113 integer bits and 15 fractional bits.\n<code>FixedU128</code> with 114 integer bits and 14 fractional bits.\n<code>FixedU128</code> with 115 integer bits and 13 fractional bits.\n<code>FixedU128</code> with 116 integer bits and 12 fractional bits.\n<code>FixedU128</code> with 117 integer bits and 11 fractional bits.\n<code>FixedU128</code> with 118 integer bits and 10 fractional bits.\n<code>FixedU128</code> with 119 integer bits and nine fractional bits.\n<code>FixedU128</code> with 11 integer bits and 117 fractional bits.\n<code>FixedU32</code> with 11 integer bits and 21 fractional bits.\n<code>FixedU16</code> with 11 integer bits and five fractional bits.\n<code>FixedU64</code> with 11 integer bits and 53 fractional bits.\n<code>FixedU128</code> with 120 integer bits and eight fractional bits.\n<code>FixedU128</code> with 121 integer bits and seven fractional bits.\n<code>FixedU128</code> with 122 integer bits and six fractional bits.\n<code>FixedU128</code> with 123 integer bits and five fractional bits.\n<code>FixedU128</code> with 124 integer bits and four fractional bits.\n<code>FixedU128</code> with 125 integer bits and three fractional bits.\n<code>FixedU128</code> with 126 integer bits and two fractional bits.\n<code>FixedU128</code> with 127 integer bits and one fractional bit.\n<code>FixedU128</code> with 128 integer bits and no fractional bits.\n<code>FixedU128</code> with 12 integer bits and 116 fractional bits.\n<code>FixedU32</code> with 12 integer bits and 20 fractional bits.\n<code>FixedU16</code> with 12 integer bits and four fractional bits.\n<code>FixedU64</code> with 12 integer bits and 52 fractional bits.\n<code>FixedU128</code> with 13 integer bits and 115 fractional bits.\n<code>FixedU32</code> with 13 integer bits and 19 fractional bits.\n<code>FixedU16</code> with 13 integer bits and three fractional bits.\n<code>FixedU64</code> with 13 integer bits and 51 fractional bits.\n<code>FixedU128</code> with 14 integer bits and 114 fractional bits.\n<code>FixedU32</code> with 14 integer bits and 18 fractional bits.\n<code>FixedU16</code> with 14 integer bits and two fractional bits.\n<code>FixedU64</code> with 14 integer bits and 50 fractional bits.\n<code>FixedU16</code> with 15 integer bits and one fractional bit.\n<code>FixedU128</code> with 15 integer bits and 113 fractional bits.\n<code>FixedU32</code> with 15 integer bits and 17 fractional bits.\n<code>FixedU64</code> with 15 integer bits and 49 fractional bits.\n<code>FixedU16</code> with 16 integer bits and no fractional bits.\n<code>FixedU128</code> with 16 integer bits and 112 fractional bits.\n<code>FixedU32</code> with 16 integer bits and 16 fractional bits.\n<code>FixedU64</code> with 16 integer bits and 48 fractional bits.\n<code>FixedU128</code> with 17 integer bits and 111 fractional bits.\n<code>FixedU32</code> with 17 integer bits and 15 fractional bits.\n<code>FixedU64</code> with 17 integer bits and 47 fractional bits.\n<code>FixedU128</code> with 18 integer bits and 110 fractional bits.\n<code>FixedU32</code> with 18 integer bits and 14 fractional bits.\n<code>FixedU64</code> with 18 integer bits and 46 fractional bits.\n<code>FixedU128</code> with 19 integer bits and 109 fractional bits.\n<code>FixedU32</code> with 19 integer bits and 13 fractional bits.\n<code>FixedU64</code> with 19 integer bits and 45 fractional bits.\n<code>FixedU128</code> with one integer bit and 127 fractional bits.\n<code>FixedU16</code> with one integer bit and 15 fractional bits.\n<code>FixedU32</code> with one integer bit and 31 fractional bits.\n<code>FixedU64</code> with one integer bit and 63 fractional bits.\n<code>FixedU8</code> with one integer bit and seven fractional bits.\n<code>FixedU128</code> with 20 integer bits and 108 fractional bits.\n<code>FixedU32</code> with 20 integer bits and 12 fractional bits.\n<code>FixedU64</code> with 20 integer bits and 44 fractional bits.\n<code>FixedU128</code> with 21 integer bits and 107 fractional bits.\n<code>FixedU32</code> with 21 integer bits and 11 fractional bits.\n<code>FixedU64</code> with 21 integer bits and 43 fractional bits.\n<code>FixedU32</code> with 22 integer bits and 10 fractional bits.\n<code>FixedU128</code> with 22 integer bits and 106 fractional bits.\n<code>FixedU64</code> with 22 integer bits and 42 fractional bits.\n<code>FixedU128</code> with 23 integer bits and 105 fractional bits.\n<code>FixedU64</code> with 23 integer bits and 41 fractional bits.\n<code>FixedU32</code> with 23 integer bits and nine fractional bits.\n<code>FixedU128</code> with 24 integer bits and 104 fractional bits.\n<code>FixedU64</code> with 24 integer bits and 40 fractional bits.\n<code>FixedU32</code> with 24 integer bits and eight fractional bits.\n<code>FixedU128</code> with 25 integer bits and 103 fractional bits.\n<code>FixedU64</code> with 25 integer bits and 39 fractional bits.\n<code>FixedU32</code> with 25 integer bits and seven fractional bits.\n<code>FixedU128</code> with 26 integer bits and 102 fractional bits.\n<code>FixedU64</code> with 26 integer bits and 38 fractional bits.\n<code>FixedU32</code> with 26 integer bits and six fractional bits.\n<code>FixedU128</code> with 27 integer bits and 101 fractional bits.\n<code>FixedU64</code> with 27 integer bits and 37 fractional bits.\n<code>FixedU32</code> with 27 integer bits and five fractional bits.\n<code>FixedU128</code> with 28 integer bits and 100 fractional bits.\n<code>FixedU64</code> with 28 integer bits and 36 fractional bits.\n<code>FixedU32</code> with 28 integer bits and four fractional bits.\n<code>FixedU32</code> with 29 integer bits and three fractional bits.\n<code>FixedU64</code> with 29 integer bits and 35 fractional bits.\n<code>FixedU128</code> with 29 integer bits and 99 fractional bits.\n<code>FixedU128</code> with two integer bits and 126 fractional bits.\n<code>FixedU16</code> with two integer bits and 14 fractional bits.\n<code>FixedU32</code> with two integer bits and 30 fractional bits.\n<code>FixedU8</code> with two integer bits and six fractional bits.\n<code>FixedU64</code> with two integer bits and 62 fractional bits.\n<code>FixedU32</code> with 30 integer bits and two fractional bits.\n<code>FixedU64</code> with 30 integer bits and 34 fractional bits.\n<code>FixedU128</code> with 30 integer bits and 98 fractional bits.\n<code>FixedU32</code> with 31 integer bits and one fractional bit.\n<code>FixedU64</code> with 31 integer bits and 33 fractional bits.\n<code>FixedU128</code> with 31 integer bits and 97 fractional bits.\n<code>FixedU32</code> with 32 integer bits and no fractional bits.\n<code>FixedU64</code> with 32 integer bits and 32 fractional bits.\n<code>FixedU128</code> with 32 integer bits and 96 fractional bits.\n<code>FixedU64</code> with 33 integer bits and 31 fractional bits.\n<code>FixedU128</code> with 33 integer bits and 95 fractional bits.\n<code>FixedU64</code> with 34 integer bits and 30 fractional bits.\n<code>FixedU128</code> with 34 integer bits and 94 fractional bits.\n<code>FixedU64</code> with 35 integer bits and 29 fractional bits.\n<code>FixedU128</code> with 35 integer bits and 93 fractional bits.\n<code>FixedU64</code> with 36 integer bits and 28 fractional bits.\n<code>FixedU128</code> with 36 integer bits and 92 fractional bits.\n<code>FixedU64</code> with 37 integer bits and 27 fractional bits.\n<code>FixedU128</code> with 37 integer bits and 91 fractional bits.\n<code>FixedU64</code> with 38 integer bits and 26 fractional bits.\n<code>FixedU128</code> with 38 integer bits and 90 fractional bits.\n<code>FixedU64</code> with 39 integer bits and 25 fractional bits.\n<code>FixedU128</code> with 39 integer bits and 89 fractional bits.\n<code>FixedU128</code> with three integer bits and 125 fractional bits.\n<code>FixedU16</code> with three integer bits and 13 fractional bits.\n<code>FixedU32</code> with three integer bits and 29 fractional bits.\n<code>FixedU8</code> with three integer bits and five fractional bits.\n<code>FixedU64</code> with three integer bits and 61 fractional bits.\n<code>FixedU64</code> with 40 integer bits and 24 fractional bits.\n<code>FixedU128</code> with 40 integer bits and 88 fractional bits.\n<code>FixedU64</code> with 41 integer bits and 23 fractional bits.\n<code>FixedU128</code> with 41 integer bits and 87 fractional bits.\n<code>FixedU64</code> with 42 integer bits and 22 fractional bits.\n<code>FixedU128</code> with 42 integer bits and 86 fractional bits.\n<code>FixedU64</code> with 43 integer bits and 21 fractional bits.\n<code>FixedU128</code> with 43 integer bits and 85 fractional bits.\n<code>FixedU64</code> with 44 integer bits and 20 fractional bits.\n<code>FixedU128</code> with 44 integer bits and 84 fractional bits.\n<code>FixedU64</code> with 45 integer bits and 19 fractional bits.\n<code>FixedU128</code> with 45 integer bits and 83 fractional bits.\n<code>FixedU64</code> with 46 integer bits and 18 fractional bits.\n<code>FixedU128</code> with 46 integer bits and 82 fractional bits.\n<code>FixedU64</code> with 47 integer bits and 17 fractional bits.\n<code>FixedU128</code> with 47 integer bits and 81 fractional bits.\n<code>FixedU64</code> with 48 integer bits and 16 fractional bits.\n<code>FixedU128</code> with 48 integer bits and 80 fractional bits.\n<code>FixedU64</code> with 49 integer bits and 15 fractional bits.\n<code>FixedU128</code> with 49 integer bits and 79 fractional bits.\n<code>FixedU16</code> with four integer bits and 12 fractional bits.\n<code>FixedU128</code> with four integer bits and 124 fractional bits.\n<code>FixedU32</code> with four integer bits and 28 fractional bits.\n<code>FixedU8</code> with four integer bits and four fractional bits.\n<code>FixedU64</code> with four integer bits and 60 fractional bits.\n<code>FixedU64</code> with 50 integer bits and 14 fractional bits.\n<code>FixedU128</code> with 50 integer bits and 78 fractional bits.\n<code>FixedU64</code> with 51 integer bits and 13 fractional bits.\n<code>FixedU128</code> with 51 integer bits and 77 fractional bits.\n<code>FixedU64</code> with 52 integer bits and 12 fractional bits.\n<code>FixedU128</code> with 52 integer bits and 76 fractional bits.\n<code>FixedU64</code> with 53 integer bits and 11 fractional bits.\n<code>FixedU128</code> with 53 integer bits and 75 fractional bits.\n<code>FixedU64</code> with 54 integer bits and 10 fractional bits.\n<code>FixedU128</code> with 54 integer bits and 74 fractional bits.\n<code>FixedU128</code> with 55 integer bits and 73 fractional bits.\n<code>FixedU64</code> with 55 integer bits and nine fractional bits.\n<code>FixedU128</code> with 56 integer bits and 72 fractional bits.\n<code>FixedU64</code> with 56 integer bits and eight fractional bits.\n<code>FixedU64</code> with 57 integer bits and seven fractional bits.\n<code>FixedU128</code> with 57 integer bits and 71 fractional bits.\n<code>FixedU64</code> with 58 integer bits and six fractional bits.\n<code>FixedU128</code> with 58 integer bits and 70 fractional bits.\n<code>FixedU64</code> with 59 integer bits and five fractional bits.\n<code>FixedU128</code> with 59 integer bits and 69 fractional bits.\n<code>FixedU16</code> with five integer bits and 11 fractional bits.\n<code>FixedU128</code> with five integer bits and 123 fractional bits.\n<code>FixedU32</code> with five integer bits and 27 fractional bits.\n<code>FixedU8</code> with five integer bits and three fractional bits.\n<code>FixedU64</code> with five integer bits and 59 fractional bits.\n<code>FixedU64</code> with 60 integer bits and four fractional bits.\n<code>FixedU128</code> with 60 integer bits and 68 fractional bits.\n<code>FixedU64</code> with 61 integer bits and three fractional bits.\n<code>FixedU128</code> with 61 integer bits and 67 fractional bits.\n<code>FixedU64</code> with 62 integer bits and two fractional bits.\n<code>FixedU128</code> with 62 integer bits and 66 fractional bits.\n<code>FixedU64</code> with 63 integer bits and one fractional bit.\n<code>FixedU128</code> with 63 integer bits and 65 fractional bits.\n<code>FixedU64</code> with 64 integer bits and no fractional bits.\n<code>FixedU128</code> with 64 integer bits and 64 fractional bits.\n<code>FixedU128</code> with 65 integer bits and 63 fractional bits.\n<code>FixedU128</code> with 66 integer bits and 62 fractional bits.\n<code>FixedU128</code> with 67 integer bits and 61 fractional bits.\n<code>FixedU128</code> with 68 integer bits and 60 fractional bits.\n<code>FixedU128</code> with 69 integer bits and 59 fractional bits.\n<code>FixedU16</code> with six integer bits and 10 fractional bits.\n<code>FixedU128</code> with six integer bits and 122 fractional bits.\n<code>FixedU8</code> with six integer bits and two fractional bits.\n<code>FixedU32</code> with six integer bits and 26 fractional bits.\n<code>FixedU64</code> with six integer bits and 58 fractional bits.\n<code>FixedU128</code> with 70 integer bits and 58 fractional bits.\n<code>FixedU128</code> with 71 integer bits and 57 fractional bits.\n<code>FixedU128</code> with 72 integer bits and 56 fractional bits.\n<code>FixedU128</code> with 73 integer bits and 55 fractional bits.\n<code>FixedU128</code> with 74 integer bits and 54 fractional bits.\n<code>FixedU128</code> with 75 integer bits and 53 fractional bits.\n<code>FixedU128</code> with 76 integer bits and 52 fractional bits.\n<code>FixedU128</code> with 77 integer bits and 51 fractional bits.\n<code>FixedU128</code> with 78 integer bits and 50 fractional bits.\n<code>FixedU128</code> with 79 integer bits and 49 fractional bits.\n<code>FixedU8</code> with seven integer bits and one fractional bit.\n<code>FixedU128</code> with seven integer bits and 121 fractional bits.\n<code>FixedU32</code> with seven integer bits and 25 fractional bits.\n<code>FixedU64</code> with seven integer bits and 57 fractional bits.\n<code>FixedU16</code> with seven integer bits and nine fractional bits.\n<code>FixedU128</code> with 80 integer bits and 48 fractional bits.\n<code>FixedU128</code> with 81 integer bits and 47 fractional bits.\n<code>FixedU128</code> with 82 integer bits and 46 fractional bits.\n<code>FixedU128</code> with 83 integer bits and 45 fractional bits.\n<code>FixedU128</code> with 84 integer bits and 44 fractional bits.\n<code>FixedU128</code> with 85 integer bits and 43 fractional bits.\n<code>FixedU128</code> with 86 integer bits and 42 fractional bits.\n<code>FixedU128</code> with 87 integer bits and 41 fractional bits.\n<code>FixedU128</code> with 88 integer bits and 40 fractional bits.\n<code>FixedU128</code> with 89 integer bits and 39 fractional bits.\n<code>FixedU8</code> with eight integer bits and no fractional bits.\n<code>FixedU128</code> with eight integer bits and 120 fractional bits.\n<code>FixedU32</code> with eight integer bits and 24 fractional bits.\n<code>FixedU64</code> with eight integer bits and 56 fractional bits.\n<code>FixedU16</code> with eight integer bits and eight fractional bits.\n<code>FixedU128</code> with 90 integer bits and 38 fractional bits.\n<code>FixedU128</code> with 91 integer bits and 37 fractional bits.\n<code>FixedU128</code> with 92 integer bits and 36 fractional bits.\n<code>FixedU128</code> with 93 integer bits and 35 fractional bits.\n<code>FixedU128</code> with 94 integer bits and 34 fractional bits.\n<code>FixedU128</code> with 95 integer bits and 33 fractional bits.\n<code>FixedU128</code> with 96 integer bits and 32 fractional bits.\n<code>FixedU128</code> with 97 integer bits and 31 fractional bits.\n<code>FixedU128</code> with 98 integer bits and 30 fractional bits.\n<code>FixedU128</code> with 99 integer bits and 29 fractional bits.\n<code>FixedU128</code> with nine integer bits and 119 fractional bits.\n<code>FixedU32</code> with nine integer bits and 23 fractional bits.\n<code>FixedU64</code> with nine integer bits and 55 fractional bits.\n<code>FixedU16</code> with nine integer bits and seven fractional bits.\nExtra types that do not need to be handled directly.\nAlias for the associated type of <code>Sub</code>: …\nA <strong>type operator</strong> that returns <code>True</code> if <code>Self &lt;= Rhs</code>, …\nImplemented for all <code>Unsigned</code> integers ≤ 128.\nImplemented for all <code>Unsigned</code> integers ≤ 16.\nImplemented for all <code>Unsigned</code> integers ≤ 32.\nImplemented for all <code>Unsigned</code> integers ≤ 64.\nImplemented for all <code>Unsigned</code> integers ≤ 8.\nThe type representing either <code>True</code> or <code>False</code>\nThe <strong>marker trait</strong> for compile time unsigned integers.\nMethod returning <code>True</code> or <code>False</code>.")