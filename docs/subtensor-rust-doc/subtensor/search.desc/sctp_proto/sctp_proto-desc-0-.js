searchState.loadedDescShard("sctp_proto", 0, "Low-level protocol logic for the SCTP protocol\nThe peer closed the association\nAssociation represents an SCTP association\nThe peer’s QUIC stack aborted the association …\nReasons why an association might be lost\nEvents sent from an Endpoint to an Association\nThe datagram is redirected to its <code>Association</code>\nInternal identifier for an <code>Association</code> currently …\nProtocol-level identifier for an Association.\nThe association was lost\nAssociation statistics\nAt least one new stream of a certain directionality may be …\nThe number of bytes of outgoing data buffered is lower …\nA chunk of data from the stream\nChunkPayloadData represents an SCTP Chunk of type DATA\nChunks is a set of chunks that share the same SSN\nThe initiator of an association\nConfiguration for outgoing associations\nErrors in the parameters being used to create a new …\nThe association was successfully established\nEvent resulting from processing a single datagram\nOne or more application datagrams have been received\nExplicit congestion notification codepoint\nThe main entry point to the library\nGlobal configuration for the endpoint, affecting all …\nEvents sent from an Association to an Endpoint\nThe endpoint can no longer create new associations\nErrors triggered during SCTP association operation\nErrorCauseCode is a cause code that appears in either a …\nEvents of interest to the application\nA finished stream has been fully acknowledged or stopped\nHandshake failed\nThe domain name supplied was malformed\nThe remote <code>SocketAddr</code> supplied was malformed\nThe local application closed the association\nThe datagram has resulted in starting a new <code>Association</code>\nNo default client configuration was set up\nOne or more new streams has been opened\nPayload in Incoming/outgoing Transmit\nPayloadProtocolIdentifier is an enum for DataChannel …\nA currently open stream has data or errors waiting to be …\nReliability type for stream\nReliabilityTypeReliable is used for reliable transmission\nThe peer is unable to continue processing this …\nReliabilityTypeRexmit is used for partial reliability by …\nThe acceptor of an association\nParameters governing incoming associations\nWhether an endpoint was the initiator of an association\nThe peer asked us to stop sending on an outgoing stream\nStream represents an SCTP stream\nStream events\nApplication events about streams\nIdentifier for a stream within a particular association\nStreamState represents the state of an SCTP stream\nReliabilityTypeTimed is used for partial reliability by …\nCommunication with the peer has lapsed for longer than the …\nThe number of active associations on the local endpoint is …\nIncoming/outgoing Transmit\nConfig collects the arguments to create_association …\nThe peer violated the QUIC specification as understood by …\nA formerly write-blocked stream might be ready for a write …\naccept_stream accepts a stream\nSupply a custom Association ID generator factory\nbuffered_amount returns the number of bytes of data …\nbuffered_amount_low_threshold returns the number of bytes …\nThe contents of the chunk\nClose ends the SCTP Association and cleans up any state\nAccess the configuration used by this endpoint\nInitiate an Association\nConstruct an event that indicating that a <code>Association</code> will …\nExplicit congestion notification bits to set on the packet\nfinish closes the write-direction of the stream. Future …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate new object from the given bits\nget_default_payload_type returns the payload type …\nProcess an incoming UDP datagram\nProcess <code>EndpointEvent</code>s emitted from related <code>Association</code>s\nProcess <code>AssociationEvent</code>s generated by the associated …\nProcess timer expirations\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nShorthand for <code>self == Side::Client</code>\nWhether the Association is closed\nWhether there is no longer any need to keep the …\nDetermine whether this is the last event a <code>Association</code> …\nWhether the Association is in the process of being …\nShorthand for <code>self == Side::Server</code>\nThe local IP address which was used when the peer …\nOptional local IP address for the datagram\nMaximum payload size accepted from peers.\nCreate a new endpoint\nCreate a default config\nCreate a default config with a particular handshake token …\nCreate a default config with a particular cryptographic …\nReceived/Sent time\nopen_stream opens a stream\nPayload of the datagram\nReturns application-facing event\nReturn endpoint-facing event\nReturns the next time at which <code>handle_timeout</code> should be …\nGet the next packet to transmit\nReturns packets to transmit\nread reads a packet of len(p) bytes, dropping the Payload …\nread_sctp reads a packet of len(p) bytes and returns the …\nUnconditionally reject future incoming associations\nThe socket this datagram should be sent to\nThe latest socket address for this Association’s peer\nCurrent best estimate of this Association’s latency …\nset_buffered_amount_low_threshold is used to update the …\nset_default_payload_type sets the default payload type …\nset_reliability_params sets reliability parameters for …\nReplace the server configuration, affecting new incoming …\nShutdown initiates the shutdown sequence. The method …\nLook up whether we’re the client or server of this …\nReturns Association statistics\nstop closes the read-direction of the stream. Future calls …\nstream returns a stream\nstream_identifier returns the Stream identifier associated …\nTransport configuration to use for incoming associations\nTransport configuration to use\nSend data on the given stream.\nwrite writes len(p) bytes from p with the default Payload …\nSend data on the given stream\nwrite_sctp writes len(p) bytes from p to the DTLS …\nSend data on the given stream, with a specific payload …\nReason that the association was closed\nError code supplied by the peer\nWhich stream is now readable\nWhich stream is now writable\nWhich stream has been finished\nWhich stream has been stopped\nWhich stream is now readable")