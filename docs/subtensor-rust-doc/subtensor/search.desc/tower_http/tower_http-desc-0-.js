searchState.loadedDescShard("tower_http", 0, "<code>async fn(HttpRequest) -&gt; Result&lt;HttpResponse, Error&gt;</code>\nAlias for a type-erased error type.\nThe latency unit used to report latencies by middleware.\nUse microseconds.\nUse milliseconds.\nUse nanoseconds.\nUse seconds.\nBody types.\nTools for classifying responses as either success or …\nMiddleware which adds headers for CORS.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n<code>Service</code>s that return responses without wrapping other …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe operation was aborted.\nSome entity that we attempted to create already exists.\nThe operation was cancelled.\nResult of doing a classification.\nThe response classifier produced.\nTrait for classifying end of streams (EOS) as either …\nThe type used to classify the response end of stream (EOS).\nThe type used to classify the response end of stream (EOS).\nTrait for classifying responses as either success or …\nA gRPC response was classified as a failure with the …\nUnrecoverable data loss or corruption.\nDeadline expired before operation could complete.\nA gRPC response was classified as an error with the …\nA response was classified as an error with the …\nA response was classified as an error with the …\nThe system is not in a state required for the operation’…\nThe type of failure classifications.\nThe type returned when a response is classified as a …\nThe type of failure classifications.\ngRPC status codes.\nThe <code>ClassifyEos</code> for <code>GrpcErrorsAsFailures</code>.\nResponse classifier for gRPC responses.\nThe failure class for <code>GrpcErrorsAsFailures</code>.\nInternal error.\nClient specified an invalid argument.\nTrait for producing response classifiers from a request.\nResponse classifier that transforms the failure class of …\nA <code>ClassifyEos</code> type that can be used in <code>ClassifyResponse</code> …\nSome requested entity was not found.\nThe operation completed successfully.\nOperation was attempted past the valid range.\nThe caller does not have permission to execute the …\nThe response was able to be classified immediately.\nWe have to wait until the end of a streaming response to …\nSome resource has been exhausted.\nThe default classifier used for normal HTTP responses.\nThe failure class for <code>ServerErrorsAsFailures</code>.\nA <code>MakeClassifier</code> that produces new classifiers by cloning …\nA response was classified as a failure with the …\nA response was classified as a failure with the …\nResponse classifier that considers responses with a status …\nThe failure class for <code>StatusInRangeAsFailures</code>.\nThe request does not have valid authentication credentials\nThe service is currently unavailable.\nOperation is not implemented or not supported.\nUnknown error.\nPerform the classification from response trailers.\nClassify an error.\nClassify an error.\nAttempt to classify the beginning of a response.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert this <code>StatusInRangeAsFailures</code> into a <code>MakeClassifier</code>.\nReturns a response classifier for this request\nReturns a <code>MakeClassifier</code> that produces <code>GrpcErrorsAsFailures</code>…\nReturns a <code>MakeClassifier</code> that produces …\nTransform the failure classification using a function.\nTransform the failure classification using a function.\nCreate a new <code>GrpcErrorsAsFailures</code>.\nCreates a new <code>StatusInRangeAsFailures</code>.\nCreate a new <code>SharedClassifier</code> from the given classifier.\nCreate a new <code>ServerErrorsAsFailures</code>.\nCreates a new <code>StatusInRangeAsFailures</code> that classifies …\nChange which gRPC codes are considered success.\nHolds configuration for how to set the …\nHolds configuration for how to set the …\nHolds configuration for how to set the …\nHolds configuration for how to set the …\nHolds configuration for how to set the …\nRepresents a wildcard value (<code>*</code>) used with some CORS …\nMiddleware which adds headers for CORS.\nLayer that applies the <code>Cors</code> middleware which adds headers …\nHolds configuration for how to set the …\nHolds configuration for how to set the …\nResponse future for <code>Cors</code>.\nHolds configuration for how to set the <code>Vary</code> header.\nSet the <code>Access-Control-Allow-Credentials</code> header.\nSet the <code>Access-Control-Allow-Credentials</code> header.\nSet the value of the <code>Access-Control-Allow-Headers</code> header.\nSet the value of the <code>Access-Control-Allow-Headers</code> header.\nSet the value of the <code>Access-Control-Allow-Methods</code> header.\nSet the value of the <code>Access-Control-Allow-Methods</code> header.\nSet the value of the <code>Access-Control-Allow-Origin</code> header.\nSet the value of the <code>Access-Control-Allow-Origin</code> header.\nSet the value of the <code>Access-Control-Allow-Private-Network</code> …\nSet the value of the <code>Access-Control-Allow-Private-Network</code> …\nRepresents a wildcard value (<code>*</code>) used with some CORS …\nAllow any headers by sending a wildcard (<code>*</code>)\nAllow any method by sending a wildcard (<code>*</code>)\nAllow any origin by sending a wildcard (<code>*</code>)\nExpose any / all headers by sending a wildcard (<code>*</code>)\nSet the max-age based on the preflight request parts\nSet a single allowed method\nSet a single allowed origin\nSet a static max-age value\nSet the value of the <code>Access-Control-Expose-Headers</code> header.\nSet the value of the <code>Access-Control-Expose-Headers</code> header.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets a mutable reference to the underlying service.\nGets a reference to the underlying service.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes <code>self</code>, returning the underlying service.\nReturns a new <code>Layer</code> that wraps services with a <code>Cors</code> …\nSet multiple allowed headers\nSet multiple allowed methods\nSet multiple allowed origins\nSet multiple exposed header names\nSet the list of header names to return as vary header …\nSet the value of the <code>Access-Control-Max-Age</code> header.\nSet the value of the <code>Access-Control-Max-Age</code> header.\nAllow any headers, by mirroring the preflight …\nAllow any method, by mirroring the preflight …\nAllow any origin, by mirroring the request origin\nCreate a new <code>CorsLayer</code>.\nCreate a new <code>Cors</code>.\nA permissive configuration:\nA permissive configuration.\nAllow credentials for some requests, based on a given …\nSet the allowed origins from a predicate\nAllow requests via private network for some requests, …\nReturns an iterator over the three request headers that …\nSet the value(s) of the <code>Vary</code> header.\nA very permissive configuration:\nA very permissive configuration.\nAllow credentials for all requests\nAllow requests via a more private network than the one …")