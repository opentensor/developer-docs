searchState.loadedDescShard("node_subtensor", 0, "A collection of node-specific RPC methods. Substrate …\nService and ServiceFactory implementation. Specialized …\nSpecialized <code>ChainSpec</code>. This is a specialization of the …\nNode <code>ChainSpec</code> extensions.\nGenerate an Aura authority key.\nKnown bad block hashes.\nBlock numbers with known hashes.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGenerate an account ID from seed.\nGenerate a crypto pair from seed.\nCalls <code>U::from(self)</code>.\nSeal when transaction is executed.\nSeal using rpc method.\nAvailable Sealing methods.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChoose sealing method.\nFull backend.\nFull client.\nAlways enable runtime benchmark host functions, the …\nAvalailable frontier backend types.\nThe ethereum-compatibility configuration used to run a …\nMaximum fee history cache size.\nOn-memory stored filters created through the <code>eth_newFilter</code> …\nEither RocksDb or ParityDb as per inherited from the …\nSql database with custom log indexing.\nFrontier DB backend type. This trait is used to obtain …\nFrontier DB backend type. A storage override for runtimes …\nReturn the code with the given address.\nReturn the storage data with the given address and storage …\nExtend RpcModule with Eth RPCs\nReturn the current ethereum block.\nReturn the current ethereum transaction receipt.\nReturn the current ethereum transaction status.\nReturn the elasticity multiplier at the given post-eip1559 …\nSize in bytes of the LRU cache for block data.\nSize in bytes of the LRU cache for transactions statuses …\nMaximum allowed gas limit will be …\nMaximum fee history cache size.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nSets the frontier backend type (KeyValue or Sql)\nSets the SQL backend’s query timeout in number of VM ops.\nSets the SQL backend’s query timeout in number of VM ops.\nSets the SQL backend’s auxiliary thread limit.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn <code>true</code> if the request block is post-eip1559.\nMaximum number of logs in a query.\nDefault Eth RPC configuration\nManage LRU caches for block data and their transaction …\nExtra dependencies for Ethereum compatibility.\nMaximum fee history cache size.\nOn-memory stored filters created through the <code>eth_newFilter</code> …\nFull client dependencies.\nCache for Ethereum block data.\nThe client instance to use.\nThe client instance to use.\nManual seal command sink\nEthereum transaction converter.\nInstantiate all full RPC extensions.\nCache for <code>handler.current_block</code>.\nCache for <code>handler.current_transaction_statuses</code>.\nWhether to enable dev signer\nEthereum-compatibility specific dependencies.\nMaximum allowed gas limit will be …\nFee history cache.\nMaximum fee history cache size.\nEthFilterApi pool.\nMandated parent hashes for a given block hash.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nFrontier Backend.\nGraph pool instance.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe Node authority flag\nMaximum number of logs in a query.\nNetwork service\nSomething that can create the inherent data providers for …\nTransaction pool instance.\nTransaction pool instance.\nEthereum data access overrides.\nChain syncing service\nBuild the import queue for the template runtime (aura + …\nBuild the import queue for the template runtime (manual …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBuilds a new service for a full client.")