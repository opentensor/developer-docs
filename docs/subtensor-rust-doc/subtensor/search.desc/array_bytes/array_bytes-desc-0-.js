searchState.loadedDescShard("array_bytes", 0, "A collection of array/bytes/hex utilities.\nContains the error value\nThe main error of array-bytes.\nConvert the given type to hex.\nFound the invalid character at <code>index</code>.\nThe length must not be odd.\nThe data can not fit the array/slice length well.\nContains the success value\nFailed to parse the hex number from hex string.\nThe main result of array-bytes.\nTry to convert the given hex to a specific type.\nFailed to parse the hex number from hex string.\n<code>AsRef&lt;[u8]&gt;</code> to <code>String</code>.\nReturns the argument unchanged.\nConvert <code>Self</code> to hex with the given prefix.\nJust like <code>hex2bytes</code> but to a fixed length array.\nJust like <code>hex2array</code> but without the checking.\n<code>AsRef&lt;[u8]&gt;</code> to <code>Vec&lt;u8&gt;</code>.\nJust like <code>hex2bytes</code> but without checking.\n<code>AsRef&lt;[u8]&gt;</code> to <code>&amp;[u8]</code>.\nJust like <code>hex2slice</code> but without checking.\nConvert hex bytes to hex string.\nJust like <code>hex_bytes2hex_str</code> but without the checking.\nTry to convert <code>AsRef&lt;[u8]&gt;</code> to <code>T</code> directly, where …\nJust like <code>hex_into</code> but without the checking.\nTry to convert <code>AsRef&lt;[u8]&gt;</code> to <code>T</code> directly, where …\nJust like <code>hex_n_into</code> but without the checking.\nCalls <code>U::from(self)</code>.\nPrefixes the given element to the given array/slice/vector …\n<code>&amp;[T]</code> to <code>[T; N]</code>.\n<code>&amp;[T]</code> to <code>&amp;[T; N]</code>.\nJust like <code>slice2array_ref</code> but without the checking.\nJust like <code>slice2array</code> but without the checking.\nConvert <code>&amp;[T]</code> to a type directly.\nJust like <code>slice_n_into</code> but without the checking.\nSuffixes the given element to the given array/slice/vector …\nTry to convert <code>Self</code> from hex.\n<code>Vec&lt;T&gt;</code> to <code>[T; N]</code>.\nJust like <code>vec2array</code> but without the checking.\nConvert <code>Vec&lt;T&gt;</code> to a type directly.\nJust like <code>vec_n_into</code> but without the checking.\nThe invalid character.\nExpected length.\nThe invalid character’s index.")