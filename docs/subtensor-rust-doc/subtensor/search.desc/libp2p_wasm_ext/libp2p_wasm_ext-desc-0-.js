searchState.loadedDescShard("libp2p_wasm_ext", 0, "Implementation of the libp2p <code>Transport</code> trait for external …\nActive stream of data with a remote.\nFuture that dial a remote through an external transport.\nImplementation of <code>Transport</code> whose implementation is …\nError that can be generated by the <code>ExtTransport</code>.\nStream that listens for incoming connections through an …\nContains the definition that one must match on the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>ExtTransport</code> that uses the given external …\nType of the object that represents an open connection with …\nType of the object that represents an event containing a …\nType of the object that represents an event generated by …\nType of the object that allows opening connections.\nCloses the connection. No other method will be called on …\nThe <code>Connection</code> object for communication with the remote.\nStart attempting to dial the given multiaddress.\nList of addresses that have expired. Must be an array of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nStart listening on the given multiaddress.\nThe address we are listening on, that received the remote …\nList of addresses we have started listening on. Must be an …\nList of <code>ConnectionEvent</code> object that has been received.\nPromise to the next event that the listener will generate.\nThe address we observe for the remote connection.\nReturns an iterator of JavaScript <code>Promise</code>s that resolve to …\nShuts down the writing side of the connection. After this …\nWrites data to the connection. Returns a <code>Promise</code> that …")