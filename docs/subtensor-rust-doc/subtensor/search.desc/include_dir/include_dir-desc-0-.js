searchState.loadedDescShard("include_dir", 0, "An extension to the <code>include_str!()</code> and <code>include_bytes!()</code> …\nA directory.\nA directory.\nA directory entry, roughly analogous to <code>std::fs::DirEntry</code>.\nA file with its contents stored in a <code>&amp;&#39;static [u8]</code>.\nA file.\nTry to get this as a <code>Dir</code>, if it is one.\nTry to get this as a <code>File</code>, if it is one.\nGet this item’s sub-items, if it has any.\nDoes this directory contain <code>path</code>?\nThe file’s raw contents.\nThe file’s contents interpreted as a string.\nGet a list of the sub-directories inside this directory.\nThe entries within this <code>Dir</code>.\nCreate directories and extract all files to real …\nGet a list of the files in this directory.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nLook up a dir by name.\nRecursively search for a <code>DirEntry</code> with a particular path.\nLook up a file by name.\nEmbed the contents of a directory in your crate.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new <code>Dir</code>.\nCreate a new <code>File</code>.\nThe full path for this <code>Dir</code>, relative to the directory …\nThe <code>DirEntry</code>’s full path.\nThe full path for this <code>File</code>, relative to the directory …")