searchState.loadedDescShard("parity_db", 0, "Options for producing a database dump.\nDatabase column configuration.\nColumn statistics summary.\nDifferent compression type allowed and their u8 …\nDatabase instance.\nDereference at a given key, resulting in either removal of …\nContains the error value\nContains the success value\nDifferent operations allowed for a commit. Behavior may …\nDatabase configuration.\nIncrement the reference count counter of an existing value …\nInsert or update the value for a given key.\nDatabase statistics summary.\nValue is just a vector of bytes. Value sizes up to 4Gb are …\nValue iteration state\nAdd a new column with options specified by …\nEnd with this index.\nColumn is configured to use Btree storage. Btree columns …\nClear specified column. All data is removed and stats are …\nReset internal database statistics for the database or …\nOnly process this column. If this is <code>None</code> all columns will …\nPer column statistics. Statistics may be available only …\nColumn settings\nCommit a set of changes to the database.\nCommit a set of changes to the database.\nCompression to use for this column.\nMinimal value size threshold to attempt compressing a …\nVerbosity.\nRemove last column from the database. Db must be close …\nPrint database contents in text form to stderr.\nOrdered validation.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nStart with this index.\nGet a value in a specified column by key. Returns <code>None</code> if …\nGet value size by key. Returns <code>None</code> if the key does not …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIterate over all ordered key-value pairs. Only supported …\nIterate a column and call a function for each value. This …\nAttempt to migrate a database to a new configuration with …\nCreate a new instance.\nReturns the number of columns in the database.\nOpen the database with given options. An error will be …\nOpen the database using given options. If the database …\nOpen an existing database in read-only mode.\nDatabase path.\nIndicates that the column value is the preimage of the key.\nReference counter.\nUse reference counting for values. Reference operations …\nTruncate a column from the database, optionally changing …\nOverride salt value. If <code>None</code> is specified salt is loaded …\nGet database statistics.\nCollect database statistics. May have effect on …\nfsync/msync data to disk before removing logs. Provides …\nfsync WAL to disk before committing any changes. Provides …\nTotal size of (compressed) values in the column. This does …\nCurrent number of values in the column.\nTotal size of values in the column before compression. …\nIndicates that the keys are at least 32 bytes and the …\nMake sure free lists are correct.\nValue.\nDump full database stats to the text output.")