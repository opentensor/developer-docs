searchState.loadedDescShard("trie_root", 0, "Generates trie root.\nTrait describing an object that can hash a slice of bytes. …\nContains a full value.\nThe length in bytes of the <code>Hasher</code> output.\nContains hash of a value.\nThe output type of the <code>Hasher</code>\nWhat to use to build <code>HashMap</code>s with this <code>Hasher</code>.\nByte-stream oriented trait for constructing closed-form …\nDifferent possible value to use for node encoding.\nAppend an empty child node. Optional.\nAppend an Empty node\nAppend an Extension node\nAppend a Leaf node\nAppend a Branch of Extension substream\nStart a new Branch node, possibly with a value; takes a …\nWrap up a Branch node portion of a <code>TrieStream</code> and append …\nReturns the argument unchanged.\nCompute the hash of the provided slice of bytes returning …\nCalls <code>U::from(self)</code>.\nConstruct a new <code>TrieStream</code>\nReturn the finished <code>TrieStream</code> as a vector of bytes.\nGenerates a key-hashed (secure) trie root hash for a …\nGenerates a trie root hash for a vector of key-value tuples\nVariant of <code>trie_root</code> for patricia trie without extension …\nMethod similar to <code>trie_root</code> but returning the root encoded …\nVariant of <code>unhashed_trie</code> for patricia trie without …")