searchState.loadedDescShard("kvdb", 0, "Key-Value store abstraction.\nDatabase keys.\nA tuple holding key and value data, used in the iterator …\nDatabase operation.\nWrite transaction. Batches a sequence of put/delete …\nDatabase value.\nStatistic for the <code>span</code> period\nStatistic kind to query.\nGeneric key-value database.\nOverall statistics since start.\nRequired length of prefixes.\nStatistics since previous query.\nAverage batch (transaction) size (writes per transaction)\nNumber of bytes read\nNumber of bytes write\nNumber of bytes read from cache\nNumber of reads resulted in a read from cache.\nReturns the column associated with this operation.\nDelete value by key.\nDelete all values with the given key prefix. Using an …\nEmpty statistic report.\nFor a given start prefix (inclusive), returns the correct …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a value by key.\nGet the first value matching the given prefix.\nCheck for the existence of a value by key.\nCheck for the existence of a value by prefix.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nQuery statistics.\nIterate over the data for a given column.\nIterate over the data for a given column, returning all …\nReturns the key associated with this operation.\nCreate new transaction.\nDatabase operations.\nTotal number of operations per second.\nInsert a key-value pair in the transaction. Any existing …\nInsert a key-value pair in the transaction. Any existing …\nNumber of read operations.\nRead operations per second.\nTotal duration of the statistic period.\nStart of the statistic period.\nHelper to create a new transaction.\nNumber of transaction.\nTransactions per second.\nCreate new transaction with capacity.\nWrite a transaction of changes to the backing store.\nNumber of write operations.\nWrite operations per second.")