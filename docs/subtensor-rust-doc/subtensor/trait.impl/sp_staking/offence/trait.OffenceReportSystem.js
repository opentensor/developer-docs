(function() {
    var implementors = Object.fromEntries([["pallet_grandpa",[["impl&lt;T, R, P, L&gt; <a class=\"trait\" href=\"sp_staking/offence/trait.OffenceReportSystem.html\" title=\"trait sp_staking::offence::OffenceReportSystem\">OffenceReportSystem</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as <a class=\"trait\" href=\"frame_system/pallet/trait.Config.html\" title=\"trait frame_system::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"frame_system/pallet/trait.Config.html#associatedtype.AccountId\" title=\"type frame_system::pallet::Config::AccountId\">AccountId</a>&gt;, (<a class=\"struct\" href=\"sp_consensus_grandpa/struct.EquivocationProof.html\" title=\"struct sp_consensus_grandpa::EquivocationProof\">EquivocationProof</a>&lt;&lt;T as <a class=\"trait\" href=\"frame_system/pallet/trait.Config.html\" title=\"trait frame_system::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"frame_system/pallet/trait.Config.html#associatedtype.Hash\" title=\"type frame_system::pallet::Config::Hash\">Hash</a>, &lt;&lt;&lt;T as <a class=\"trait\" href=\"frame_system/pallet/trait.Config.html\" title=\"trait frame_system::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"frame_system/pallet/trait.Config.html#associatedtype.Block\" title=\"type frame_system::pallet::Config::Block\">Block</a> as HeaderProvider&gt;::HeaderT as <a class=\"trait\" href=\"sp_runtime/traits/trait.Header.html\" title=\"trait sp_runtime::traits::Header\">Header</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.Header.html#associatedtype.Number\" title=\"type sp_runtime::traits::Header::Number\">Number</a>&gt;, &lt;T as <a class=\"trait\" href=\"pallet_grandpa/pallet/trait.Config.html\" title=\"trait pallet_grandpa::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_grandpa/pallet/trait.Config.html#associatedtype.KeyOwnerProof\" title=\"type pallet_grandpa::pallet::Config::KeyOwnerProof\">KeyOwnerProof</a>)&gt; for <a class=\"struct\" href=\"pallet_grandpa/struct.EquivocationReportSystem.html\" title=\"struct pallet_grandpa::EquivocationReportSystem\">EquivocationReportSystem</a>&lt;T, R, P, L&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_grandpa/pallet/trait.Config.html\" title=\"trait pallet_grandpa::pallet::Config\">Config</a> + <a class=\"trait\" href=\"pallet_authorship/pallet/trait.Config.html\" title=\"trait pallet_authorship::pallet::Config\">Config</a> + <a class=\"trait\" href=\"frame_system/offchain/trait.SendTransactionTypes.html\" title=\"trait frame_system::offchain::SendTransactionTypes\">SendTransactionTypes</a>&lt;<a class=\"enum\" href=\"pallet_grandpa/pallet/enum.Call.html\" title=\"enum pallet_grandpa::pallet::Call\">Call</a>&lt;T&gt;&gt;,\n    R: <a class=\"trait\" href=\"sp_staking/offence/trait.ReportOffence.html\" title=\"trait sp_staking::offence::ReportOffence\">ReportOffence</a>&lt;T::<a class=\"associatedtype\" href=\"frame_system/pallet/trait.Config.html#associatedtype.AccountId\" title=\"type frame_system::pallet::Config::AccountId\">AccountId</a>, P::<a class=\"associatedtype\" href=\"frame_support/traits/validation/trait.KeyOwnerProofSystem.html#associatedtype.IdentificationTuple\" title=\"type frame_support::traits::validation::KeyOwnerProofSystem::IdentificationTuple\">IdentificationTuple</a>, <a class=\"struct\" href=\"pallet_grandpa/struct.EquivocationOffence.html\" title=\"struct pallet_grandpa::EquivocationOffence\">EquivocationOffence</a>&lt;P::<a class=\"associatedtype\" href=\"frame_support/traits/validation/trait.KeyOwnerProofSystem.html#associatedtype.IdentificationTuple\" title=\"type frame_support::traits::validation::KeyOwnerProofSystem::IdentificationTuple\">IdentificationTuple</a>&gt;&gt;,\n    P: <a class=\"trait\" href=\"frame_support/traits/validation/trait.KeyOwnerProofSystem.html\" title=\"trait frame_support::traits::validation::KeyOwnerProofSystem\">KeyOwnerProofSystem</a>&lt;(<a class=\"struct\" href=\"sp_core/crypto/struct.KeyTypeId.html\" title=\"struct sp_core::crypto::KeyTypeId\">KeyTypeId</a>, <a class=\"type\" href=\"pallet_grandpa/type.AuthorityId.html\" title=\"type pallet_grandpa::AuthorityId\">AuthorityId</a>), Proof = T::<a class=\"associatedtype\" href=\"pallet_grandpa/pallet/trait.Config.html#associatedtype.KeyOwnerProof\" title=\"type pallet_grandpa::pallet::Config::KeyOwnerProof\">KeyOwnerProof</a>&gt;,\n    P::<a class=\"associatedtype\" href=\"frame_support/traits/validation/trait.KeyOwnerProofSystem.html#associatedtype.IdentificationTuple\" title=\"type frame_support::traits::validation::KeyOwnerProofSystem::IdentificationTuple\">IdentificationTuple</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: <a class=\"trait\" href=\"bounded_collections/trait.Get.html\" title=\"trait bounded_collections::Get\">Get</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u64.html\">u64</a>&gt;,</div>"]]],["sp_staking",[]]]);
    if (window.register_implementors) {
        window.register_implementors(implementors);
    } else {
        window.pending_implementors = implementors;
    }
})()
//{"start":57,"fragment_lengths":[5119,18]}