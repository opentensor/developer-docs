(function() {
    var type_impls = Object.fromEntries([["libp2p",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Behaviour%3CP%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/libp2p_mdns/behaviour.rs.html#132-134\">Source</a><a href=\"#impl-Behaviour%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P&gt; <a class=\"struct\" href=\"libp2p/mdns/struct.Behaviour.html\" title=\"struct libp2p::mdns::Behaviour\">Behaviour</a>&lt;P&gt;<div class=\"where\">where\n    P: Provider,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_mdns/behaviour.rs.html#137\">Source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/mdns/struct.Behaviour.html#tymethod.new\" class=\"fn\">new</a>(config: <a class=\"struct\" href=\"libp2p/mdns/struct.Config.html\" title=\"struct libp2p::mdns::Config\">Config</a>, local_peer_id: <a class=\"struct\" href=\"libp2p/struct.PeerId.html\" title=\"struct libp2p::PeerId\">PeerId</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"libp2p/mdns/struct.Behaviour.html\" title=\"struct libp2p::mdns::Behaviour\">Behaviour</a>&lt;P&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Builds a new <code>Mdns</code> behaviour.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_node\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_mdns/behaviour.rs.html#150\">Source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/mdns/struct.Behaviour.html#tymethod.has_node\" class=\"fn\">has_node</a>(&amp;self, peer_id: &amp;<a class=\"struct\" href=\"libp2p/struct.PeerId.html\" title=\"struct libp2p::PeerId\">PeerId</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true if the given <code>PeerId</code> is in the list of nodes discovered through mDNS.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.discovered_nodes\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_mdns/behaviour.rs.html#155\">Source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/mdns/struct.Behaviour.html#tymethod.discovered_nodes\" class=\"fn\">discovered_nodes</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/exact_size/trait.ExactSizeIterator.html\" title=\"trait core::iter::traits::exact_size::ExactSizeIterator\">ExactSizeIterator</a></h4></section></summary><div class=\"docblock\"><p>Returns the list of nodes that we have discovered through mDNS and that are not expired.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.expire_node\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_mdns/behaviour.rs.html#160\">Source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/mdns/struct.Behaviour.html#tymethod.expire_node\" class=\"fn\">expire_node</a>(&amp;mut self, peer_id: &amp;<a class=\"struct\" href=\"libp2p/struct.PeerId.html\" title=\"struct libp2p::PeerId\">PeerId</a>)</h4></section></summary><div class=\"docblock\"><p>Expires a node before the ttl.</p>\n</div></details></div></details>",0,"libp2p::mdns::tokio::Behaviour"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Behaviour%3CP%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/libp2p_mdns/behaviour.rs.html#102\">Source</a><a href=\"#impl-Debug-for-Behaviour%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"libp2p/mdns/struct.Behaviour.html\" title=\"struct libp2p::mdns::Behaviour\">Behaviour</a>&lt;P&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + Provider,\n    &lt;P as Provider&gt;::Watcher: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    &lt;P as Provider&gt;::Socket: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    &lt;P as Provider&gt;::Timer: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_mdns/behaviour.rs.html#102\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","libp2p::mdns::tokio::Behaviour"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NetworkBehaviour-for-Behaviour%3CP%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/libp2p_mdns/behaviour.rs.html#171-173\">Source</a><a href=\"#impl-NetworkBehaviour-for-Behaviour%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P&gt; <a class=\"trait\" href=\"libp2p/swarm/trait.NetworkBehaviour.html\" title=\"trait libp2p::swarm::NetworkBehaviour\">NetworkBehaviour</a> for <a class=\"struct\" href=\"libp2p/mdns/struct.Behaviour.html\" title=\"struct libp2p::mdns::Behaviour\">Behaviour</a>&lt;P&gt;<div class=\"where\">where\n    P: Provider,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.ConnectionHandler\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_mdns/behaviour.rs.html#175\">Source</a><a href=\"#associatedtype.ConnectionHandler\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#associatedtype.ConnectionHandler\" class=\"associatedtype\">ConnectionHandler</a> = <a class=\"struct\" href=\"libp2p/swarm/dummy/struct.ConnectionHandler.html\" title=\"struct libp2p::swarm::dummy::ConnectionHandler\">ConnectionHandler</a></h4></section></summary><div class='docblock'>Handler for all the protocols the network behaviour supports.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.ToSwarm\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_mdns/behaviour.rs.html#176\">Source</a><a href=\"#associatedtype.ToSwarm\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#associatedtype.ToSwarm\" class=\"associatedtype\">ToSwarm</a> = <a class=\"enum\" href=\"libp2p/mdns/enum.Event.html\" title=\"enum libp2p::mdns::Event\">Event</a></h4></section></summary><div class='docblock'>Event generated by the <code>NetworkBehaviour</code> and that the swarm will report back.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.handle_established_inbound_connection\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_mdns/behaviour.rs.html#178-184\">Source</a><a href=\"#method.handle_established_inbound_connection\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#tymethod.handle_established_inbound_connection\" class=\"fn\">handle_established_inbound_connection</a>(\n    &amp;mut self,\n    _: <a class=\"struct\" href=\"libp2p/swarm/struct.ConnectionId.html\" title=\"struct libp2p::swarm::ConnectionId\">ConnectionId</a>,\n    _: <a class=\"struct\" href=\"libp2p/struct.PeerId.html\" title=\"struct libp2p::PeerId\">PeerId</a>,\n    _: &amp;<a class=\"struct\" href=\"libp2p/struct.Multiaddr.html\" title=\"struct libp2p::Multiaddr\">Multiaddr</a>,\n    _: &amp;<a class=\"struct\" href=\"libp2p/struct.Multiaddr.html\" title=\"struct libp2p::Multiaddr\">Multiaddr</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;<a class=\"struct\" href=\"libp2p/mdns/struct.Behaviour.html\" title=\"struct libp2p::mdns::Behaviour\">Behaviour</a>&lt;P&gt; as <a class=\"trait\" href=\"libp2p/swarm/trait.NetworkBehaviour.html\" title=\"trait libp2p::swarm::NetworkBehaviour\">NetworkBehaviour</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/swarm/trait.NetworkBehaviour.html#associatedtype.ConnectionHandler\" title=\"type libp2p::swarm::NetworkBehaviour::ConnectionHandler\">ConnectionHandler</a>, <a class=\"struct\" href=\"libp2p/swarm/struct.ConnectionDenied.html\" title=\"struct libp2p::swarm::ConnectionDenied\">ConnectionDenied</a>&gt;</h4></section></summary><div class='docblock'>Callback that is invoked for every established inbound connection. <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#tymethod.handle_established_inbound_connection\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.handle_pending_outbound_connection\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_mdns/behaviour.rs.html#188-194\">Source</a><a href=\"#method.handle_pending_outbound_connection\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#method.handle_pending_outbound_connection\" class=\"fn\">handle_pending_outbound_connection</a>(\n    &amp;mut self,\n    _connection_id: <a class=\"struct\" href=\"libp2p/swarm/struct.ConnectionId.html\" title=\"struct libp2p::swarm::ConnectionId\">ConnectionId</a>,\n    maybe_peer: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"libp2p/struct.PeerId.html\" title=\"struct libp2p::PeerId\">PeerId</a>&gt;,\n    _addresses: &amp;[<a class=\"struct\" href=\"libp2p/struct.Multiaddr.html\" title=\"struct libp2p::Multiaddr\">Multiaddr</a>],\n    _effective_role: <a class=\"enum\" href=\"libp2p/core/enum.Endpoint.html\" title=\"enum libp2p::core::Endpoint\">Endpoint</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"libp2p/struct.Multiaddr.html\" title=\"struct libp2p::Multiaddr\">Multiaddr</a>&gt;, <a class=\"struct\" href=\"libp2p/swarm/struct.ConnectionDenied.html\" title=\"struct libp2p::swarm::ConnectionDenied\">ConnectionDenied</a>&gt;</h4></section></summary><div class='docblock'>Callback that is invoked for every outbound connection attempt. <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#method.handle_pending_outbound_connection\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.handle_established_outbound_connection\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_mdns/behaviour.rs.html#208-214\">Source</a><a href=\"#method.handle_established_outbound_connection\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#tymethod.handle_established_outbound_connection\" class=\"fn\">handle_established_outbound_connection</a>(\n    &amp;mut self,\n    _: <a class=\"struct\" href=\"libp2p/swarm/struct.ConnectionId.html\" title=\"struct libp2p::swarm::ConnectionId\">ConnectionId</a>,\n    _: <a class=\"struct\" href=\"libp2p/struct.PeerId.html\" title=\"struct libp2p::PeerId\">PeerId</a>,\n    _: &amp;<a class=\"struct\" href=\"libp2p/struct.Multiaddr.html\" title=\"struct libp2p::Multiaddr\">Multiaddr</a>,\n    _: <a class=\"enum\" href=\"libp2p/core/enum.Endpoint.html\" title=\"enum libp2p::core::Endpoint\">Endpoint</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;<a class=\"struct\" href=\"libp2p/mdns/struct.Behaviour.html\" title=\"struct libp2p::mdns::Behaviour\">Behaviour</a>&lt;P&gt; as <a class=\"trait\" href=\"libp2p/swarm/trait.NetworkBehaviour.html\" title=\"trait libp2p::swarm::NetworkBehaviour\">NetworkBehaviour</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/swarm/trait.NetworkBehaviour.html#associatedtype.ConnectionHandler\" title=\"type libp2p::swarm::NetworkBehaviour::ConnectionHandler\">ConnectionHandler</a>, <a class=\"struct\" href=\"libp2p/swarm/struct.ConnectionDenied.html\" title=\"struct libp2p::swarm::ConnectionDenied\">ConnectionDenied</a>&gt;</h4></section></summary><div class='docblock'>Callback that is invoked for every established outbound connection. <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#tymethod.handle_established_outbound_connection\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_connection_handler_event\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_mdns/behaviour.rs.html#218-223\">Source</a><a href=\"#method.on_connection_handler_event\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#tymethod.on_connection_handler_event\" class=\"fn\">on_connection_handler_event</a>(\n    &amp;mut self,\n    _: <a class=\"struct\" href=\"libp2p/struct.PeerId.html\" title=\"struct libp2p::PeerId\">PeerId</a>,\n    _: <a class=\"struct\" href=\"libp2p/swarm/struct.ConnectionId.html\" title=\"struct libp2p::swarm::ConnectionId\">ConnectionId</a>,\n    ev: &lt;&lt;<a class=\"struct\" href=\"libp2p/mdns/struct.Behaviour.html\" title=\"struct libp2p::mdns::Behaviour\">Behaviour</a>&lt;P&gt; as <a class=\"trait\" href=\"libp2p/swarm/trait.NetworkBehaviour.html\" title=\"trait libp2p::swarm::NetworkBehaviour\">NetworkBehaviour</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/swarm/trait.NetworkBehaviour.html#associatedtype.ConnectionHandler\" title=\"type libp2p::swarm::NetworkBehaviour::ConnectionHandler\">ConnectionHandler</a> as <a class=\"trait\" href=\"libp2p/swarm/trait.ConnectionHandler.html\" title=\"trait libp2p::swarm::ConnectionHandler\">ConnectionHandler</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/swarm/trait.ConnectionHandler.html#associatedtype.ToBehaviour\" title=\"type libp2p::swarm::ConnectionHandler::ToBehaviour\">ToBehaviour</a>,\n)</h4></section></summary><div class='docblock'>Informs the behaviour about an event generated by the <a href=\"libp2p/swarm/trait.ConnectionHandler.html\" title=\"trait libp2p::swarm::ConnectionHandler\"><code>ConnectionHandler</code></a>\ndedicated to the peer identified by <code>peer_id</code>. for the behaviour. <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#tymethod.on_connection_handler_event\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_swarm_event\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_mdns/behaviour.rs.html#227\">Source</a><a href=\"#method.on_swarm_event\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#tymethod.on_swarm_event\" class=\"fn\">on_swarm_event</a>(\n    &amp;mut self,\n    event: <a class=\"enum\" href=\"libp2p/swarm/enum.FromSwarm.html\" title=\"enum libp2p::swarm::FromSwarm\">FromSwarm</a>&lt;'_, &lt;<a class=\"struct\" href=\"libp2p/mdns/struct.Behaviour.html\" title=\"struct libp2p::mdns::Behaviour\">Behaviour</a>&lt;P&gt; as <a class=\"trait\" href=\"libp2p/swarm/trait.NetworkBehaviour.html\" title=\"trait libp2p::swarm::NetworkBehaviour\">NetworkBehaviour</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/swarm/trait.NetworkBehaviour.html#associatedtype.ConnectionHandler\" title=\"type libp2p::swarm::NetworkBehaviour::ConnectionHandler\">ConnectionHandler</a>&gt;,\n)</h4></section></summary><div class='docblock'>Informs the behaviour about an event from the <a href=\"libp2p/struct.Swarm.html\" title=\"struct libp2p::Swarm\"><code>Swarm</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_mdns/behaviour.rs.html#252-256\">Source</a><a href=\"#method.poll\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#tymethod.poll\" class=\"fn\">poll</a>(\n    &amp;mut self,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n    _: &amp;mut impl <a class=\"trait\" href=\"libp2p/swarm/trait.PollParameters.html\" title=\"trait libp2p::swarm::PollParameters\">PollParameters</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"libp2p/swarm/enum.ToSwarm.html\" title=\"enum libp2p::swarm::ToSwarm\">ToSwarm</a>&lt;&lt;<a class=\"struct\" href=\"libp2p/mdns/struct.Behaviour.html\" title=\"struct libp2p::mdns::Behaviour\">Behaviour</a>&lt;P&gt; as <a class=\"trait\" href=\"libp2p/swarm/trait.NetworkBehaviour.html\" title=\"trait libp2p::swarm::NetworkBehaviour\">NetworkBehaviour</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/swarm/trait.NetworkBehaviour.html#associatedtype.ToSwarm\" title=\"type libp2p::swarm::NetworkBehaviour::ToSwarm\">ToSwarm</a>, &lt;&lt;<a class=\"struct\" href=\"libp2p/mdns/struct.Behaviour.html\" title=\"struct libp2p::mdns::Behaviour\">Behaviour</a>&lt;P&gt; as <a class=\"trait\" href=\"libp2p/swarm/trait.NetworkBehaviour.html\" title=\"trait libp2p::swarm::NetworkBehaviour\">NetworkBehaviour</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/swarm/trait.NetworkBehaviour.html#associatedtype.ConnectionHandler\" title=\"type libp2p::swarm::NetworkBehaviour::ConnectionHandler\">ConnectionHandler</a> as <a class=\"trait\" href=\"libp2p/swarm/trait.ConnectionHandler.html\" title=\"trait libp2p::swarm::ConnectionHandler\">ConnectionHandler</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/swarm/trait.ConnectionHandler.html#associatedtype.FromBehaviour\" title=\"type libp2p::swarm::ConnectionHandler::FromBehaviour\">FromBehaviour</a>&gt;&gt;</h4></section></summary><div class='docblock'>Polls for things that swarm should do. <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#tymethod.poll\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.handle_pending_inbound_connection\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_swarm/behaviour.rs.html#133-138\">Source</a><a href=\"#method.handle_pending_inbound_connection\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#method.handle_pending_inbound_connection\" class=\"fn\">handle_pending_inbound_connection</a>(\n    &amp;mut self,\n    _connection_id: <a class=\"struct\" href=\"libp2p/swarm/struct.ConnectionId.html\" title=\"struct libp2p::swarm::ConnectionId\">ConnectionId</a>,\n    _local_addr: &amp;<a class=\"struct\" href=\"libp2p/struct.Multiaddr.html\" title=\"struct libp2p::Multiaddr\">Multiaddr</a>,\n    _remote_addr: &amp;<a class=\"struct\" href=\"libp2p/struct.Multiaddr.html\" title=\"struct libp2p::Multiaddr\">Multiaddr</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"libp2p/swarm/struct.ConnectionDenied.html\" title=\"struct libp2p::swarm::ConnectionDenied\">ConnectionDenied</a>&gt;</h4></section></summary><div class='docblock'>Callback that is invoked for every new inbound connection. <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#method.handle_pending_inbound_connection\">Read more</a></div></details></div></details>","NetworkBehaviour","libp2p::mdns::tokio::Behaviour"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[21470]}