(function() {
    var type_impls = Object.fromEntries([["libp2p",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Transport%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/libp2p_tcp/lib.rs.html#403-405\">Source</a><a href=\"#impl-Default-for-Transport%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"libp2p/tcp/struct.Transport.html\" title=\"struct libp2p::tcp::Transport\">Transport</a>&lt;T&gt;<div class=\"where\">where\n    T: Provider + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_tcp/lib.rs.html#410\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"libp2p/tcp/struct.Transport.html\" title=\"struct libp2p::tcp::Transport\">Transport</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a <a href=\"libp2p/tcp/struct.Transport.html\" title=\"struct libp2p::tcp::Transport\"><code>Transport</code></a> with reasonable defaults.</p>\n<p>This transport will have port-reuse disabled.</p>\n</div></details></div></details>","Default","libp2p::tcp::tokio::Transport"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Transport%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/libp2p_tcp/lib.rs.html#322-324\">Source</a><a href=\"#impl-Transport%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"libp2p/tcp/struct.Transport.html\" title=\"struct libp2p::tcp::Transport\">Transport</a>&lt;T&gt;<div class=\"where\">where\n    T: Provider + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_tcp/lib.rs.html#334\">Source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/tcp/struct.Transport.html#tymethod.new\" class=\"fn\">new</a>(config: <a class=\"struct\" href=\"libp2p/tcp/struct.Config.html\" title=\"struct libp2p::tcp::Config\">Config</a>) -&gt; <a class=\"struct\" href=\"libp2p/tcp/struct.Transport.html\" title=\"struct libp2p::tcp::Transport\">Transport</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new instance of <a href=\"libp2p/tcp/struct.Transport.html\" title=\"struct libp2p::tcp::Transport\"><code>Transport</code></a>.</p>\n<p>If you don’t want to specify a <a href=\"libp2p/tcp/struct.Config.html\" title=\"struct libp2p::tcp::Config\"><code>Config</code></a>, use <a href=\"libp2p/tcp/struct.Transport.html#method.default\" title=\"associated function libp2p::tcp::Transport::default\"><code>Transport::default</code></a>.</p>\n<p>It is best to call this function through one of the type-aliases of this type:</p>\n<ul>\n<li><a href=\"libp2p/tcp/struct.Transport.html#method.new\" title=\"associated function libp2p::tcp::Transport::new\"><code>tokio::Transport::new</code></a></li>\n<li>[<code>async_io::Transport::new</code>]</li>\n</ul>\n</div></details></div></details>",0,"libp2p::tcp::tokio::Transport"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Transport-for-Transport%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/libp2p_tcp/lib.rs.html#428-432\">Source</a><a href=\"#impl-Transport-for-Transport%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"libp2p/trait.Transport.html\" title=\"trait libp2p::Transport\">Transport</a> for <a class=\"struct\" href=\"libp2p/tcp/struct.Transport.html\" title=\"struct libp2p::tcp::Transport\">Transport</a>&lt;T&gt;<div class=\"where\">where\n    T: Provider + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    &lt;T as Provider&gt;::Listener: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,\n    &lt;T as Provider&gt;::Stream: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.address_translation\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_tcp/lib.rs.html#530\">Source</a><a href=\"#method.address_translation\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"libp2p/trait.Transport.html#tymethod.address_translation\" class=\"fn\">address_translation</a>(\n    &amp;self,\n    listen: &amp;<a class=\"struct\" href=\"libp2p/struct.Multiaddr.html\" title=\"struct libp2p::Multiaddr\">Multiaddr</a>,\n    observed: &amp;<a class=\"struct\" href=\"libp2p/struct.Multiaddr.html\" title=\"struct libp2p::Multiaddr\">Multiaddr</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"libp2p/struct.Multiaddr.html\" title=\"struct libp2p::Multiaddr\">Multiaddr</a>&gt;</h4></section></summary><div class=\"docblock\"><p>When port reuse is disabled and hence ephemeral local ports are\nused for outgoing connections, the returned address is the\n<code>observed</code> address with the port replaced by the port of the\n<code>listen</code> address.</p>\n<p>If port reuse is enabled, <code>Some(observed)</code> is returned, as there\nis a chance that the <code>observed</code> address <em>and</em> port are reachable\nfor other peers if there is a NAT in the way that does endpoint-\nindependent filtering. Furthermore, even if that is not the case\nand TCP hole punching techniques must be used for NAT traversal,\nthe <code>observed</code> address is still the one that a remote should connect\nto for the purpose of the hole punching procedure, as it represents\nthe mapped IP and port of the NAT device in front of the local\nnode.</p>\n<p><code>None</code> is returned if one of the given addresses is not a TCP/IP\naddress.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_tcp/lib.rs.html#541-544\">Source</a><a href=\"#method.poll\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"libp2p/trait.Transport.html#tymethod.poll\" class=\"fn\">poll</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"libp2p/tcp/struct.Transport.html\" title=\"struct libp2p::tcp::Transport\">Transport</a>&lt;T&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"libp2p/core/transport/enum.TransportEvent.html\" title=\"enum libp2p::core::transport::TransportEvent\">TransportEvent</a>&lt;&lt;<a class=\"struct\" href=\"libp2p/tcp/struct.Transport.html\" title=\"struct libp2p::tcp::Transport\">Transport</a>&lt;T&gt; as <a class=\"trait\" href=\"libp2p/trait.Transport.html\" title=\"trait libp2p::Transport\">Transport</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/trait.Transport.html#associatedtype.ListenerUpgrade\" title=\"type libp2p::Transport::ListenerUpgrade\">ListenerUpgrade</a>, &lt;<a class=\"struct\" href=\"libp2p/tcp/struct.Transport.html\" title=\"struct libp2p::tcp::Transport\">Transport</a>&lt;T&gt; as <a class=\"trait\" href=\"libp2p/trait.Transport.html\" title=\"trait libp2p::Transport\">Transport</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/trait.Transport.html#associatedtype.Error\" title=\"type libp2p::Transport::Error\">Error</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Poll all listeners.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_tcp/lib.rs.html#434\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"libp2p/trait.Transport.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;T as Provider&gt;::Stream</h4></section></summary><div class='docblock'>The result of a connection setup process, including protocol upgrades. <a href=\"libp2p/trait.Transport.html#associatedtype.Output\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_tcp/lib.rs.html#435\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"libp2p/trait.Transport.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a></h4></section></summary><div class='docblock'>An error that occurred during connection setup.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Dial\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_tcp/lib.rs.html#436\">Source</a><a href=\"#associatedtype.Dial\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"libp2p/trait.Transport.html#associatedtype.Dial\" class=\"associatedtype\">Dial</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;<a class=\"struct\" href=\"libp2p/tcp/struct.Transport.html\" title=\"struct libp2p::tcp::Transport\">Transport</a>&lt;T&gt; as <a class=\"trait\" href=\"libp2p/trait.Transport.html\" title=\"trait libp2p::Transport\">Transport</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/trait.Transport.html#associatedtype.Output\" title=\"type libp2p::Transport::Output\">Output</a>, &lt;<a class=\"struct\" href=\"libp2p/tcp/struct.Transport.html\" title=\"struct libp2p::tcp::Transport\">Transport</a>&lt;T&gt; as <a class=\"trait\" href=\"libp2p/trait.Transport.html\" title=\"trait libp2p::Transport\">Transport</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/trait.Transport.html#associatedtype.Error\" title=\"type libp2p::Transport::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>A pending <a href=\"libp2p/trait.Transport.html#associatedtype.Output\" title=\"associated type libp2p::Transport::Output\"><code>Output</code></a> for an outbound connection,\nobtained from <a href=\"libp2p/trait.Transport.html#tymethod.dial\" title=\"method libp2p::Transport::dial\">dialing</a>.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.ListenerUpgrade\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_tcp/lib.rs.html#437\">Source</a><a href=\"#associatedtype.ListenerUpgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"libp2p/trait.Transport.html#associatedtype.ListenerUpgrade\" class=\"associatedtype\">ListenerUpgrade</a> = <a class=\"struct\" href=\"futures_util/future/ready/struct.Ready.html\" title=\"struct futures_util::future::ready::Ready\">Ready</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;<a class=\"struct\" href=\"libp2p/tcp/struct.Transport.html\" title=\"struct libp2p::tcp::Transport\">Transport</a>&lt;T&gt; as <a class=\"trait\" href=\"libp2p/trait.Transport.html\" title=\"trait libp2p::Transport\">Transport</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/trait.Transport.html#associatedtype.Output\" title=\"type libp2p::Transport::Output\">Output</a>, &lt;<a class=\"struct\" href=\"libp2p/tcp/struct.Transport.html\" title=\"struct libp2p::tcp::Transport\">Transport</a>&lt;T&gt; as <a class=\"trait\" href=\"libp2p/trait.Transport.html\" title=\"trait libp2p::Transport\">Transport</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/trait.Transport.html#associatedtype.Error\" title=\"type libp2p::Transport::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>A pending <a href=\"libp2p/trait.Transport.html#associatedtype.Output\" title=\"associated type libp2p::Transport::Output\"><code>Output</code></a> for an inbound connection,\nobtained from the <a href=\"libp2p/trait.Transport.html\" title=\"trait libp2p::Transport\"><code>Transport</code></a> stream. <a href=\"libp2p/trait.Transport.html#associatedtype.ListenerUpgrade\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.listen_on\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_tcp/lib.rs.html#439-443\">Source</a><a href=\"#method.listen_on\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"libp2p/trait.Transport.html#tymethod.listen_on\" class=\"fn\">listen_on</a>(\n    &amp;mut self,\n    id: <a class=\"struct\" href=\"libp2p/core/transport/struct.ListenerId.html\" title=\"struct libp2p::core::transport::ListenerId\">ListenerId</a>,\n    addr: <a class=\"struct\" href=\"libp2p/struct.Multiaddr.html\" title=\"struct libp2p::Multiaddr\">Multiaddr</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"libp2p/enum.TransportError.html\" title=\"enum libp2p::TransportError\">TransportError</a>&lt;&lt;<a class=\"struct\" href=\"libp2p/tcp/struct.Transport.html\" title=\"struct libp2p::tcp::Transport\">Transport</a>&lt;T&gt; as <a class=\"trait\" href=\"libp2p/trait.Transport.html\" title=\"trait libp2p::Transport\">Transport</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/trait.Transport.html#associatedtype.Error\" title=\"type libp2p::Transport::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Listens on the given <a href=\"libp2p/struct.Multiaddr.html\" title=\"struct libp2p::Multiaddr\"><code>Multiaddr</code></a> for inbound connections with a provided <a href=\"libp2p/core/transport/struct.ListenerId.html\" title=\"struct libp2p::core::transport::ListenerId\"><code>ListenerId</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_listener\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_tcp/lib.rs.html#457\">Source</a><a href=\"#method.remove_listener\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"libp2p/trait.Transport.html#tymethod.remove_listener\" class=\"fn\">remove_listener</a>(&amp;mut self, id: <a class=\"struct\" href=\"libp2p/core/transport/struct.ListenerId.html\" title=\"struct libp2p::core::transport::ListenerId\">ListenerId</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Remove a listener. <a href=\"libp2p/trait.Transport.html#tymethod.remove_listener\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dial\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_tcp/lib.rs.html#466\">Source</a><a href=\"#method.dial\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"libp2p/trait.Transport.html#tymethod.dial\" class=\"fn\">dial</a>(\n    &amp;mut self,\n    addr: <a class=\"struct\" href=\"libp2p/struct.Multiaddr.html\" title=\"struct libp2p::Multiaddr\">Multiaddr</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;<a class=\"struct\" href=\"libp2p/tcp/struct.Transport.html\" title=\"struct libp2p::tcp::Transport\">Transport</a>&lt;T&gt; as <a class=\"trait\" href=\"libp2p/trait.Transport.html\" title=\"trait libp2p::Transport\">Transport</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/trait.Transport.html#associatedtype.Dial\" title=\"type libp2p::Transport::Dial\">Dial</a>, <a class=\"enum\" href=\"libp2p/enum.TransportError.html\" title=\"enum libp2p::TransportError\">TransportError</a>&lt;&lt;<a class=\"struct\" href=\"libp2p/tcp/struct.Transport.html\" title=\"struct libp2p::tcp::Transport\">Transport</a>&lt;T&gt; as <a class=\"trait\" href=\"libp2p/trait.Transport.html\" title=\"trait libp2p::Transport\">Transport</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/trait.Transport.html#associatedtype.Error\" title=\"type libp2p::Transport::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Dials the given <a href=\"libp2p/struct.Multiaddr.html\" title=\"struct libp2p::Multiaddr\"><code>Multiaddr</code></a>, returning a future for a pending outbound connection. <a href=\"libp2p/trait.Transport.html#tymethod.dial\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dial_as_listener\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_tcp/lib.rs.html#506-509\">Source</a><a href=\"#method.dial_as_listener\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"libp2p/trait.Transport.html#tymethod.dial_as_listener\" class=\"fn\">dial_as_listener</a>(\n    &amp;mut self,\n    addr: <a class=\"struct\" href=\"libp2p/struct.Multiaddr.html\" title=\"struct libp2p::Multiaddr\">Multiaddr</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;<a class=\"struct\" href=\"libp2p/tcp/struct.Transport.html\" title=\"struct libp2p::tcp::Transport\">Transport</a>&lt;T&gt; as <a class=\"trait\" href=\"libp2p/trait.Transport.html\" title=\"trait libp2p::Transport\">Transport</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/trait.Transport.html#associatedtype.Dial\" title=\"type libp2p::Transport::Dial\">Dial</a>, <a class=\"enum\" href=\"libp2p/enum.TransportError.html\" title=\"enum libp2p::TransportError\">TransportError</a>&lt;&lt;<a class=\"struct\" href=\"libp2p/tcp/struct.Transport.html\" title=\"struct libp2p::tcp::Transport\">Transport</a>&lt;T&gt; as <a class=\"trait\" href=\"libp2p/trait.Transport.html\" title=\"trait libp2p::Transport\">Transport</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/trait.Transport.html#associatedtype.Error\" title=\"type libp2p::Transport::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>As <a href=\"libp2p/trait.Transport.html#tymethod.dial\" title=\"method libp2p::Transport::dial\"><code>Transport::dial</code></a> but has the local node act as a listener on the outgoing connection. <a href=\"libp2p/trait.Transport.html#tymethod.dial_as_listener\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.boxed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_core/transport.rs.html#179-184\">Source</a><a href=\"#method.boxed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"libp2p/trait.Transport.html#method.boxed\" class=\"fn\">boxed</a>(self) -&gt; <a class=\"struct\" href=\"libp2p/core/transport/struct.Boxed.html\" title=\"struct libp2p::core::transport::Boxed\">Boxed</a>&lt;Self::<a class=\"associatedtype\" href=\"libp2p/trait.Transport.html#associatedtype.Output\" title=\"type libp2p::Transport::Output\">Output</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + 'static,\n    Self::<a class=\"associatedtype\" href=\"libp2p/trait.Transport.html#associatedtype.Dial\" title=\"type libp2p::Transport::Dial\">Dial</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Self::<a class=\"associatedtype\" href=\"libp2p/trait.Transport.html#associatedtype.ListenerUpgrade\" title=\"type libp2p::Transport::ListenerUpgrade\">ListenerUpgrade</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Self::<a class=\"associatedtype\" href=\"libp2p/trait.Transport.html#associatedtype.Error\" title=\"type libp2p::Transport::Error\">Error</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h4></section></summary><div class='docblock'>Boxes the transport, including custom transport errors.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_core/transport.rs.html#190-193\">Source</a><a href=\"#method.map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"libp2p/trait.Transport.html#method.map\" class=\"fn\">map</a>&lt;F, O&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"libp2p/core/transport/map/struct.Map.html\" title=\"struct libp2p::core::transport::map::Map\">Map</a>&lt;Self, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Self::<a class=\"associatedtype\" href=\"libp2p/trait.Transport.html#associatedtype.Output\" title=\"type libp2p::Transport::Output\">Output</a>, <a class=\"enum\" href=\"libp2p/core/enum.ConnectedPoint.html\" title=\"enum libp2p::core::ConnectedPoint\">ConnectedPoint</a>) -&gt; O,</div></h4></section></summary><div class='docblock'>Applies a function on the connections created by the transport.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_err\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_core/transport.rs.html#199-202\">Source</a><a href=\"#method.map_err\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"libp2p/trait.Transport.html#method.map_err\" class=\"fn\">map_err</a>&lt;F, E&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"libp2p/core/transport/map_err/struct.MapErr.html\" title=\"struct libp2p::core::transport::map_err::MapErr\">MapErr</a>&lt;Self, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Self::<a class=\"associatedtype\" href=\"libp2p/trait.Transport.html#associatedtype.Error\" title=\"type libp2p::Transport::Error\">Error</a>) -&gt; E,</div></h4></section></summary><div class='docblock'>Applies a function on the errors generated by the futures of the transport.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.or_transport\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_core/transport.rs.html#212-216\">Source</a><a href=\"#method.or_transport\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"libp2p/trait.Transport.html#method.or_transport\" class=\"fn\">or_transport</a>&lt;U&gt;(self, other: U) -&gt; <a class=\"struct\" href=\"libp2p/core/transport/struct.OrTransport.html\" title=\"struct libp2p::core::transport::OrTransport\">OrTransport</a>&lt;Self, U&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    U: <a class=\"trait\" href=\"libp2p/trait.Transport.html\" title=\"trait libp2p::Transport\">Transport</a>,\n    &lt;U as <a class=\"trait\" href=\"libp2p/trait.Transport.html\" title=\"trait libp2p::Transport\">Transport</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/trait.Transport.html#associatedtype.Error\" title=\"type libp2p::Transport::Error\">Error</a>: 'static,</div></h4></section></summary><div class='docblock'>Adds a fallback transport that is used when encountering errors\nwhile establishing inbound or outbound connections. <a href=\"libp2p/trait.Transport.html#method.or_transport\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.and_then\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_core/transport.rs.html#228-233\">Source</a><a href=\"#method.and_then\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"libp2p/trait.Transport.html#method.and_then\" class=\"fn\">and_then</a>&lt;C, F, O&gt;(self, f: C) -&gt; <a class=\"struct\" href=\"libp2p/core/transport/and_then/struct.AndThen.html\" title=\"struct libp2p::core::transport::and_then::AndThen\">AndThen</a>&lt;Self, C&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Self::<a class=\"associatedtype\" href=\"libp2p/trait.Transport.html#associatedtype.Output\" title=\"type libp2p::Transport::Output\">Output</a>, <a class=\"enum\" href=\"libp2p/core/enum.ConnectedPoint.html\" title=\"enum libp2p::core::ConnectedPoint\">ConnectedPoint</a>) -&gt; F,\n    F: <a class=\"trait\" href=\"futures_core/future/trait.TryFuture.html\" title=\"trait futures_core::future::TryFuture\">TryFuture</a>&lt;Ok = O&gt;,\n    &lt;F as <a class=\"trait\" href=\"futures_core/future/trait.TryFuture.html\" title=\"trait futures_core::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_core/future/trait.TryFuture.html#associatedtype.Error\" title=\"type futures_core::future::TryFuture::Error\">Error</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + 'static,</div></h4></section></summary><div class='docblock'>Applies a function producing an asynchronous result to every connection\ncreated by this transport. <a href=\"libp2p/trait.Transport.html#method.and_then\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.upgrade\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_core/transport.rs.html#240-243\">Source</a><a href=\"#method.upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"libp2p/trait.Transport.html#method.upgrade\" class=\"fn\">upgrade</a>(self, version: <a class=\"enum\" href=\"libp2p/core/upgrade/enum.Version.html\" title=\"enum libp2p::core::upgrade::Version\">Version</a>) -&gt; <a class=\"struct\" href=\"libp2p/core/transport/upgrade/struct.Builder.html\" title=\"struct libp2p::core::transport::upgrade::Builder\">Builder</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"libp2p/trait.Transport.html#associatedtype.Error\" title=\"type libp2p::Transport::Error\">Error</a>: 'static,</div></h4></section></summary><div class='docblock'>Begins a series of protocol upgrades via an\n<a href=\"libp2p/core/transport/upgrade/struct.Builder.html\" title=\"struct libp2p::core::transport::upgrade::Builder\"><code>upgrade::Builder</code></a>.</div></details></div></details>","Transport","libp2p::tcp::tokio::Transport"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[29923]}