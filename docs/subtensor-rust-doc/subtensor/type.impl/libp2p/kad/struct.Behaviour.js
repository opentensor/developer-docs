(function() {
    var type_impls = Object.fromEntries([["libp2p",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Behaviour%3CTStore%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/libp2p_kad/behaviour.rs.html#410-412\">Source</a><a href=\"#impl-Behaviour%3CTStore%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;TStore&gt; <a class=\"struct\" href=\"libp2p/kad/struct.Behaviour.html\" title=\"struct libp2p::kad::Behaviour\">Behaviour</a>&lt;TStore&gt;<div class=\"where\">where\n    TStore: <a class=\"trait\" href=\"libp2p/kad/record/store/trait.RecordStore.html\" title=\"trait libp2p::kad::record::store::RecordStore\">RecordStore</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_kad/behaviour.rs.html#415\">Source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/kad/struct.Behaviour.html#tymethod.new\" class=\"fn\">new</a>(id: <a class=\"struct\" href=\"libp2p/struct.PeerId.html\" title=\"struct libp2p::PeerId\">PeerId</a>, store: TStore) -&gt; <a class=\"struct\" href=\"libp2p/kad/struct.Behaviour.html\" title=\"struct libp2p::kad::Behaviour\">Behaviour</a>&lt;TStore&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a new <code>Kademlia</code> network behaviour with a default configuration.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.protocol_names\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_kad/behaviour.rs.html#420\">Source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/kad/struct.Behaviour.html#tymethod.protocol_names\" class=\"fn\">protocol_names</a>(&amp;self) -&gt; &amp;[<a class=\"struct\" href=\"libp2p/struct.StreamProtocol.html\" title=\"struct libp2p::StreamProtocol\">StreamProtocol</a>]</h4></section></summary><div class=\"docblock\"><p>Get the protocol name of this kademlia instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_config\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_kad/behaviour.rs.html#425\">Source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/kad/struct.Behaviour.html#tymethod.with_config\" class=\"fn\">with_config</a>(\n    id: <a class=\"struct\" href=\"libp2p/struct.PeerId.html\" title=\"struct libp2p::PeerId\">PeerId</a>,\n    store: TStore,\n    config: <a class=\"struct\" href=\"libp2p/kad/struct.Config.html\" title=\"struct libp2p::kad::Config\">Config</a>,\n) -&gt; <a class=\"struct\" href=\"libp2p/kad/struct.Behaviour.html\" title=\"struct libp2p::kad::Behaviour\">Behaviour</a>&lt;TStore&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a new <code>Kademlia</code> network behaviour with the given configuration.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_queries\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_kad/behaviour.rs.html#470\">Source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/kad/struct.Behaviour.html#tymethod.iter_queries\" class=\"fn\">iter_queries</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"struct\" href=\"libp2p/kad/struct.QueryRef.html\" title=\"struct libp2p::kad::QueryRef\">QueryRef</a>&lt;'_&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Gets an iterator over immutable references to all running queries.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_queries_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_kad/behaviour.rs.html#481\">Source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/kad/struct.Behaviour.html#tymethod.iter_queries_mut\" class=\"fn\">iter_queries_mut</a>(&amp;mut self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"struct\" href=\"libp2p/kad/struct.QueryMut.html\" title=\"struct libp2p::kad::QueryMut\">QueryMut</a>&lt;'_&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Gets an iterator over mutable references to all running queries.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.query\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_kad/behaviour.rs.html#492\">Source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/kad/struct.Behaviour.html#tymethod.query\" class=\"fn\">query</a>(&amp;self, id: &amp;<a class=\"struct\" href=\"libp2p/kad/struct.QueryId.html\" title=\"struct libp2p::kad::QueryId\">QueryId</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"libp2p/kad/struct.QueryRef.html\" title=\"struct libp2p::kad::QueryRef\">QueryRef</a>&lt;'_&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Gets an immutable reference to a running query, if it exists.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.query_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_kad/behaviour.rs.html#503\">Source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/kad/struct.Behaviour.html#tymethod.query_mut\" class=\"fn\">query_mut</a>&lt;'a&gt;(&amp;'a mut self, id: &amp;<a class=\"struct\" href=\"libp2p/kad/struct.QueryId.html\" title=\"struct libp2p::kad::QueryId\">QueryId</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"libp2p/kad/struct.QueryMut.html\" title=\"struct libp2p::kad::QueryMut\">QueryMut</a>&lt;'a&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Gets a mutable reference to a running query, if it exists.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_address\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_kad/behaviour.rs.html#530\">Source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/kad/struct.Behaviour.html#tymethod.add_address\" class=\"fn\">add_address</a>(\n    &amp;mut self,\n    peer: &amp;<a class=\"struct\" href=\"libp2p/struct.PeerId.html\" title=\"struct libp2p::PeerId\">PeerId</a>,\n    address: <a class=\"struct\" href=\"libp2p/struct.Multiaddr.html\" title=\"struct libp2p::Multiaddr\">Multiaddr</a>,\n) -&gt; <a class=\"enum\" href=\"libp2p/kad/enum.RoutingUpdate.html\" title=\"enum libp2p::kad::RoutingUpdate\">RoutingUpdate</a></h4></section></summary><div class=\"docblock\"><p>Adds a known listen address of a peer participating in the DHT to the\nrouting table.</p>\n<p>Explicitly adding addresses of peers serves two purposes:</p>\n<ol>\n<li>\n<p>In order for a node to join the DHT, it must know about at least\none other node of the DHT.</p>\n</li>\n<li>\n<p>When a remote peer initiates a connection and that peer is not\nyet in the routing table, the <code>Kademlia</code> behaviour must be\ninformed of an address on which that peer is listening for\nconnections before it can be added to the routing table\nfrom where it can subsequently be discovered by all peers\nin the DHT.</p>\n</li>\n</ol>\n<p>If the routing table has been updated as a result of this operation,\na <a href=\"libp2p/kad/enum.Event.html#variant.RoutingUpdated\" title=\"variant libp2p::kad::Event::RoutingUpdated\"><code>Event::RoutingUpdated</code></a> event is emitted.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_address\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_kad/behaviour.rs.html#606-610\">Source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/kad/struct.Behaviour.html#tymethod.remove_address\" class=\"fn\">remove_address</a>(\n    &amp;mut self,\n    peer: &amp;<a class=\"struct\" href=\"libp2p/struct.PeerId.html\" title=\"struct libp2p::PeerId\">PeerId</a>,\n    address: &amp;<a class=\"struct\" href=\"libp2p/struct.Multiaddr.html\" title=\"struct libp2p::Multiaddr\">Multiaddr</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"libp2p/kad/struct.EntryView.html\" title=\"struct libp2p::kad::EntryView\">EntryView</a>&lt;<a class=\"struct\" href=\"libp2p/kad/struct.KBucketKey.html\" title=\"struct libp2p::kad::KBucketKey\">Key</a>&lt;<a class=\"struct\" href=\"libp2p/struct.PeerId.html\" title=\"struct libp2p::PeerId\">PeerId</a>&gt;, <a class=\"struct\" href=\"libp2p/kad/struct.Addresses.html\" title=\"struct libp2p::kad::Addresses\">Addresses</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Removes an address of a peer from the routing table.</p>\n<p>If the given address is the last address of the peer in the\nrouting table, the peer is removed from the routing table\nand <code>Some</code> is returned with a view of the removed entry.\nThe same applies if the peer is currently pending insertion\ninto the routing table.</p>\n<p>If the given peer or address is not in the routing table,\nthis is a no-op.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_peer\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_kad/behaviour.rs.html#635-638\">Source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/kad/struct.Behaviour.html#tymethod.remove_peer\" class=\"fn\">remove_peer</a>(\n    &amp;mut self,\n    peer: &amp;<a class=\"struct\" href=\"libp2p/struct.PeerId.html\" title=\"struct libp2p::PeerId\">PeerId</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"libp2p/kad/struct.EntryView.html\" title=\"struct libp2p::kad::EntryView\">EntryView</a>&lt;<a class=\"struct\" href=\"libp2p/kad/struct.KBucketKey.html\" title=\"struct libp2p::kad::KBucketKey\">Key</a>&lt;<a class=\"struct\" href=\"libp2p/struct.PeerId.html\" title=\"struct libp2p::PeerId\">PeerId</a>&gt;, <a class=\"struct\" href=\"libp2p/kad/struct.Addresses.html\" title=\"struct libp2p::kad::Addresses\">Addresses</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Removes a peer from the routing table.</p>\n<p>Returns <code>None</code> if the peer was not in the routing table,\nnot even pending insertion.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kbuckets\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_kad/behaviour.rs.html#648-650\">Source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/kad/struct.Behaviour.html#tymethod.kbuckets\" class=\"fn\">kbuckets</a>(\n    &amp;mut self,\n) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"struct\" href=\"libp2p/kad/struct.KBucketRef.html\" title=\"struct libp2p::kad::KBucketRef\">KBucketRef</a>&lt;'_, <a class=\"struct\" href=\"libp2p/kad/struct.KBucketKey.html\" title=\"struct libp2p::kad::KBucketKey\">Key</a>&lt;<a class=\"struct\" href=\"libp2p/struct.PeerId.html\" title=\"struct libp2p::PeerId\">PeerId</a>&gt;, <a class=\"struct\" href=\"libp2p/kad/struct.Addresses.html\" title=\"struct libp2p::kad::Addresses\">Addresses</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns an iterator over all non-empty buckets in the routing table.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kbucket\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_kad/behaviour.rs.html#657-662\">Source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/kad/struct.Behaviour.html#tymethod.kbucket\" class=\"fn\">kbucket</a>&lt;K&gt;(\n    &amp;mut self,\n    key: K,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"libp2p/kad/struct.KBucketRef.html\" title=\"struct libp2p::kad::KBucketRef\">KBucketRef</a>&lt;'_, <a class=\"struct\" href=\"libp2p/kad/struct.KBucketKey.html\" title=\"struct libp2p::kad::KBucketKey\">Key</a>&lt;<a class=\"struct\" href=\"libp2p/struct.PeerId.html\" title=\"struct libp2p::PeerId\">PeerId</a>&gt;, <a class=\"struct\" href=\"libp2p/kad/struct.Addresses.html\" title=\"struct libp2p::kad::Addresses\">Addresses</a>&gt;&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"libp2p/kad/struct.KBucketKey.html\" title=\"struct libp2p::kad::KBucketKey\">Key</a>&lt;K&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns the k-bucket for the distance to the given key.</p>\n<p>Returns <code>None</code> if the given key refers to the local key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_closest_peers\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_kad/behaviour.rs.html#671-673\">Source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/kad/struct.Behaviour.html#tymethod.get_closest_peers\" class=\"fn\">get_closest_peers</a>&lt;K&gt;(&amp;mut self, key: K) -&gt; <a class=\"struct\" href=\"libp2p/kad/struct.QueryId.html\" title=\"struct libp2p::kad::QueryId\">QueryId</a><div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"libp2p/kad/struct.KBucketKey.html\" title=\"struct libp2p::kad::KBucketKey\">Key</a>&lt;K&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Initiates an iterative query for the closest peers to the given key.</p>\n<p>The result of the query is delivered in a\n[<code>Event::OutboundQueryProgressed{QueryResult::GetClosestPeers}</code>].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_closest_local_peers\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_kad/behaviour.rs.html#687-690\">Source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/kad/struct.Behaviour.html#tymethod.get_closest_local_peers\" class=\"fn\">get_closest_local_peers</a>&lt;'a, K&gt;(\n    &amp;'a mut self,\n    key: &amp;'a <a class=\"struct\" href=\"libp2p/kad/struct.KBucketKey.html\" title=\"struct libp2p::kad::KBucketKey\">Key</a>&lt;K&gt;,\n) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"struct\" href=\"libp2p/kad/struct.KBucketKey.html\" title=\"struct libp2p::kad::KBucketKey\">Key</a>&lt;<a class=\"struct\" href=\"libp2p/struct.PeerId.html\" title=\"struct libp2p::PeerId\">PeerId</a>&gt;&gt; + 'a<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns closest peers to the given key; takes peers from local routing table only.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_record\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_kad/behaviour.rs.html#698\">Source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/kad/struct.Behaviour.html#tymethod.get_record\" class=\"fn\">get_record</a>(&amp;mut self, key: <a class=\"struct\" href=\"libp2p/kad/struct.RecordKey.html\" title=\"struct libp2p::kad::RecordKey\">Key</a>) -&gt; <a class=\"struct\" href=\"libp2p/kad/struct.QueryId.html\" title=\"struct libp2p::kad::QueryId\">QueryId</a></h4></section></summary><div class=\"docblock\"><p>Performs a lookup for a record in the DHT.</p>\n<p>The result of this operation is delivered in a\n[<code>Event::OutboundQueryProgressed{QueryResult::GetRecord}</code>].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_record\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_kad/behaviour.rs.html#769-773\">Source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/kad/struct.Behaviour.html#tymethod.put_record\" class=\"fn\">put_record</a>(\n    &amp;mut self,\n    record: <a class=\"struct\" href=\"libp2p/kad/struct.Record.html\" title=\"struct libp2p::kad::Record\">Record</a>,\n    quorum: <a class=\"enum\" href=\"libp2p/kad/enum.Quorum.html\" title=\"enum libp2p::kad::Quorum\">Quorum</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"libp2p/kad/struct.QueryId.html\" title=\"struct libp2p::kad::QueryId\">QueryId</a>, <a class=\"enum\" href=\"libp2p/kad/record/store/enum.Error.html\" title=\"enum libp2p::kad::record::store::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Stores a record in the DHT, locally as well as at the nodes\nclosest to the key as per the xor distance metric.</p>\n<p>Returns <code>Ok</code> if a record has been stored locally, providing the\n<code>QueryId</code> of the initial query that replicates the record in the DHT.\nThe result of the query is eventually reported as a\n[<code>Event::OutboundQueryProgressed{QueryResult::PutRecord}</code>].</p>\n<p>The record is always stored locally with the given expiration. If the recordโs\nexpiration is <code>None</code>, the common case, it does not expire in local storage\nbut is still replicated with the configured record TTL. To remove the record\nlocally and stop it from being re-published in the DHT, see <a href=\"libp2p/kad/struct.Behaviour.html#method.remove_record\" title=\"method libp2p::kad::Behaviour::remove_record\"><code>Behaviour::remove_record</code></a>.</p>\n<p>After the initial publication of the record, it is subject to (re-)replication\nand (re-)publication as per the configured intervals. Periodic (re-)publication\ndoes not update the recordโs expiration in local storage, thus a given record\nwith an explicit expiration will always expire at that instant and until then\nis subject to regular (re-)replication and (re-)publication.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put_record_to\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_kad/behaviour.rs.html#810-812\">Source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/kad/struct.Behaviour.html#tymethod.put_record_to\" class=\"fn\">put_record_to</a>&lt;I&gt;(\n    &amp;mut self,\n    record: <a class=\"struct\" href=\"libp2p/kad/struct.Record.html\" title=\"struct libp2p::kad::Record\">Record</a>,\n    peers: I,\n    quorum: <a class=\"enum\" href=\"libp2p/kad/enum.Quorum.html\" title=\"enum libp2p::kad::Quorum\">Quorum</a>,\n) -&gt; <a class=\"struct\" href=\"libp2p/kad/struct.QueryId.html\" title=\"struct libp2p::kad::QueryId\">QueryId</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/exact_size/trait.ExactSizeIterator.html\" title=\"trait core::iter::traits::exact_size::ExactSizeIterator\">ExactSizeIterator</a>&lt;Item = <a class=\"struct\" href=\"libp2p/struct.PeerId.html\" title=\"struct libp2p::PeerId\">PeerId</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Stores a record at specific peers, without storing it locally.</p>\n<p>The given <a href=\"libp2p/kad/enum.Quorum.html\" title=\"enum libp2p::kad::Quorum\"><code>Quorum</code></a> is understood in the context of the total\nnumber of distinct peers given.</p>\n<p>If the recordโs expiration is <code>None</code>, the configured record TTL is used.</p>\n<blockquote>\n<p><strong>Note</strong>: This is not a regular Kademlia DHT operation. It needs to be\nused to selectively update or store a record to specific peers\nfor the purpose of e.g. making sure these peers have the latest\nโversionโ of a record or to โcacheโ a record at further peers\nto increase the lookup success rate on the DHT for other peers.</p>\n<p>In particular, there is no automatic storing of records performed, and this\nmethod must be used to ensure the standard Kademlia\nprocedure of โcachingโ (i.e. storing) a found record at the closest\nnode to the key that <em>did not</em> return it.</p>\n</blockquote>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_record\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_kad/behaviour.rs.html#848\">Source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/kad/struct.Behaviour.html#tymethod.remove_record\" class=\"fn\">remove_record</a>(&amp;mut self, key: &amp;<a class=\"struct\" href=\"libp2p/kad/struct.RecordKey.html\" title=\"struct libp2p::kad::RecordKey\">Key</a>)</h4></section></summary><div class=\"docblock\"><p>Removes the record with the given key from <em>local</em> storage,\nif the local node is the publisher of the record.</p>\n<p>Has no effect if a record for the given key is stored locally but\nthe local node is not a publisher of the record.</p>\n<p>This is a <em>local</em> operation. However, it also has the effect that\nthe record will no longer be periodically re-published, allowing the\nrecord to eventually expire throughout the DHT.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.store_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_kad/behaviour.rs.html#857\">Source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/kad/struct.Behaviour.html#tymethod.store_mut\" class=\"fn\">store_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;mut TStore</a></h4></section></summary><div class=\"docblock\"><p>Gets a mutable reference to the record store.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bootstrap\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_kad/behaviour.rs.html#880\">Source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/kad/struct.Behaviour.html#tymethod.bootstrap\" class=\"fn\">bootstrap</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"libp2p/kad/struct.QueryId.html\" title=\"struct libp2p::kad::QueryId\">QueryId</a>, <a class=\"struct\" href=\"libp2p/kad/struct.NoKnownPeers.html\" title=\"struct libp2p::kad::NoKnownPeers\">NoKnownPeers</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Bootstraps the local node to join the DHT.</p>\n<p>Bootstrapping is a multi-step operation that starts with a lookup of the local nodeโs\nown ID in the DHT. This introduces the local node to the other nodes\nin the DHT and populates its routing table with the closest neighbours.</p>\n<p>Subsequently, all buckets farther from the bucket of the closest neighbour are\nrefreshed by initiating an additional bootstrapping query for each such\nbucket with random keys.</p>\n<p>Returns <code>Ok</code> if bootstrapping has been initiated with a self-lookup, providing the\n<code>QueryId</code> for the entire bootstrapping process. The progress of bootstrapping is\nreported via [<code>Event::OutboundQueryProgressed{QueryResult::Bootstrap}</code>] events,\nwith one such event per bootstrapping query.</p>\n<p>Returns <code>Err</code> if bootstrapping is impossible due an empty routing table.</p>\n<blockquote>\n<p><strong>Note</strong>: Bootstrapping requires at least one node of the DHT to be known.\nSee <a href=\"libp2p/kad/struct.Behaviour.html#method.add_address\" title=\"method libp2p::kad::Behaviour::add_address\"><code>Behaviour::add_address</code></a>.</p>\n</blockquote>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.start_providing\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_kad/behaviour.rs.html#918\">Source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/kad/struct.Behaviour.html#tymethod.start_providing\" class=\"fn\">start_providing</a>(&amp;mut self, key: <a class=\"struct\" href=\"libp2p/kad/struct.RecordKey.html\" title=\"struct libp2p::kad::RecordKey\">Key</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"libp2p/kad/struct.QueryId.html\" title=\"struct libp2p::kad::QueryId\">QueryId</a>, <a class=\"enum\" href=\"libp2p/kad/record/store/enum.Error.html\" title=\"enum libp2p::kad::record::store::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Establishes the local node as a provider of a value for the given key.</p>\n<p>This operation publishes a provider record with the given key and\nidentity of the local node to the peers closest to the key, thus establishing\nthe local node as a provider.</p>\n<p>Returns <code>Ok</code> if a provider record has been stored locally, providing the\n<code>QueryId</code> of the initial query that announces the local node as a provider.</p>\n<p>The publication of the provider records is periodically repeated as per the\nconfigured interval, to renew the expiry and account for changes to the DHT\ntopology. A provider record may be removed from local storage and\nthus no longer re-published by calling <a href=\"libp2p/kad/struct.Behaviour.html#method.stop_providing\" title=\"method libp2p::kad::Behaviour::stop_providing\"><code>Behaviour::stop_providing</code></a>.</p>\n<p>In contrast to the standard Kademlia push-based model for content distribution\nimplemented by <a href=\"libp2p/kad/struct.Behaviour.html#method.put_record\" title=\"method libp2p::kad::Behaviour::put_record\"><code>Behaviour::put_record</code></a>, the provider API implements a\npull-based model that may be used in addition or as an alternative.\nThe means by which the actual value is obtained from a provider is out of scope\nof the libp2p Kademlia provider API.</p>\n<p>The results of the (repeated) provider announcements sent by this node are\nreported via [<code>Event::OutboundQueryProgressed{QueryResult::StartProviding}</code>].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.stop_providing\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_kad/behaviour.rs.html#946\">Source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/kad/struct.Behaviour.html#tymethod.stop_providing\" class=\"fn\">stop_providing</a>(&amp;mut self, key: &amp;<a class=\"struct\" href=\"libp2p/kad/struct.RecordKey.html\" title=\"struct libp2p::kad::RecordKey\">Key</a>)</h4></section></summary><div class=\"docblock\"><p>Stops the local node from announcing that it is a provider for the given key.</p>\n<p>This is a local operation. The local node will still be considered as a\nprovider for the key by other nodes until these provider records expire.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_providers\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_kad/behaviour.rs.html#955\">Source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/kad/struct.Behaviour.html#tymethod.get_providers\" class=\"fn\">get_providers</a>(&amp;mut self, key: <a class=\"struct\" href=\"libp2p/kad/struct.RecordKey.html\" title=\"struct libp2p::kad::RecordKey\">Key</a>) -&gt; <a class=\"struct\" href=\"libp2p/kad/struct.QueryId.html\" title=\"struct libp2p::kad::QueryId\">QueryId</a></h4></section></summary><div class=\"docblock\"><p>Performs a lookup for providers of a value to the given key.</p>\n<p>The result of this operation is delivered in a\nreported via [<code>Event::OutboundQueryProgressed{QueryResult::GetProviders}</code>].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_mode\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_kad/behaviour.rs.html#1005\">Source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/kad/struct.Behaviour.html#tymethod.set_mode\" class=\"fn\">set_mode</a>(&amp;mut self, mode: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"libp2p/kad/enum.Mode.html\" title=\"enum libp2p::kad::Mode\">Mode</a>&gt;)</h4></section></summary><div class=\"docblock\"><p>Set the <a href=\"libp2p/kad/enum.Mode.html\" title=\"enum libp2p::kad::Mode\"><code>Mode</code></a> in which we should operate.</p>\n<p>By default, we are in <a href=\"libp2p/kad/enum.Mode.html#variant.Client\" title=\"variant libp2p::kad::Mode::Client\"><code>Mode::Client</code></a> and will swap into <a href=\"libp2p/kad/enum.Mode.html#variant.Server\" title=\"variant libp2p::kad::Mode::Server\"><code>Mode::Server</code></a> as soon as we have a confirmed, external address via <a href=\"libp2p/swarm/enum.FromSwarm.html#variant.ExternalAddrConfirmed\" title=\"variant libp2p::swarm::FromSwarm::ExternalAddrConfirmed\"><code>FromSwarm::ExternalAddrConfirmed</code></a>.</p>\n<p>Setting a mode via this function disables this automatic behaviour and unconditionally operates in the specified mode.\nTo reactivate the automatic configuration, pass <a href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> instead.</p>\n</div></details></div></details>",0,"libp2p::kad::Kademlia"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NetworkBehaviour-for-Behaviour%3CTStore%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/libp2p_kad/behaviour.rs.html#2056-2058\">Source</a><a href=\"#impl-NetworkBehaviour-for-Behaviour%3CTStore%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;TStore&gt; <a class=\"trait\" href=\"libp2p/swarm/trait.NetworkBehaviour.html\" title=\"trait libp2p::swarm::NetworkBehaviour\">NetworkBehaviour</a> for <a class=\"struct\" href=\"libp2p/kad/struct.Behaviour.html\" title=\"struct libp2p::kad::Behaviour\">Behaviour</a>&lt;TStore&gt;<div class=\"where\">where\n    TStore: <a class=\"trait\" href=\"libp2p/kad/record/store/trait.RecordStore.html\" title=\"trait libp2p::kad::record::store::RecordStore\">RecordStore</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.ConnectionHandler\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_kad/behaviour.rs.html#2060\">Source</a><a href=\"#associatedtype.ConnectionHandler\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#associatedtype.ConnectionHandler\" class=\"associatedtype\">ConnectionHandler</a> = Handler</h4></section></summary><div class='docblock'>Handler for all the protocols the network behaviour supports.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.ToSwarm\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_kad/behaviour.rs.html#2061\">Source</a><a href=\"#associatedtype.ToSwarm\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#associatedtype.ToSwarm\" class=\"associatedtype\">ToSwarm</a> = <a class=\"enum\" href=\"libp2p/kad/enum.Event.html\" title=\"enum libp2p::kad::Event\">Event</a></h4></section></summary><div class='docblock'>Event generated by the <code>NetworkBehaviour</code> and that the swarm will report back.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.handle_established_inbound_connection\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_kad/behaviour.rs.html#2063-2069\">Source</a><a href=\"#method.handle_established_inbound_connection\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#tymethod.handle_established_inbound_connection\" class=\"fn\">handle_established_inbound_connection</a>(\n    &amp;mut self,\n    connection_id: <a class=\"struct\" href=\"libp2p/swarm/struct.ConnectionId.html\" title=\"struct libp2p::swarm::ConnectionId\">ConnectionId</a>,\n    peer: <a class=\"struct\" href=\"libp2p/struct.PeerId.html\" title=\"struct libp2p::PeerId\">PeerId</a>,\n    local_addr: &amp;<a class=\"struct\" href=\"libp2p/struct.Multiaddr.html\" title=\"struct libp2p::Multiaddr\">Multiaddr</a>,\n    remote_addr: &amp;<a class=\"struct\" href=\"libp2p/struct.Multiaddr.html\" title=\"struct libp2p::Multiaddr\">Multiaddr</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;<a class=\"struct\" href=\"libp2p/kad/struct.Behaviour.html\" title=\"struct libp2p::kad::Behaviour\">Behaviour</a>&lt;TStore&gt; as <a class=\"trait\" href=\"libp2p/swarm/trait.NetworkBehaviour.html\" title=\"trait libp2p::swarm::NetworkBehaviour\">NetworkBehaviour</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/swarm/trait.NetworkBehaviour.html#associatedtype.ConnectionHandler\" title=\"type libp2p::swarm::NetworkBehaviour::ConnectionHandler\">ConnectionHandler</a>, <a class=\"struct\" href=\"libp2p/swarm/struct.ConnectionDenied.html\" title=\"struct libp2p::swarm::ConnectionDenied\">ConnectionDenied</a>&gt;</h4></section></summary><div class='docblock'>Callback that is invoked for every established inbound connection. <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#tymethod.handle_established_inbound_connection\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.handle_established_outbound_connection\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_kad/behaviour.rs.html#2087-2093\">Source</a><a href=\"#method.handle_established_outbound_connection\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#tymethod.handle_established_outbound_connection\" class=\"fn\">handle_established_outbound_connection</a>(\n    &amp;mut self,\n    connection_id: <a class=\"struct\" href=\"libp2p/swarm/struct.ConnectionId.html\" title=\"struct libp2p::swarm::ConnectionId\">ConnectionId</a>,\n    peer: <a class=\"struct\" href=\"libp2p/struct.PeerId.html\" title=\"struct libp2p::PeerId\">PeerId</a>,\n    addr: &amp;<a class=\"struct\" href=\"libp2p/struct.Multiaddr.html\" title=\"struct libp2p::Multiaddr\">Multiaddr</a>,\n    role_override: <a class=\"enum\" href=\"libp2p/core/enum.Endpoint.html\" title=\"enum libp2p::core::Endpoint\">Endpoint</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;<a class=\"struct\" href=\"libp2p/kad/struct.Behaviour.html\" title=\"struct libp2p::kad::Behaviour\">Behaviour</a>&lt;TStore&gt; as <a class=\"trait\" href=\"libp2p/swarm/trait.NetworkBehaviour.html\" title=\"trait libp2p::swarm::NetworkBehaviour\">NetworkBehaviour</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/swarm/trait.NetworkBehaviour.html#associatedtype.ConnectionHandler\" title=\"type libp2p::swarm::NetworkBehaviour::ConnectionHandler\">ConnectionHandler</a>, <a class=\"struct\" href=\"libp2p/swarm/struct.ConnectionDenied.html\" title=\"struct libp2p::swarm::ConnectionDenied\">ConnectionDenied</a>&gt;</h4></section></summary><div class='docblock'>Callback that is invoked for every established outbound connection. <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#tymethod.handle_established_outbound_connection\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.handle_pending_outbound_connection\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_kad/behaviour.rs.html#2111-2117\">Source</a><a href=\"#method.handle_pending_outbound_connection\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#method.handle_pending_outbound_connection\" class=\"fn\">handle_pending_outbound_connection</a>(\n    &amp;mut self,\n    _connection_id: <a class=\"struct\" href=\"libp2p/swarm/struct.ConnectionId.html\" title=\"struct libp2p::swarm::ConnectionId\">ConnectionId</a>,\n    maybe_peer: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"libp2p/struct.PeerId.html\" title=\"struct libp2p::PeerId\">PeerId</a>&gt;,\n    _addresses: &amp;[<a class=\"struct\" href=\"libp2p/struct.Multiaddr.html\" title=\"struct libp2p::Multiaddr\">Multiaddr</a>],\n    _effective_role: <a class=\"enum\" href=\"libp2p/core/enum.Endpoint.html\" title=\"enum libp2p::core::Endpoint\">Endpoint</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"libp2p/struct.Multiaddr.html\" title=\"struct libp2p::Multiaddr\">Multiaddr</a>&gt;, <a class=\"struct\" href=\"libp2p/swarm/struct.ConnectionDenied.html\" title=\"struct libp2p::swarm::ConnectionDenied\">ConnectionDenied</a>&gt;</h4></section></summary><div class='docblock'>Callback that is invoked for every outbound connection attempt. <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#method.handle_pending_outbound_connection\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_connection_handler_event\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_kad/behaviour.rs.html#2145-2150\">Source</a><a href=\"#method.on_connection_handler_event\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#tymethod.on_connection_handler_event\" class=\"fn\">on_connection_handler_event</a>(\n    &amp;mut self,\n    source: <a class=\"struct\" href=\"libp2p/struct.PeerId.html\" title=\"struct libp2p::PeerId\">PeerId</a>,\n    connection: <a class=\"struct\" href=\"libp2p/swarm/struct.ConnectionId.html\" title=\"struct libp2p::swarm::ConnectionId\">ConnectionId</a>,\n    event: &lt;&lt;<a class=\"struct\" href=\"libp2p/kad/struct.Behaviour.html\" title=\"struct libp2p::kad::Behaviour\">Behaviour</a>&lt;TStore&gt; as <a class=\"trait\" href=\"libp2p/swarm/trait.NetworkBehaviour.html\" title=\"trait libp2p::swarm::NetworkBehaviour\">NetworkBehaviour</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/swarm/trait.NetworkBehaviour.html#associatedtype.ConnectionHandler\" title=\"type libp2p::swarm::NetworkBehaviour::ConnectionHandler\">ConnectionHandler</a> as <a class=\"trait\" href=\"libp2p/swarm/trait.ConnectionHandler.html\" title=\"trait libp2p::swarm::ConnectionHandler\">ConnectionHandler</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/swarm/trait.ConnectionHandler.html#associatedtype.ToBehaviour\" title=\"type libp2p::swarm::ConnectionHandler::ToBehaviour\">ToBehaviour</a>,\n)</h4></section></summary><div class='docblock'>Informs the behaviour about an event generated by the <a href=\"libp2p/swarm/trait.ConnectionHandler.html\" title=\"trait libp2p::swarm::ConnectionHandler\"><code>ConnectionHandler</code></a>\ndedicated to the peer identified by <code>peer_id</code>. for the behaviour. <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#tymethod.on_connection_handler_event\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_kad/behaviour.rs.html#2410-2414\">Source</a><a href=\"#method.poll\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#tymethod.poll\" class=\"fn\">poll</a>(\n    &amp;mut self,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n    _: &amp;mut impl <a class=\"trait\" href=\"libp2p/swarm/trait.PollParameters.html\" title=\"trait libp2p::swarm::PollParameters\">PollParameters</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"libp2p/swarm/enum.ToSwarm.html\" title=\"enum libp2p::swarm::ToSwarm\">ToSwarm</a>&lt;&lt;<a class=\"struct\" href=\"libp2p/kad/struct.Behaviour.html\" title=\"struct libp2p::kad::Behaviour\">Behaviour</a>&lt;TStore&gt; as <a class=\"trait\" href=\"libp2p/swarm/trait.NetworkBehaviour.html\" title=\"trait libp2p::swarm::NetworkBehaviour\">NetworkBehaviour</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/swarm/trait.NetworkBehaviour.html#associatedtype.ToSwarm\" title=\"type libp2p::swarm::NetworkBehaviour::ToSwarm\">ToSwarm</a>, &lt;&lt;<a class=\"struct\" href=\"libp2p/kad/struct.Behaviour.html\" title=\"struct libp2p::kad::Behaviour\">Behaviour</a>&lt;TStore&gt; as <a class=\"trait\" href=\"libp2p/swarm/trait.NetworkBehaviour.html\" title=\"trait libp2p::swarm::NetworkBehaviour\">NetworkBehaviour</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/swarm/trait.NetworkBehaviour.html#associatedtype.ConnectionHandler\" title=\"type libp2p::swarm::NetworkBehaviour::ConnectionHandler\">ConnectionHandler</a> as <a class=\"trait\" href=\"libp2p/swarm/trait.ConnectionHandler.html\" title=\"trait libp2p::swarm::ConnectionHandler\">ConnectionHandler</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/swarm/trait.ConnectionHandler.html#associatedtype.FromBehaviour\" title=\"type libp2p::swarm::ConnectionHandler::FromBehaviour\">FromBehaviour</a>&gt;&gt;</h4></section></summary><div class='docblock'>Polls for things that swarm should do. <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#tymethod.poll\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_swarm_event\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_kad/behaviour.rs.html#2534\">Source</a><a href=\"#method.on_swarm_event\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#tymethod.on_swarm_event\" class=\"fn\">on_swarm_event</a>(\n    &amp;mut self,\n    event: <a class=\"enum\" href=\"libp2p/swarm/enum.FromSwarm.html\" title=\"enum libp2p::swarm::FromSwarm\">FromSwarm</a>&lt;'_, &lt;<a class=\"struct\" href=\"libp2p/kad/struct.Behaviour.html\" title=\"struct libp2p::kad::Behaviour\">Behaviour</a>&lt;TStore&gt; as <a class=\"trait\" href=\"libp2p/swarm/trait.NetworkBehaviour.html\" title=\"trait libp2p::swarm::NetworkBehaviour\">NetworkBehaviour</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/swarm/trait.NetworkBehaviour.html#associatedtype.ConnectionHandler\" title=\"type libp2p::swarm::NetworkBehaviour::ConnectionHandler\">ConnectionHandler</a>&gt;,\n)</h4></section></summary><div class='docblock'>Informs the behaviour about an event from the <a href=\"libp2p/struct.Swarm.html\" title=\"struct libp2p::Swarm\"><code>Swarm</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.handle_pending_inbound_connection\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_swarm/behaviour.rs.html#133-138\">Source</a><a href=\"#method.handle_pending_inbound_connection\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#method.handle_pending_inbound_connection\" class=\"fn\">handle_pending_inbound_connection</a>(\n    &amp;mut self,\n    _connection_id: <a class=\"struct\" href=\"libp2p/swarm/struct.ConnectionId.html\" title=\"struct libp2p::swarm::ConnectionId\">ConnectionId</a>,\n    _local_addr: &amp;<a class=\"struct\" href=\"libp2p/struct.Multiaddr.html\" title=\"struct libp2p::Multiaddr\">Multiaddr</a>,\n    _remote_addr: &amp;<a class=\"struct\" href=\"libp2p/struct.Multiaddr.html\" title=\"struct libp2p::Multiaddr\">Multiaddr</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"libp2p/swarm/struct.ConnectionDenied.html\" title=\"struct libp2p::swarm::ConnectionDenied\">ConnectionDenied</a>&gt;</h4></section></summary><div class='docblock'>Callback that is invoked for every new inbound connection. <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#method.handle_pending_inbound_connection\">Read more</a></div></details></div></details>","NetworkBehaviour","libp2p::kad::Kademlia"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[46638]}