(function() {
    var type_impls = Object.fromEntries([["libp2p_dns",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Transport%3CT,+AsyncResolver%3CGenericConnector%3CTokioRuntimeProvider%3E%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/libp2p_dns/lib.rs.html#109-129\">Source</a><a href=\"#impl-Transport%3CT,+AsyncResolver%3CGenericConnector%3CTokioRuntimeProvider%3E%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"type\" href=\"libp2p_dns/tokio/type.Transport.html\" title=\"type libp2p_dns::tokio::Transport\">Transport</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.system\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_dns/lib.rs.html#111-114\">Source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p_dns/tokio/type.Transport.html#tymethod.system\" class=\"fn\">system</a>(inner: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"libp2p_dns/struct.Transport.html\" title=\"struct libp2p_dns::Transport\">Transport</a>&lt;T, <a class=\"type\" href=\"trust_dns_resolver/async_resolver/type.TokioAsyncResolver.html\" title=\"type trust_dns_resolver::async_resolver::TokioAsyncResolver\">TokioAsyncResolver</a>&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a new <a href=\"libp2p_dns/tokio/type.Transport.html\" title=\"type libp2p_dns::tokio::Transport\"><code>Transport</code></a> from the OS’s DNS configuration and defaults.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.custom\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_dns/lib.rs.html#118-128\">Source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p_dns/tokio/type.Transport.html#tymethod.custom\" class=\"fn\">custom</a>(\n    inner: T,\n    cfg: <a class=\"struct\" href=\"libp2p_dns/struct.ResolverConfig.html\" title=\"struct libp2p_dns::ResolverConfig\">ResolverConfig</a>,\n    opts: <a class=\"struct\" href=\"libp2p_dns/struct.ResolverOpts.html\" title=\"struct libp2p_dns::ResolverOpts\">ResolverOpts</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"libp2p_dns/struct.Transport.html\" title=\"struct libp2p_dns::Transport\">Transport</a>&lt;T, <a class=\"type\" href=\"trust_dns_resolver/async_resolver/type.TokioAsyncResolver.html\" title=\"type trust_dns_resolver::async_resolver::TokioAsyncResolver\">TokioAsyncResolver</a>&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a <a href=\"libp2p_dns/tokio/type.Transport.html\" title=\"type libp2p_dns::tokio::Transport\"><code>Transport</code></a> with a custom resolver configuration\nand options.</p>\n</div></details></div></details>",0,"libp2p_dns::TokioDnsConfig"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[3288]}