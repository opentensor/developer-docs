(function() {
    var type_impls = Object.fromEntries([["trust_dns_resolver",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncResolver%3CGenericConnector%3CTokioRuntimeProvider%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/trust_dns_resolver/async_resolver.rs.html#107-137\">Source</a><a href=\"#impl-AsyncResolver%3CGenericConnector%3CTokioRuntimeProvider%3E%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"type\" href=\"trust_dns_resolver/type.TokioAsyncResolver.html\" title=\"type trust_dns_resolver::TokioAsyncResolver\">TokioAsyncResolver</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.tokio\" class=\"method\"><a class=\"src rightside\" href=\"src/trust_dns_resolver/async_resolver.rs.html#121-123\">Source</a><h4 class=\"code-header\">pub fn <a href=\"trust_dns_resolver/type.TokioAsyncResolver.html#tymethod.tokio\" class=\"fn\">tokio</a>(config: <a class=\"struct\" href=\"trust_dns_resolver/config/struct.ResolverConfig.html\" title=\"struct trust_dns_resolver::config::ResolverConfig\">ResolverConfig</a>, options: <a class=\"struct\" href=\"trust_dns_resolver/config/struct.ResolverOpts.html\" title=\"struct trust_dns_resolver::config::ResolverOpts\">ResolverOpts</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Construct a new Tokio based <code>AsyncResolver</code> with the provided configuration.</p>\n<h5 id=\"arguments\"><a class=\"doc-anchor\" href=\"#arguments\">ยง</a>Arguments</h5>\n<ul>\n<li><code>config</code> - configuration, name_servers, etc. for the Resolver</li>\n<li><code>options</code> - basic lookup options for the resolver</li>\n</ul>\n<h5 id=\"returns\"><a class=\"doc-anchor\" href=\"#returns\">ยง</a>Returns</h5>\n<p>A tuple containing the new <code>AsyncResolver</code> and a future that drives the\nbackground task that runs resolutions for the <code>AsyncResolver</code>. See the\ndocumentation for <code>AsyncResolver</code> for more information on how to use\nthe background future.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tokio_from_system_conf\" class=\"method\"><a class=\"src rightside\" href=\"src/trust_dns_resolver/async_resolver.rs.html#134-136\">Source</a><h4 class=\"code-header\">pub fn <a href=\"trust_dns_resolver/type.TokioAsyncResolver.html#tymethod.tokio_from_system_conf\" class=\"fn\">tokio_from_system_conf</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"trust_dns_resolver/error/struct.ResolveError.html\" title=\"struct trust_dns_resolver::error::ResolveError\">ResolveError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs a new Tokio based Resolver with the system configuration.</p>\n<p>This will use <code>/etc/resolv.conf</code> on Unix OSes and the registry on Windows.</p>\n</div></details></div></details>",0,"trust_dns_resolver::ResolverFuture"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[3056]}