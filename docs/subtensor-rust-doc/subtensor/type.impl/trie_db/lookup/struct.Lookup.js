(function() {
    var type_impls = Object.fromEntries([["sp_trie",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Lookup%3C'a,+'cache,+L,+Q%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/trie_db/lookup.rs.html#41-44\">Source</a><a href=\"#impl-Lookup%3C'a,+'cache,+L,+Q%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'a, 'cache, L, Q&gt; <a class=\"struct\" href=\"trie_db/lookup/struct.Lookup.html\" title=\"struct trie_db::lookup::Lookup\">Lookup</a>&lt;'a, 'cache, L, Q&gt;<div class=\"where\">where\n    L: <a class=\"trait\" href=\"sp_trie/trait.TrieLayout.html\" title=\"trait sp_trie::TrieLayout\">TrieLayout</a>,\n    Q: <a class=\"trait\" href=\"sp_trie/trait.Query.html\" title=\"trait sp_trie::Query\">Query</a>&lt;&lt;L as <a class=\"trait\" href=\"sp_trie/trait.TrieLayout.html\" title=\"trait sp_trie::TrieLayout\">TrieLayout</a>&gt;::<a class=\"associatedtype\" href=\"sp_trie/trait.TrieLayout.html#associatedtype.Hash\" title=\"type sp_trie::TrieLayout::Hash\">Hash</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lookup_first_descendant\" class=\"method\"><a class=\"src rightside\" href=\"src/trie_db/lookup.rs.html#154-158\">Source</a><h4 class=\"code-header\">pub fn <a href=\"trie_db/lookup/struct.Lookup.html#tymethod.lookup_first_descendant\" class=\"fn\">lookup_first_descendant</a>(\n    self,\n    full_key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>],\n    nibble_key: <a class=\"struct\" href=\"trie_db/nibble/struct.NibbleSlice.html\" title=\"struct trie_db::nibble::NibbleSlice\">NibbleSlice</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"sp_trie/enum.MerkleValue.html\" title=\"enum sp_trie::MerkleValue\">MerkleValue</a>&lt;&lt;&lt;L as <a class=\"trait\" href=\"sp_trie/trait.TrieLayout.html\" title=\"trait sp_trie::TrieLayout\">TrieLayout</a>&gt;::<a class=\"associatedtype\" href=\"sp_trie/trait.TrieLayout.html#associatedtype.Hash\" title=\"type sp_trie::TrieLayout::Hash\">Hash</a> as <a class=\"trait\" href=\"hash_db/trait.Hasher.html\" title=\"trait hash_db::Hasher\">Hasher</a>&gt;::<a class=\"associatedtype\" href=\"hash_db/trait.Hasher.html#associatedtype.Out\" title=\"type hash_db::Hasher::Out\">Out</a>&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"enum\" href=\"trie_db/enum.TrieError.html\" title=\"enum trie_db::TrieError\">TrieError</a>&lt;&lt;&lt;L as <a class=\"trait\" href=\"sp_trie/trait.TrieLayout.html\" title=\"trait sp_trie::TrieLayout\">TrieLayout</a>&gt;::<a class=\"associatedtype\" href=\"sp_trie/trait.TrieLayout.html#associatedtype.Hash\" title=\"type sp_trie::TrieLayout::Hash\">Hash</a> as <a class=\"trait\" href=\"hash_db/trait.Hasher.html\" title=\"trait hash_db::Hasher\">Hasher</a>&gt;::<a class=\"associatedtype\" href=\"hash_db/trait.Hasher.html#associatedtype.Out\" title=\"type hash_db::Hasher::Out\">Out</a>, &lt;&lt;L as <a class=\"trait\" href=\"sp_trie/trait.TrieLayout.html\" title=\"trait sp_trie::TrieLayout\">TrieLayout</a>&gt;::<a class=\"associatedtype\" href=\"sp_trie/trait.TrieLayout.html#associatedtype.Codec\" title=\"type sp_trie::TrieLayout::Codec\">Codec</a> as <a class=\"trait\" href=\"trie_db/node_codec/trait.NodeCodec.html\" title=\"trait trie_db::node_codec::NodeCodec\">NodeCodec</a>&gt;::<a class=\"associatedtype\" href=\"trie_db/node_codec/trait.NodeCodec.html#associatedtype.Error\" title=\"type trie_db::node_codec::NodeCodec::Error\">Error</a>&gt;&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Look up the merkle value (hash) of the node that is the closest descendant for the provided\nkey.</p>\n<p>When the provided key leads to a node, then the merkle value (hash) of that node\nis returned. However, if the key does not lead to a node, then the merkle value\nof the closest descendant is returned. <code>None</code> if no such descendant exists.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.look_up\" class=\"method\"><a class=\"src rightside\" href=\"src/trie_db/lookup.rs.html#376-380\">Source</a><h4 class=\"code-header\">pub fn <a href=\"trie_db/lookup/struct.Lookup.html#tymethod.look_up\" class=\"fn\">look_up</a>(\n    self,\n    full_key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>],\n    nibble_key: <a class=\"struct\" href=\"trie_db/nibble/struct.NibbleSlice.html\" title=\"struct trie_db::nibble::NibbleSlice\">NibbleSlice</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;Q as <a class=\"trait\" href=\"sp_trie/trait.Query.html\" title=\"trait sp_trie::Query\">Query</a>&lt;&lt;L as <a class=\"trait\" href=\"sp_trie/trait.TrieLayout.html\" title=\"trait sp_trie::TrieLayout\">TrieLayout</a>&gt;::<a class=\"associatedtype\" href=\"sp_trie/trait.TrieLayout.html#associatedtype.Hash\" title=\"type sp_trie::TrieLayout::Hash\">Hash</a>&gt;&gt;::<a class=\"associatedtype\" href=\"sp_trie/trait.Query.html#associatedtype.Item\" title=\"type sp_trie::Query::Item\">Item</a>&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"enum\" href=\"trie_db/enum.TrieError.html\" title=\"enum trie_db::TrieError\">TrieError</a>&lt;&lt;&lt;L as <a class=\"trait\" href=\"sp_trie/trait.TrieLayout.html\" title=\"trait sp_trie::TrieLayout\">TrieLayout</a>&gt;::<a class=\"associatedtype\" href=\"sp_trie/trait.TrieLayout.html#associatedtype.Hash\" title=\"type sp_trie::TrieLayout::Hash\">Hash</a> as <a class=\"trait\" href=\"hash_db/trait.Hasher.html\" title=\"trait hash_db::Hasher\">Hasher</a>&gt;::<a class=\"associatedtype\" href=\"hash_db/trait.Hasher.html#associatedtype.Out\" title=\"type hash_db::Hasher::Out\">Out</a>, &lt;&lt;L as <a class=\"trait\" href=\"sp_trie/trait.TrieLayout.html\" title=\"trait sp_trie::TrieLayout\">TrieLayout</a>&gt;::<a class=\"associatedtype\" href=\"sp_trie/trait.TrieLayout.html#associatedtype.Codec\" title=\"type sp_trie::TrieLayout::Codec\">Codec</a> as <a class=\"trait\" href=\"trie_db/node_codec/trait.NodeCodec.html\" title=\"trait trie_db::node_codec::NodeCodec\">NodeCodec</a>&gt;::<a class=\"associatedtype\" href=\"trie_db/node_codec/trait.NodeCodec.html#associatedtype.Error\" title=\"type trie_db::node_codec::NodeCodec::Error\">Error</a>&gt;&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Look up the given <code>nibble_key</code>.</p>\n<p>If the value is found, it will be passed to the given function to decode or copy.</p>\n<p>The given <code>full_key</code> should be the full key to the data that is requested. This will\nbe used when there is a cache to potentially speed up the lookup.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.look_up_hash\" class=\"method\"><a class=\"src rightside\" href=\"src/trie_db/lookup.rs.html#391-395\">Source</a><h4 class=\"code-header\">pub fn <a href=\"trie_db/lookup/struct.Lookup.html#tymethod.look_up_hash\" class=\"fn\">look_up_hash</a>(\n    self,\n    full_key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>],\n    nibble_key: <a class=\"struct\" href=\"trie_db/nibble/struct.NibbleSlice.html\" title=\"struct trie_db::nibble::NibbleSlice\">NibbleSlice</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;&lt;L as <a class=\"trait\" href=\"sp_trie/trait.TrieLayout.html\" title=\"trait sp_trie::TrieLayout\">TrieLayout</a>&gt;::<a class=\"associatedtype\" href=\"sp_trie/trait.TrieLayout.html#associatedtype.Hash\" title=\"type sp_trie::TrieLayout::Hash\">Hash</a> as <a class=\"trait\" href=\"hash_db/trait.Hasher.html\" title=\"trait hash_db::Hasher\">Hasher</a>&gt;::<a class=\"associatedtype\" href=\"hash_db/trait.Hasher.html#associatedtype.Out\" title=\"type hash_db::Hasher::Out\">Out</a>&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"enum\" href=\"trie_db/enum.TrieError.html\" title=\"enum trie_db::TrieError\">TrieError</a>&lt;&lt;&lt;L as <a class=\"trait\" href=\"sp_trie/trait.TrieLayout.html\" title=\"trait sp_trie::TrieLayout\">TrieLayout</a>&gt;::<a class=\"associatedtype\" href=\"sp_trie/trait.TrieLayout.html#associatedtype.Hash\" title=\"type sp_trie::TrieLayout::Hash\">Hash</a> as <a class=\"trait\" href=\"hash_db/trait.Hasher.html\" title=\"trait hash_db::Hasher\">Hasher</a>&gt;::<a class=\"associatedtype\" href=\"hash_db/trait.Hasher.html#associatedtype.Out\" title=\"type hash_db::Hasher::Out\">Out</a>, &lt;&lt;L as <a class=\"trait\" href=\"sp_trie/trait.TrieLayout.html\" title=\"trait sp_trie::TrieLayout\">TrieLayout</a>&gt;::<a class=\"associatedtype\" href=\"sp_trie/trait.TrieLayout.html#associatedtype.Codec\" title=\"type sp_trie::TrieLayout::Codec\">Codec</a> as <a class=\"trait\" href=\"trie_db/node_codec/trait.NodeCodec.html\" title=\"trait trie_db::node_codec::NodeCodec\">NodeCodec</a>&gt;::<a class=\"associatedtype\" href=\"trie_db/node_codec/trait.NodeCodec.html#associatedtype.Error\" title=\"type trie_db::node_codec::NodeCodec::Error\">Error</a>&gt;&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Look up the value hash for the given <code>nibble_key</code>.</p>\n<p>The given <code>full_key</code> should be the full key to the data that is requested. This will\nbe used when there is a cache to potentially speed up the lookup.</p>\n</div></details></div></details>",0,"sp_trie::trie_types::Lookup","sp_trie::Lookup"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[10496]}