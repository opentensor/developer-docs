(function() {
    var type_impls = Object.fromEntries([["trust_dns_proto",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Peekable%3CSt%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/futures_util/stream/stream/peek.rs.html#20\">Source</a><a href=\"#impl-Debug-for-Peekable%3CSt%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;St&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"futures_util/stream/stream/peek/struct.Peekable.html\" title=\"struct futures_util::stream::stream::peek::Peekable\">Peekable</a>&lt;St&gt;<div class=\"where\">where\n    St: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"futures_core/stream/trait.Stream.html\" title=\"trait futures_core::stream::Stream\">Stream</a>,\n    &lt;St as <a class=\"trait\" href=\"futures_core/stream/trait.Stream.html\" title=\"trait futures_core::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"futures_core/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_core::stream::Stream::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_util/stream/stream/peek.rs.html#20\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","trust_dns_proto::xfer::StreamReceiver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FusedStream-for-Peekable%3CSt%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/futures_util/stream/stream/peek.rs.html#189\">Source</a><a href=\"#impl-FusedStream-for-Peekable%3CSt%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;St&gt; <a class=\"trait\" href=\"futures_core/stream/trait.FusedStream.html\" title=\"trait futures_core::stream::FusedStream\">FusedStream</a> for <a class=\"struct\" href=\"futures_util/stream/stream/peek/struct.Peekable.html\" title=\"struct futures_util::stream::stream::peek::Peekable\">Peekable</a>&lt;St&gt;<div class=\"where\">where\n    St: <a class=\"trait\" href=\"futures_core/stream/trait.Stream.html\" title=\"trait futures_core::stream::Stream\">Stream</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_terminated\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_util/stream/stream/peek.rs.html#190\">Source</a><a href=\"#method.is_terminated\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"futures_core/stream/trait.FusedStream.html#tymethod.is_terminated\" class=\"fn\">is_terminated</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if the stream should no longer be polled.</div></details></div></details>","FusedStream","trust_dns_proto::xfer::StreamReceiver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Peekable%3CSt%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/futures_util/stream/stream/peek.rs.html#29\">Source</a><a href=\"#impl-Peekable%3CSt%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;St&gt; <a class=\"struct\" href=\"futures_util/stream/stream/peek/struct.Peekable.html\" title=\"struct futures_util::stream::stream::peek::Peekable\">Peekable</a>&lt;St&gt;<div class=\"where\">where\n    St: <a class=\"trait\" href=\"futures_core/stream/trait.Stream.html\" title=\"trait futures_core::stream::Stream\">Stream</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_ref\" class=\"method\"><a class=\"src rightside\" href=\"src/futures_util/stream/stream/peek.rs.html#34\">Source</a><h4 class=\"code-header\">pub fn <a href=\"futures_util/stream/stream/peek/struct.Peekable.html#tymethod.get_ref\" class=\"fn\">get_ref</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;St</a></h4></section></summary><div class=\"docblock\"><p>Acquires a reference to the underlying sink or stream that this combinator is\npulling from.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/futures_util/stream/stream/peek.rs.html#34\">Source</a><h4 class=\"code-header\">pub fn <a href=\"futures_util/stream/stream/peek/struct.Peekable.html#tymethod.get_mut\" class=\"fn\">get_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;mut St</a></h4></section></summary><div class=\"docblock\"><p>Acquires a mutable reference to the underlying sink or stream that this\ncombinator is pulling from.</p>\n<p>Note that care must be taken to avoid tampering with the state of the\nsink or stream which may otherwise confuse this combinator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_pin_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/futures_util/stream/stream/peek.rs.html#34\">Source</a><h4 class=\"code-header\">pub fn <a href=\"futures_util/stream/stream/peek/struct.Peekable.html#tymethod.get_pin_mut\" class=\"fn\">get_pin_mut</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"futures_util/stream/stream/peek/struct.Peekable.html\" title=\"struct futures_util::stream::stream::peek::Peekable\">Peekable</a>&lt;St&gt;&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;mut St</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Acquires a pinned mutable reference to the underlying sink or stream that this\ncombinator is pulling from.</p>\n<p>Note that care must be taken to avoid tampering with the state of the\nsink or stream which may otherwise confuse this combinator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method\"><a class=\"src rightside\" href=\"src/futures_util/stream/stream/peek.rs.html#34\">Source</a><h4 class=\"code-header\">pub fn <a href=\"futures_util/stream/stream/peek/struct.Peekable.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; St</h4></section></summary><div class=\"docblock\"><p>Consumes this combinator, returning the underlying sink or stream.</p>\n<p>Note that this may discard intermediate state of this combinator, so\ncare should be taken to avoid losing resources when this is called.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.peek\" class=\"method\"><a class=\"src rightside\" href=\"src/futures_util/stream/stream/peek.rs.html#38\">Source</a><h4 class=\"code-header\">pub fn <a href=\"futures_util/stream/stream/peek/struct.Peekable.html#tymethod.peek\" class=\"fn\">peek</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"futures_util/stream/stream/peek/struct.Peekable.html\" title=\"struct futures_util::stream::stream::peek::Peekable\">Peekable</a>&lt;St&gt;&gt;) -&gt; <a class=\"struct\" href=\"futures_util/stream/stream/peek/struct.Peek.html\" title=\"struct futures_util::stream::stream::peek::Peek\">Peek</a>&lt;'_, St&gt;</h4></section></summary><div class=\"docblock\"><p>Produces a future which retrieves a reference to the next item\nin the stream, or <code>None</code> if the underlying stream terminates.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_peek\" class=\"method\"><a class=\"src rightside\" href=\"src/futures_util/stream/stream/peek.rs.html#46\">Source</a><h4 class=\"code-header\">pub fn <a href=\"futures_util/stream/stream/peek/struct.Peekable.html#tymethod.poll_peek\" class=\"fn\">poll_peek</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"futures_util/stream/stream/peek/struct.Peekable.html\" title=\"struct futures_util::stream::stream::peek::Peekable\">Peekable</a>&lt;St&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;&lt;St as <a class=\"trait\" href=\"futures_core/stream/trait.Stream.html\" title=\"trait futures_core::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"futures_core/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_core::stream::Stream::Item\">Item</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Peek retrieves a reference to the next item in the stream.</p>\n<p>This method polls the underlying stream and return either a reference\nto the next item if the stream is ready or passes through any errors.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.peek_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/futures_util/stream/stream/peek.rs.html#86\">Source</a><h4 class=\"code-header\">pub fn <a href=\"futures_util/stream/stream/peek/struct.Peekable.html#tymethod.peek_mut\" class=\"fn\">peek_mut</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"futures_util/stream/stream/peek/struct.Peekable.html\" title=\"struct futures_util::stream::stream::peek::Peekable\">Peekable</a>&lt;St&gt;&gt;) -&gt; <a class=\"struct\" href=\"futures_util/stream/stream/peek/struct.PeekMut.html\" title=\"struct futures_util::stream::stream::peek::PeekMut\">PeekMut</a>&lt;'_, St&gt;</h4></section></summary><div class=\"docblock\"><p>Produces a future which retrieves a mutable reference to the next item\nin the stream, or <code>None</code> if the underlying stream terminates.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>futures::stream::{<span class=\"self\">self</span>, StreamExt};\n<span class=\"kw\">use </span>futures::pin_mut;\n\n<span class=\"kw\">let </span>stream = stream::iter(<span class=\"macro\">vec!</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]).peekable();\n<span class=\"macro\">pin_mut!</span>(stream);\n\n<span class=\"macro\">assert_eq!</span>(stream.as_mut().peek_mut().<span class=\"kw\">await</span>, <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;mut </span><span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(stream.as_mut().next().<span class=\"kw\">await</span>, <span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>));\n\n<span class=\"comment\">// Peek into the stream and modify the value which will be returned next\n</span><span class=\"kw\">if let </span><span class=\"prelude-val\">Some</span>(p) = stream.as_mut().peek_mut().<span class=\"kw\">await </span>{\n    <span class=\"kw\">if </span><span class=\"kw-2\">*</span>p == <span class=\"number\">2 </span>{\n        <span class=\"kw-2\">*</span>p = <span class=\"number\">5</span>;\n    }\n}\n\n<span class=\"macro\">assert_eq!</span>(stream.collect::&lt;Vec&lt;<span class=\"kw\">_</span>&gt;&gt;().<span class=\"kw\">await</span>, <span class=\"macro\">vec!</span>[<span class=\"number\">5</span>, <span class=\"number\">3</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_peek_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/futures_util/stream/stream/peek.rs.html#91-94\">Source</a><h4 class=\"code-header\">pub fn <a href=\"futures_util/stream/stream/peek/struct.Peekable.html#tymethod.poll_peek_mut\" class=\"fn\">poll_peek_mut</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"futures_util/stream/stream/peek/struct.Peekable.html\" title=\"struct futures_util::stream::stream::peek::Peekable\">Peekable</a>&lt;St&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut &lt;St as <a class=\"trait\" href=\"futures_core/stream/trait.Stream.html\" title=\"trait futures_core::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"futures_core/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_core::stream::Stream::Item\">Item</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Peek retrieves a mutable reference to the next item in the stream.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_if\" class=\"method\"><a class=\"src rightside\" href=\"src/futures_util/stream/stream/peek.rs.html#149-151\">Source</a><h4 class=\"code-header\">pub fn <a href=\"futures_util/stream/stream/peek/struct.Peekable.html#tymethod.next_if\" class=\"fn\">next_if</a>&lt;F&gt;(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"futures_util/stream/stream/peek/struct.Peekable.html\" title=\"struct futures_util::stream::stream::peek::Peekable\">Peekable</a>&lt;St&gt;&gt;, func: F) -&gt; <a class=\"struct\" href=\"futures_util/stream/stream/peek/struct.NextIf.html\" title=\"struct futures_util::stream::stream::peek::NextIf\">NextIf</a>&lt;'_, St, F&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;&lt;St as <a class=\"trait\" href=\"futures_core/stream/trait.Stream.html\" title=\"trait futures_core::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"futures_core/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_core::stream::Stream::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class=\"docblock\"><p>Creates a future which will consume and return the next value of this\nstream if a condition is true.</p>\n<p>If <code>func</code> returns <code>true</code> for the next value of this stream, consume and\nreturn it. Otherwise, return <code>None</code>.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<p>Consume a number if it’s equal to 0.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>futures::stream::{<span class=\"self\">self</span>, StreamExt};\n<span class=\"kw\">use </span>futures::pin_mut;\n\n<span class=\"kw\">let </span>stream = stream::iter(<span class=\"number\">0</span>..<span class=\"number\">5</span>).peekable();\n<span class=\"macro\">pin_mut!</span>(stream);\n<span class=\"comment\">// The first item of the stream is 0; consume it.\n</span><span class=\"macro\">assert_eq!</span>(stream.as_mut().next_if(|<span class=\"kw-2\">&amp;</span>x| x == <span class=\"number\">0</span>).<span class=\"kw\">await</span>, <span class=\"prelude-val\">Some</span>(<span class=\"number\">0</span>));\n<span class=\"comment\">// The next item returned is now 1, so `consume` will return `false`.\n</span><span class=\"macro\">assert_eq!</span>(stream.as_mut().next_if(|<span class=\"kw-2\">&amp;</span>x| x == <span class=\"number\">0</span>).<span class=\"kw\">await</span>, <span class=\"prelude-val\">None</span>);\n<span class=\"comment\">// `next_if` saves the value of the next item if it was not equal to `expected`.\n</span><span class=\"macro\">assert_eq!</span>(stream.next().<span class=\"kw\">await</span>, <span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>));</code></pre></div>\n<p>Consume any number less than 10.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>futures::stream::{<span class=\"self\">self</span>, StreamExt};\n<span class=\"kw\">use </span>futures::pin_mut;\n\n<span class=\"kw\">let </span>stream = stream::iter(<span class=\"number\">1</span>..<span class=\"number\">20</span>).peekable();\n<span class=\"macro\">pin_mut!</span>(stream);\n<span class=\"comment\">// Consume all numbers less than 10\n</span><span class=\"kw\">while </span>stream.as_mut().next_if(|<span class=\"kw-2\">&amp;</span>x| x &lt; <span class=\"number\">10</span>).<span class=\"kw\">await</span>.is_some() {}\n<span class=\"comment\">// The next value returned will be 10\n</span><span class=\"macro\">assert_eq!</span>(stream.next().<span class=\"kw\">await</span>, <span class=\"prelude-val\">Some</span>(<span class=\"number\">10</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_if_eq\" class=\"method\"><a class=\"src rightside\" href=\"src/futures_util/stream/stream/peek.rs.html#178-181\">Source</a><h4 class=\"code-header\">pub fn <a href=\"futures_util/stream/stream/peek/struct.Peekable.html#tymethod.next_if_eq\" class=\"fn\">next_if_eq</a>&lt;'a, T&gt;(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;'a mut <a class=\"struct\" href=\"futures_util/stream/stream/peek/struct.Peekable.html\" title=\"struct futures_util::stream::stream::peek::Peekable\">Peekable</a>&lt;St&gt;&gt;,\n    expected: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;'a T</a>,\n) -&gt; <a class=\"struct\" href=\"futures_util/stream/stream/peek/struct.NextIfEq.html\" title=\"struct futures_util::stream::stream::peek::NextIfEq\">NextIfEq</a>&lt;'a, St, T&gt;<div class=\"where\">where\n    &lt;St as <a class=\"trait\" href=\"futures_core/stream/trait.Stream.html\" title=\"trait futures_core::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"futures_core/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_core::stream::Stream::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;T&gt;,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Creates a future which will consume and return the next item if it is\nequal to <code>expected</code>.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<p>Consume a number if it’s equal to 0.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>futures::stream::{<span class=\"self\">self</span>, StreamExt};\n<span class=\"kw\">use </span>futures::pin_mut;\n\n<span class=\"kw\">let </span>stream = stream::iter(<span class=\"number\">0</span>..<span class=\"number\">5</span>).peekable();\n<span class=\"macro\">pin_mut!</span>(stream);\n<span class=\"comment\">// The first item of the stream is 0; consume it.\n</span><span class=\"macro\">assert_eq!</span>(stream.as_mut().next_if_eq(<span class=\"kw-2\">&amp;</span><span class=\"number\">0</span>).<span class=\"kw\">await</span>, <span class=\"prelude-val\">Some</span>(<span class=\"number\">0</span>));\n<span class=\"comment\">// The next item returned is now 1, so `consume` will return `false`.\n</span><span class=\"macro\">assert_eq!</span>(stream.as_mut().next_if_eq(<span class=\"kw-2\">&amp;</span><span class=\"number\">0</span>).<span class=\"kw\">await</span>, <span class=\"prelude-val\">None</span>);\n<span class=\"comment\">// `next_if_eq` saves the value of the next item if it was not equal to `expected`.\n</span><span class=\"macro\">assert_eq!</span>(stream.next().<span class=\"kw\">await</span>, <span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>));</code></pre></div>\n</div></details></div></details>",0,"trust_dns_proto::xfer::StreamReceiver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sink%3CItem%3E-for-Peekable%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/futures_util/stream/stream/peek.rs.html#220-222\">Source</a><a href=\"#impl-Sink%3CItem%3E-for-Peekable%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, Item&gt; <a class=\"trait\" href=\"futures_sink/trait.Sink.html\" title=\"trait futures_sink::Sink\">Sink</a>&lt;Item&gt; for <a class=\"struct\" href=\"futures_util/stream/stream/peek/struct.Peekable.html\" title=\"struct futures_util::stream::stream::peek::Peekable\">Peekable</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"futures_sink/trait.Sink.html\" title=\"trait futures_sink::Sink\">Sink</a>&lt;Item&gt; + <a class=\"trait\" href=\"futures_core/stream/trait.Stream.html\" title=\"trait futures_core::stream::Stream\">Stream</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/futures_util/stream/stream/peek.rs.html#224\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"futures_sink/trait.Sink.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = &lt;S as <a class=\"trait\" href=\"futures_sink/trait.Sink.html\" title=\"trait futures_sink::Sink\">Sink</a>&lt;Item&gt;&gt;::<a class=\"associatedtype\" href=\"futures_sink/trait.Sink.html#associatedtype.Error\" title=\"type futures_sink::Sink::Error\">Error</a></h4></section></summary><div class='docblock'>The type of value produced by the sink when an error occurs.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_ready\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_util/stream/stream/peek.rs.html#226\">Source</a><a href=\"#method.poll_ready\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"futures_sink/trait.Sink.html#tymethod.poll_ready\" class=\"fn\">poll_ready</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"futures_util/stream/stream/peek/struct.Peekable.html\" title=\"struct futures_util::stream::stream::peek::Peekable\">Peekable</a>&lt;S&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"futures_util/stream/stream/peek/struct.Peekable.html\" title=\"struct futures_util::stream::stream::peek::Peekable\">Peekable</a>&lt;S&gt; as <a class=\"trait\" href=\"futures_sink/trait.Sink.html\" title=\"trait futures_sink::Sink\">Sink</a>&lt;Item&gt;&gt;::<a class=\"associatedtype\" href=\"futures_sink/trait.Sink.html#associatedtype.Error\" title=\"type futures_sink::Sink::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempts to prepare the <code>Sink</code> to receive a value. <a href=\"futures_sink/trait.Sink.html#tymethod.poll_ready\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.start_send\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_util/stream/stream/peek.rs.html#226\">Source</a><a href=\"#method.start_send\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"futures_sink/trait.Sink.html#tymethod.start_send\" class=\"fn\">start_send</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"futures_util/stream/stream/peek/struct.Peekable.html\" title=\"struct futures_util::stream::stream::peek::Peekable\">Peekable</a>&lt;S&gt;&gt;,\n    item: Item,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"futures_util/stream/stream/peek/struct.Peekable.html\" title=\"struct futures_util::stream::stream::peek::Peekable\">Peekable</a>&lt;S&gt; as <a class=\"trait\" href=\"futures_sink/trait.Sink.html\" title=\"trait futures_sink::Sink\">Sink</a>&lt;Item&gt;&gt;::<a class=\"associatedtype\" href=\"futures_sink/trait.Sink.html#associatedtype.Error\" title=\"type futures_sink::Sink::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Begin the process of sending a value to the sink.\nEach call to this function must be preceded by a successful call to\n<code>poll_ready</code> which returned <code>Poll::Ready(Ok(()))</code>. <a href=\"futures_sink/trait.Sink.html#tymethod.start_send\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_flush\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_util/stream/stream/peek.rs.html#226\">Source</a><a href=\"#method.poll_flush\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"futures_sink/trait.Sink.html#tymethod.poll_flush\" class=\"fn\">poll_flush</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"futures_util/stream/stream/peek/struct.Peekable.html\" title=\"struct futures_util::stream::stream::peek::Peekable\">Peekable</a>&lt;S&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"futures_util/stream/stream/peek/struct.Peekable.html\" title=\"struct futures_util::stream::stream::peek::Peekable\">Peekable</a>&lt;S&gt; as <a class=\"trait\" href=\"futures_sink/trait.Sink.html\" title=\"trait futures_sink::Sink\">Sink</a>&lt;Item&gt;&gt;::<a class=\"associatedtype\" href=\"futures_sink/trait.Sink.html#associatedtype.Error\" title=\"type futures_sink::Sink::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Flush any remaining output from this sink. <a href=\"futures_sink/trait.Sink.html#tymethod.poll_flush\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_close\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_util/stream/stream/peek.rs.html#226\">Source</a><a href=\"#method.poll_close\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"futures_sink/trait.Sink.html#tymethod.poll_close\" class=\"fn\">poll_close</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"futures_util/stream/stream/peek/struct.Peekable.html\" title=\"struct futures_util::stream::stream::peek::Peekable\">Peekable</a>&lt;S&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"futures_util/stream/stream/peek/struct.Peekable.html\" title=\"struct futures_util::stream::stream::peek::Peekable\">Peekable</a>&lt;S&gt; as <a class=\"trait\" href=\"futures_sink/trait.Sink.html\" title=\"trait futures_sink::Sink\">Sink</a>&lt;Item&gt;&gt;::<a class=\"associatedtype\" href=\"futures_sink/trait.Sink.html#associatedtype.Error\" title=\"type futures_sink::Sink::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Flush any remaining output and close this sink, if necessary. <a href=\"futures_sink/trait.Sink.html#tymethod.poll_close\">Read more</a></div></details></div></details>","Sink<Item>","trust_dns_proto::xfer::StreamReceiver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Stream-for-Peekable%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/futures_util/stream/stream/peek.rs.html#195\">Source</a><a href=\"#impl-Stream-for-Peekable%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"futures_core/stream/trait.Stream.html\" title=\"trait futures_core::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"futures_util/stream/stream/peek/struct.Peekable.html\" title=\"struct futures_util::stream::stream::peek::Peekable\">Peekable</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"futures_core/stream/trait.Stream.html\" title=\"trait futures_core::stream::Stream\">Stream</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/futures_util/stream/stream/peek.rs.html#196\">Source</a><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"futures_core/stream/trait.Stream.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = &lt;S as <a class=\"trait\" href=\"futures_core/stream/trait.Stream.html\" title=\"trait futures_core::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"futures_core/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_core::stream::Stream::Item\">Item</a></h4></section></summary><div class='docblock'>Values yielded by the stream.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_next\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_util/stream/stream/peek.rs.html#198\">Source</a><a href=\"#method.poll_next\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"futures_core/stream/trait.Stream.html#tymethod.poll_next\" class=\"fn\">poll_next</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"futures_util/stream/stream/peek/struct.Peekable.html\" title=\"struct futures_util::stream::stream::peek::Peekable\">Peekable</a>&lt;S&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;<a class=\"struct\" href=\"futures_util/stream/stream/peek/struct.Peekable.html\" title=\"struct futures_util::stream::stream::peek::Peekable\">Peekable</a>&lt;S&gt; as <a class=\"trait\" href=\"futures_core/stream/trait.Stream.html\" title=\"trait futures_core::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"futures_core/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_core::stream::Stream::Item\">Item</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempt to pull out the next value of this stream, registering the\ncurrent task for wakeup if the value is not yet available, and returning\n<code>None</code> if the stream is exhausted. <a href=\"futures_core/stream/trait.Stream.html#tymethod.poll_next\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_util/stream/stream/peek.rs.html#206\">Source</a><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"futures_core/stream/trait.Stream.html#method.size_hint\" class=\"fn\">size_hint</a>(&amp;self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>&gt;)</h4></section></summary><div class='docblock'>Returns the bounds on the remaining length of the stream. <a href=\"futures_core/stream/trait.Stream.html#method.size_hint\">Read more</a></div></details></div></details>","Stream","trust_dns_proto::xfer::StreamReceiver"],["<section id=\"impl-Unpin-for-Peekable%3CSt%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/futures_util/stream/stream/peek.rs.html#14-27\">Source</a><a href=\"#impl-Unpin-for-Peekable%3CSt%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'__pin, St&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"futures_util/stream/stream/peek/struct.Peekable.html\" title=\"struct futures_util::stream::stream::peek::Peekable\">Peekable</a>&lt;St&gt;<div class=\"where\">where\n    St: <a class=\"trait\" href=\"futures_core/stream/trait.Stream.html\" title=\"trait futures_core::stream::Stream\">Stream</a>,\n    __Origin&lt;'__pin, St&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,</div></h3></section>","Unpin","trust_dns_proto::xfer::StreamReceiver"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[37540]}