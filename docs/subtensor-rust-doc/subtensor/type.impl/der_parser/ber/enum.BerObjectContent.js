(function() {
    var type_impls = Object.fromEntries([["der_parser",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BerObjectContent%3C'a%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/der_parser/ber/ber.rs.html#396-664\">Source</a><a href=\"#impl-BerObjectContent%3C'a%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"enum\" href=\"der_parser/ber/enum.BerObjectContent.html\" title=\"enum der_parser::ber::BerObjectContent\">BerObjectContent</a>&lt;'a&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_i64\" class=\"method\"><a class=\"src rightside\" href=\"src/der_parser/ber/ber.rs.html#411-422\">Source</a><h4 class=\"code-header\">pub fn <a href=\"der_parser/ber/enum.BerObjectContent.html#tymethod.as_i64\" class=\"fn\">as_i64</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.i64.html\">i64</a>, <a class=\"type\" href=\"der_parser/error/type.BerError.html\" title=\"type der_parser::error::BerError\">BerError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempt to read a signed integer value from this object.</p>\n<p>This can fail if the object is not an integer, or if it is too large.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>der_int  = BerObject::from_int_slice(<span class=\"string\">b\"\\x80\"</span>);\n<span class=\"macro\">assert_eq!</span>(\n    der_int.as_i64(),\n    <span class=\"prelude-val\">Ok</span>(-<span class=\"number\">128</span>)\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_i32\" class=\"method\"><a class=\"src rightside\" href=\"src/der_parser/ber/ber.rs.html#438-449\">Source</a><h4 class=\"code-header\">pub fn <a href=\"der_parser/ber/enum.BerObjectContent.html#tymethod.as_i32\" class=\"fn\">as_i32</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.i32.html\">i32</a>, <a class=\"type\" href=\"der_parser/error/type.BerError.html\" title=\"type der_parser::error::BerError\">BerError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempt to read a signed integer value from this object.</p>\n<p>This can fail if the object is not an integer, or if it is too large.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>der_int  = BerObject::from_int_slice(<span class=\"string\">b\"\\x80\"</span>);\n<span class=\"macro\">assert_eq!</span>(\n    der_int.as_i32(),\n    <span class=\"prelude-val\">Ok</span>(-<span class=\"number\">128</span>)\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_u64\" class=\"method\"><a class=\"src rightside\" href=\"src/der_parser/ber/ber.rs.html#465-477\">Source</a><h4 class=\"code-header\">pub fn <a href=\"der_parser/ber/enum.BerObjectContent.html#tymethod.as_u64\" class=\"fn\">as_u64</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u64.html\">u64</a>, <a class=\"type\" href=\"der_parser/error/type.BerError.html\" title=\"type der_parser::error::BerError\">BerError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempt to read integer value from this object.</p>\n<p>This can fail if the object is not an unsigned integer, or if it is too large.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>der_int  = BerObject::from_int_slice(<span class=\"string\">b\"\\x01\\x00\\x01\"</span>);\n<span class=\"macro\">assert_eq!</span>(\n    der_int.as_u64(),\n    <span class=\"prelude-val\">Ok</span>(<span class=\"number\">0x10001</span>)\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_u32\" class=\"method\"><a class=\"src rightside\" href=\"src/der_parser/ber/ber.rs.html#494-518\">Source</a><h4 class=\"code-header\">pub fn <a href=\"der_parser/ber/enum.BerObjectContent.html#tymethod.as_u32\" class=\"fn\">as_u32</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a>, <a class=\"type\" href=\"der_parser/error/type.BerError.html\" title=\"type der_parser::error::BerError\">BerError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempt to read integer value from this object.</p>\n<p>This can fail if the object is not an unsigned integer, or if it is too large.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>der_int  = BerObject::from_obj(BerObjectContent::Integer(<span class=\"string\">b\"\\x01\\x00\\x01\"</span>));\n<span class=\"macro\">assert_eq!</span>(\n    der_int.as_u32(),\n    <span class=\"prelude-val\">Ok</span>(<span class=\"number\">0x10001</span>)\n);</code></pre></div>\n</div></details><section id=\"method.as_bool\" class=\"method\"><a class=\"src rightside\" href=\"src/der_parser/ber/ber.rs.html#520-525\">Source</a><h4 class=\"code-header\">pub fn <a href=\"der_parser/ber/enum.BerObjectContent.html#tymethod.as_bool\" class=\"fn\">as_bool</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a>, <a class=\"type\" href=\"der_parser/error/type.BerError.html\" title=\"type der_parser::error::BerError\">BerError</a>&gt;</h4></section><section id=\"method.as_oid\" class=\"method\"><a class=\"src rightside\" href=\"src/der_parser/ber/ber.rs.html#527-533\">Source</a><h4 class=\"code-header\">pub fn <a href=\"der_parser/ber/enum.BerObjectContent.html#tymethod.as_oid\" class=\"fn\">as_oid</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;<a class=\"struct\" href=\"der_parser/struct.Oid.html\" title=\"struct der_parser::Oid\">Oid</a>&lt;'a&gt;, <a class=\"type\" href=\"der_parser/error/type.BerError.html\" title=\"type der_parser::error::BerError\">BerError</a>&gt;</h4></section><section id=\"method.as_oid_val\" class=\"method\"><a class=\"src rightside\" href=\"src/der_parser/ber/ber.rs.html#535-537\">Source</a><h4 class=\"code-header\">pub fn <a href=\"der_parser/ber/enum.BerObjectContent.html#tymethod.as_oid_val\" class=\"fn\">as_oid_val</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"der_parser/struct.Oid.html\" title=\"struct der_parser::Oid\">Oid</a>&lt;'a&gt;, <a class=\"type\" href=\"der_parser/error/type.BerError.html\" title=\"type der_parser::error::BerError\">BerError</a>&gt;</h4></section><section id=\"method.as_optional\" class=\"method\"><a class=\"src rightside\" href=\"src/der_parser/ber/ber.rs.html#539-545\">Source</a><h4 class=\"code-header\">pub fn <a href=\"der_parser/ber/enum.BerObjectContent.html#tymethod.as_optional\" class=\"fn\">as_optional</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"der_parser/ber/struct.BerObject.html\" title=\"struct der_parser::ber::BerObject\">BerObject</a>&lt;'a&gt;&gt;, <a class=\"type\" href=\"der_parser/error/type.BerError.html\" title=\"type der_parser::error::BerError\">BerError</a>&gt;</h4></section><section id=\"method.as_tagged\" class=\"method\"><a class=\"src rightside\" href=\"src/der_parser/ber/ber.rs.html#547-552\">Source</a><h4 class=\"code-header\">pub fn <a href=\"der_parser/ber/enum.BerObjectContent.html#tymethod.as_tagged\" class=\"fn\">as_tagged</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"enum\" href=\"der_parser/ber/enum.Class.html\" title=\"enum der_parser::ber::Class\">Class</a>, <a class=\"struct\" href=\"der_parser/ber/struct.Tag.html\" title=\"struct der_parser::ber::Tag\">Tag</a>, &amp;<a class=\"struct\" href=\"der_parser/ber/struct.BerObject.html\" title=\"struct der_parser::ber::BerObject\">BerObject</a>&lt;'a&gt;), <a class=\"type\" href=\"der_parser/error/type.BerError.html\" title=\"type der_parser::error::BerError\">BerError</a>&gt;</h4></section><section id=\"method.as_bitstring_ref\" class=\"method\"><a class=\"src rightside\" href=\"src/der_parser/ber/ber.rs.html#554-559\">Source</a><h4 class=\"code-header\">pub fn <a href=\"der_parser/ber/enum.BerObjectContent.html#tymethod.as_bitstring_ref\" class=\"fn\">as_bitstring_ref</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;<a class=\"struct\" href=\"der_parser/ber/struct.BitStringObject.html\" title=\"struct der_parser::ber::BitStringObject\">BitStringObject</a>&lt;'_&gt;, <a class=\"type\" href=\"der_parser/error/type.BerError.html\" title=\"type der_parser::error::BerError\">BerError</a>&gt;</h4></section><section id=\"method.as_bitstring\" class=\"method\"><a class=\"src rightside\" href=\"src/der_parser/ber/ber.rs.html#561-566\">Source</a><h4 class=\"code-header\">pub fn <a href=\"der_parser/ber/enum.BerObjectContent.html#tymethod.as_bitstring\" class=\"fn\">as_bitstring</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"der_parser/ber/struct.BitStringObject.html\" title=\"struct der_parser::ber::BitStringObject\">BitStringObject</a>&lt;'a&gt;, <a class=\"type\" href=\"der_parser/error/type.BerError.html\" title=\"type der_parser::error::BerError\">BerError</a>&gt;</h4></section><section id=\"method.as_sequence\" class=\"method\"><a class=\"src rightside\" href=\"src/der_parser/ber/ber.rs.html#575-580\">Source</a><h4 class=\"code-header\">pub fn <a href=\"der_parser/ber/enum.BerObjectContent.html#tymethod.as_sequence\" class=\"fn\">as_sequence</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"der_parser/ber/struct.BerObject.html\" title=\"struct der_parser::ber::BerObject\">BerObject</a>&lt;'a&gt;&gt;, <a class=\"type\" href=\"der_parser/error/type.BerError.html\" title=\"type der_parser::error::BerError\">BerError</a>&gt;</h4></section><section id=\"method.as_set\" class=\"method\"><a class=\"src rightside\" href=\"src/der_parser/ber/ber.rs.html#582-587\">Source</a><h4 class=\"code-header\">pub fn <a href=\"der_parser/ber/enum.BerObjectContent.html#tymethod.as_set\" class=\"fn\">as_set</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"der_parser/ber/struct.BerObject.html\" title=\"struct der_parser::ber::BerObject\">BerObject</a>&lt;'a&gt;&gt;, <a class=\"type\" href=\"der_parser/error/type.BerError.html\" title=\"type der_parser::error::BerError\">BerError</a>&gt;</h4></section><section id=\"method.as_slice\" class=\"method\"><a class=\"src rightside\" href=\"src/der_parser/ber/ber.rs.html#590-610\">Source</a><h4 class=\"code-header\">pub fn <a href=\"der_parser/ber/enum.BerObjectContent.html#tymethod.as_slice\" class=\"fn\">as_slice</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>], <a class=\"type\" href=\"der_parser/error/type.BerError.html\" title=\"type der_parser::error::BerError\">BerError</a>&gt;</h4></section><section id=\"method.as_str\" class=\"method\"><a class=\"src rightside\" href=\"src/der_parser/ber/ber.rs.html#613-628\">Source</a><h4 class=\"code-header\">pub fn <a href=\"der_parser/ber/enum.BerObjectContent.html#tymethod.as_str\" class=\"fn\">as_str</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>, <a class=\"type\" href=\"der_parser/error/type.BerError.html\" title=\"type der_parser::error::BerError\">BerError</a>&gt;</h4></section></div></details>",0,"der_parser::der::DerObjectContent"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-BerObjectContent%3C'a%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/der_parser/ber/ber.rs.html#34\">Source</a><a href=\"#impl-Clone-for-BerObjectContent%3C'a%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"der_parser/ber/enum.BerObjectContent.html\" title=\"enum der_parser::ber::BerObjectContent\">BerObjectContent</a>&lt;'a&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/der_parser/ber/ber.rs.html#34\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"enum\" href=\"der_parser/ber/enum.BerObjectContent.html\" title=\"enum der_parser::ber::BerObjectContent\">BerObjectContent</a>&lt;'a&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","der_parser::der::DerObjectContent"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-BerObjectContent%3C'a%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/der_parser/ber/ber.rs.html#34\">Source</a><a href=\"#impl-Debug-for-BerObjectContent%3C'a%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"der_parser/ber/enum.BerObjectContent.html\" title=\"enum der_parser::ber::BerObjectContent\">BerObjectContent</a>&lt;'a&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/der_parser/ber/ber.rs.html#34\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","der_parser::der::DerObjectContent"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-BerObjectContent%3C'a%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/der_parser/ber/ber.rs.html#34\">Source</a><a href=\"#impl-PartialEq-for-BerObjectContent%3C'a%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"enum\" href=\"der_parser/ber/enum.BerObjectContent.html\" title=\"enum der_parser::ber::BerObjectContent\">BerObjectContent</a>&lt;'a&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/der_parser/ber/ber.rs.html#34\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"der_parser/ber/enum.BerObjectContent.html\" title=\"enum der_parser::ber::BerObjectContent\">BerObjectContent</a>&lt;'a&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","der_parser::der::DerObjectContent"],["<section id=\"impl-StructuralPartialEq-for-BerObjectContent%3C'a%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/der_parser/ber/ber.rs.html#34\">Source</a><a href=\"#impl-StructuralPartialEq-for-BerObjectContent%3C'a%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"enum\" href=\"der_parser/ber/enum.BerObjectContent.html\" title=\"enum der_parser::ber::BerObjectContent\">BerObjectContent</a>&lt;'a&gt;</h3></section>","StructuralPartialEq","der_parser::der::DerObjectContent"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[21245]}