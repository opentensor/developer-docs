Search.setIndex({"alltitles": {"API Reference": [[71, null]], "Attributes": [[1, "attributes"], [2, "attributes"], [4, "attributes"], [6, "attributes"], [7, "attributes"], [8, "attributes"], [9, "attributes"], [11, "attributes"], [12, "attributes"], [13, "attributes"], [14, "attributes"], [15, "attributes"], [16, "attributes"], [17, "attributes"], [18, "attributes"], [19, "attributes"], [20, "attributes"], [21, "attributes"], [22, "attributes"], [23, "attributes"], [24, "attributes"], [25, "attributes"], [27, "attributes"], [28, "attributes"], [29, "attributes"], [32, "attributes"], [37, "attributes"], [40, "attributes"], [41, "attributes"], [44, "attributes"], [45, "attributes"], [46, "attributes"], [49, "attributes"], [53, "attributes"], [55, "attributes"], [56, "attributes"], [62, "attributes"], [64, "attributes"], [65, "attributes"], [66, "attributes"], [67, "attributes"], [69, "attributes"]], "Classes": [[0, "classes"], [2, "classes"], [4, "classes"], [5, "classes"], [6, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [11, "classes"], [12, "classes"], [13, "classes"], [14, "classes"], [15, "classes"], [16, "classes"], [17, "classes"], [18, "classes"], [19, "classes"], [20, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [29, "classes"], [44, "classes"], [45, "classes"], [46, "classes"], [47, "classes"], [48, "classes"], [49, "classes"], [50, "classes"], [51, "classes"], [52, "classes"], [53, "classes"], [54, "classes"], [55, "classes"], [56, "classes"], [57, "classes"], [60, "classes"], [64, "classes"], [70, "classes"]], "Example": [[44, null], [44, null], [46, null], [46, null], [46, null], [46, null], [46, null], [46, null], [46, null], [46, null], [46, null], [46, null], [46, null], [53, null]], "Exceptions": [[27, "exceptions"], [30, "exceptions"], [36, "exceptions"], [44, "exceptions"], [56, "exceptions"], [62, "exceptions"], [63, "exceptions"], [64, "exceptions"], [67, "exceptions"]], "Functions": [[0, "functions"], [2, "functions"], [3, "functions"], [6, "functions"], [8, "functions"], [9, "functions"], [12, "functions"], [16, "functions"], [20, "functions"], [21, "functions"], [24, "functions"], [25, "functions"], [29, "functions"], [31, "functions"], [32, "functions"], [34, "functions"], [35, "functions"], [36, "functions"], [37, "functions"], [38, "functions"], [39, "functions"], [40, "functions"], [41, "functions"], [42, "functions"], [43, "functions"], [44, "functions"], [45, "functions"], [46, "functions"], [50, "functions"], [54, "functions"], [55, "functions"], [56, "functions"], [58, "functions"], [59, "functions"], [61, "functions"], [62, "functions"], [63, "functions"], [64, "functions"], [65, "functions"], [66, "functions"], [67, "functions"], [68, "functions"], [69, "functions"], [70, "functions"]], "Legacy Bittensor 7.4.0 Documentation": [[72, null]], "Module Contents": [[0, "module-contents"], [1, "module-contents"], [2, "module-contents"], [3, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [9, "module-contents"], [10, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [34, "module-contents"], [35, "module-contents"], [36, "module-contents"], [37, "module-contents"], [38, "module-contents"], [39, "module-contents"], [40, "module-contents"], [41, "module-contents"], [42, "module-contents"], [43, "module-contents"], [45, "module-contents"], [46, "module-contents"], [48, "module-contents"], [49, "module-contents"], [50, "module-contents"], [51, "module-contents"], [52, "module-contents"], [53, "module-contents"], [54, "module-contents"], [55, "module-contents"], [56, "module-contents"], [57, "module-contents"], [58, "module-contents"], [59, "module-contents"], [60, "module-contents"], [61, "module-contents"], [63, "module-contents"], [64, "module-contents"], [65, "module-contents"], [66, "module-contents"], [67, "module-contents"], [68, "module-contents"], [69, "module-contents"], [70, "module-contents"]], "Package Contents": [[4, "package-contents"], [11, "package-contents"], [44, "package-contents"], [47, "package-contents"], [62, "package-contents"]], "STOP, READ THIS FIRST": [[72, null]], "Submodules": [[4, "submodules"], [11, "submodules"], [33, "submodules"], [44, "submodules"], [47, "submodules"], [62, "submodules"]], "Subpackages": [[44, "subpackages"]], "Table of Contents": [[72, "table-of-contents"]], "bittensor": [[44, null]], "bittensor.axon": [[0, null]], "bittensor.btlogging": [[4, null]], "bittensor.btlogging.defines": [[1, null]], "bittensor.btlogging.format": [[2, null]], "bittensor.btlogging.helpers": [[3, null]], "bittensor.btlogging.loggingmachine": [[5, null]], "bittensor.chain_data": [[6, null]], "bittensor.cli": [[7, null]], "bittensor.commands": [[11, null]], "bittensor.commands.check_coldkey_swap": [[8, null]], "bittensor.commands.delegates": [[9, null]], "bittensor.commands.identity": [[10, null]], "bittensor.commands.inspect": [[12, null]], "bittensor.commands.list": [[13, null]], "bittensor.commands.metagraph": [[14, null]], "bittensor.commands.misc": [[15, null]], "bittensor.commands.network": [[16, null]], "bittensor.commands.overview": [[17, null]], "bittensor.commands.register": [[18, null]], "bittensor.commands.root": [[19, null]], "bittensor.commands.senate": [[20, null]], "bittensor.commands.stake": [[21, null]], "bittensor.commands.transfer": [[22, null]], "bittensor.commands.unstake": [[23, null]], "bittensor.commands.utils": [[24, null]], "bittensor.commands.wallets": [[25, null]], "bittensor.commands.weights": [[26, null]], "bittensor.config": [[27, null]], "bittensor.constants": [[28, null]], "bittensor.dendrite": [[29, null]], "bittensor.errors": [[30, null]], "bittensor.extrinsics": [[33, null]], "bittensor.extrinsics.commit_weights": [[31, null]], "bittensor.extrinsics.delegation": [[32, null]], "bittensor.extrinsics.network": [[34, null]], "bittensor.extrinsics.prometheus": [[35, null]], "bittensor.extrinsics.registration": [[36, null]], "bittensor.extrinsics.root": [[37, null]], "bittensor.extrinsics.senate": [[38, null]], "bittensor.extrinsics.serving": [[39, null]], "bittensor.extrinsics.set_weights": [[40, null]], "bittensor.extrinsics.staking": [[41, null]], "bittensor.extrinsics.transfer": [[42, null]], "bittensor.extrinsics.unstaking": [[43, null]], "bittensor.keyfile": [[45, null]], "bittensor.metagraph": [[46, null]], "bittensor.mock": [[47, null]], "bittensor.mock.keyfile_mock": [[48, null]], "bittensor.mock.subtensor_mock": [[49, null]], "bittensor.mock.wallet_mock": [[50, null]], "bittensor.stream": [[51, null]], "bittensor.subnets": [[52, null]], "bittensor.subtensor": [[53, null]], "bittensor.synapse": [[54, null]], "bittensor.tensor": [[55, null]], "bittensor.threadpool": [[56, null]], "bittensor.types": [[57, null]], "bittensor.utils": [[62, null]], "bittensor.utils._register_cuda": [[58, null]], "bittensor.utils.axon_utils": [[59, null]], "bittensor.utils.balance": [[60, null]], "bittensor.utils.formatting": [[61, null]], "bittensor.utils.networking": [[63, null]], "bittensor.utils.registration": [[64, null]], "bittensor.utils.subtensor": [[65, null]], "bittensor.utils.test_utils": [[66, null]], "bittensor.utils.version": [[67, null]], "bittensor.utils.wallet_utils": [[68, null]], "bittensor.utils.weight_utils": [[69, null]], "bittensor.wallet": [[70, null]]}, "docnames": ["autoapi/bittensor/axon/index", "autoapi/bittensor/btlogging/defines/index", "autoapi/bittensor/btlogging/format/index", "autoapi/bittensor/btlogging/helpers/index", "autoapi/bittensor/btlogging/index", "autoapi/bittensor/btlogging/loggingmachine/index", "autoapi/bittensor/chain_data/index", "autoapi/bittensor/cli/index", "autoapi/bittensor/commands/check_coldkey_swap/index", "autoapi/bittensor/commands/delegates/index", "autoapi/bittensor/commands/identity/index", "autoapi/bittensor/commands/index", "autoapi/bittensor/commands/inspect/index", "autoapi/bittensor/commands/list/index", "autoapi/bittensor/commands/metagraph/index", "autoapi/bittensor/commands/misc/index", "autoapi/bittensor/commands/network/index", "autoapi/bittensor/commands/overview/index", "autoapi/bittensor/commands/register/index", "autoapi/bittensor/commands/root/index", "autoapi/bittensor/commands/senate/index", "autoapi/bittensor/commands/stake/index", "autoapi/bittensor/commands/transfer/index", "autoapi/bittensor/commands/unstake/index", "autoapi/bittensor/commands/utils/index", "autoapi/bittensor/commands/wallets/index", "autoapi/bittensor/commands/weights/index", "autoapi/bittensor/config/index", "autoapi/bittensor/constants/index", "autoapi/bittensor/dendrite/index", "autoapi/bittensor/errors/index", "autoapi/bittensor/extrinsics/commit_weights/index", "autoapi/bittensor/extrinsics/delegation/index", "autoapi/bittensor/extrinsics/index", "autoapi/bittensor/extrinsics/network/index", "autoapi/bittensor/extrinsics/prometheus/index", "autoapi/bittensor/extrinsics/registration/index", "autoapi/bittensor/extrinsics/root/index", "autoapi/bittensor/extrinsics/senate/index", "autoapi/bittensor/extrinsics/serving/index", "autoapi/bittensor/extrinsics/set_weights/index", "autoapi/bittensor/extrinsics/staking/index", "autoapi/bittensor/extrinsics/transfer/index", "autoapi/bittensor/extrinsics/unstaking/index", "autoapi/bittensor/index", "autoapi/bittensor/keyfile/index", "autoapi/bittensor/metagraph/index", "autoapi/bittensor/mock/index", "autoapi/bittensor/mock/keyfile_mock/index", "autoapi/bittensor/mock/subtensor_mock/index", "autoapi/bittensor/mock/wallet_mock/index", "autoapi/bittensor/stream/index", "autoapi/bittensor/subnets/index", "autoapi/bittensor/subtensor/index", "autoapi/bittensor/synapse/index", "autoapi/bittensor/tensor/index", "autoapi/bittensor/threadpool/index", "autoapi/bittensor/types/index", "autoapi/bittensor/utils/_register_cuda/index", "autoapi/bittensor/utils/axon_utils/index", "autoapi/bittensor/utils/balance/index", "autoapi/bittensor/utils/formatting/index", "autoapi/bittensor/utils/index", "autoapi/bittensor/utils/networking/index", "autoapi/bittensor/utils/registration/index", "autoapi/bittensor/utils/subtensor/index", "autoapi/bittensor/utils/test_utils/index", "autoapi/bittensor/utils/version/index", "autoapi/bittensor/utils/wallet_utils/index", "autoapi/bittensor/utils/weight_utils/index", "autoapi/bittensor/wallet/index", "autoapi/index", "index"], "envversion": {"sphinx": 63, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["autoapi/bittensor/axon/index.rst", "autoapi/bittensor/btlogging/defines/index.rst", "autoapi/bittensor/btlogging/format/index.rst", "autoapi/bittensor/btlogging/helpers/index.rst", "autoapi/bittensor/btlogging/index.rst", "autoapi/bittensor/btlogging/loggingmachine/index.rst", "autoapi/bittensor/chain_data/index.rst", "autoapi/bittensor/cli/index.rst", "autoapi/bittensor/commands/check_coldkey_swap/index.rst", "autoapi/bittensor/commands/delegates/index.rst", "autoapi/bittensor/commands/identity/index.rst", "autoapi/bittensor/commands/index.rst", "autoapi/bittensor/commands/inspect/index.rst", "autoapi/bittensor/commands/list/index.rst", "autoapi/bittensor/commands/metagraph/index.rst", "autoapi/bittensor/commands/misc/index.rst", "autoapi/bittensor/commands/network/index.rst", "autoapi/bittensor/commands/overview/index.rst", "autoapi/bittensor/commands/register/index.rst", "autoapi/bittensor/commands/root/index.rst", "autoapi/bittensor/commands/senate/index.rst", "autoapi/bittensor/commands/stake/index.rst", "autoapi/bittensor/commands/transfer/index.rst", "autoapi/bittensor/commands/unstake/index.rst", "autoapi/bittensor/commands/utils/index.rst", "autoapi/bittensor/commands/wallets/index.rst", "autoapi/bittensor/commands/weights/index.rst", "autoapi/bittensor/config/index.rst", "autoapi/bittensor/constants/index.rst", "autoapi/bittensor/dendrite/index.rst", "autoapi/bittensor/errors/index.rst", "autoapi/bittensor/extrinsics/commit_weights/index.rst", "autoapi/bittensor/extrinsics/delegation/index.rst", "autoapi/bittensor/extrinsics/index.rst", "autoapi/bittensor/extrinsics/network/index.rst", "autoapi/bittensor/extrinsics/prometheus/index.rst", "autoapi/bittensor/extrinsics/registration/index.rst", "autoapi/bittensor/extrinsics/root/index.rst", "autoapi/bittensor/extrinsics/senate/index.rst", "autoapi/bittensor/extrinsics/serving/index.rst", "autoapi/bittensor/extrinsics/set_weights/index.rst", "autoapi/bittensor/extrinsics/staking/index.rst", "autoapi/bittensor/extrinsics/transfer/index.rst", "autoapi/bittensor/extrinsics/unstaking/index.rst", "autoapi/bittensor/index.rst", "autoapi/bittensor/keyfile/index.rst", "autoapi/bittensor/metagraph/index.rst", "autoapi/bittensor/mock/index.rst", "autoapi/bittensor/mock/keyfile_mock/index.rst", "autoapi/bittensor/mock/subtensor_mock/index.rst", "autoapi/bittensor/mock/wallet_mock/index.rst", "autoapi/bittensor/stream/index.rst", "autoapi/bittensor/subnets/index.rst", "autoapi/bittensor/subtensor/index.rst", "autoapi/bittensor/synapse/index.rst", "autoapi/bittensor/tensor/index.rst", "autoapi/bittensor/threadpool/index.rst", "autoapi/bittensor/types/index.rst", "autoapi/bittensor/utils/_register_cuda/index.rst", "autoapi/bittensor/utils/axon_utils/index.rst", "autoapi/bittensor/utils/balance/index.rst", "autoapi/bittensor/utils/formatting/index.rst", "autoapi/bittensor/utils/index.rst", "autoapi/bittensor/utils/networking/index.rst", "autoapi/bittensor/utils/registration/index.rst", "autoapi/bittensor/utils/subtensor/index.rst", "autoapi/bittensor/utils/test_utils/index.rst", "autoapi/bittensor/utils/version/index.rst", "autoapi/bittensor/utils/wallet_utils/index.rst", "autoapi/bittensor/utils/weight_utils/index.rst", "autoapi/bittensor/wallet/index.rst", "autoapi/index.rst", "index.rst"], "indexentries": {"__abs__() (bittensor.balance method)": [[44, "bittensor.Balance.__abs__", false]], "__abs__() (bittensor.utils.balance.balance method)": [[60, "bittensor.utils.balance.Balance.__abs__", false]], "__add__() (bittensor.balance method)": [[44, "bittensor.Balance.__add__", false]], "__add__() (bittensor.utils.balance.balance method)": [[60, "bittensor.utils.balance.Balance.__add__", false]], "__aenter__() (bittensor.dendrite.dendritemixin method)": [[29, "bittensor.dendrite.DendriteMixin.__aenter__", false]], "__aexit__() (bittensor.dendrite.dendritemixin method)": [[29, "bittensor.dendrite.DendriteMixin.__aexit__", false]], "__archive_entrypoint__ (in module bittensor)": [[44, "bittensor.__archive_entrypoint__", false]], "__author__ (in module bittensor.threadpool)": [[56, "bittensor.threadpool.__author__", false]], "__bellagene_entrypoint__ (in module bittensor)": [[44, "bittensor.__bellagene_entrypoint__", false]], "__blocktime__ (in module bittensor)": [[44, "bittensor.__blocktime__", false]], "__bool__() (bittensor.utils.registration.lazyloadedtorch method)": [[64, "bittensor.utils.registration.LazyLoadedTorch.__bool__", false]], "__call__() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.__call__", false]], "__call__() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.__call__", false]], "__call__() (bittensor.stream.streamingsynapse.btstreamingresponse method)": [[51, "bittensor.stream.StreamingSynapse.BTStreamingResponse.__call__", false]], "__call__() (bittensor.streamingsynapse.btstreamingresponse method)": [[44, "bittensor.StreamingSynapse.BTStreamingResponse.__call__", false]], "__call__() (bittensor.subnets.subnetsapi method)": [[52, "bittensor.subnets.SubnetsAPI.__call__", false]], "__call__() (bittensor.subnetsapi method)": [[44, "bittensor.SubnetsAPI.__call__", false]], "__check_for_missing_required_args() (bittensor.config method)": [[44, "bittensor.config.__check_for_missing_required_args", false]], "__check_for_missing_required_args() (bittensor.config.config method)": [[27, "bittensor.config.config.__check_for_missing_required_args", false]], "__console__ (in module bittensor)": [[44, "bittensor.__console__", false]], "__contains__() (bittensor.tensor.dtypes method)": [[55, "bittensor.tensor.DTypes.__contains__", false]], "__create_parser__() (bittensor.cli static method)": [[44, "bittensor.cli.__create_parser__", false]], "__create_parser__() (bittensor.cli.cli static method)": [[7, "bittensor.cli.cli.__create_parser__", false]], "__deepcopy__() (bittensor.config method)": [[44, "bittensor.config.__deepcopy__", false]], "__deepcopy__() (bittensor.config.config method)": [[27, "bittensor.config.config.__deepcopy__", false]], "__del__() (bittensor.axon method)": [[44, "bittensor.axon.__del__", false]], "__del__() (bittensor.axon.axon method)": [[0, "bittensor.axon.axon.__del__", false]], "__del__() (bittensor.dendrite.dendritemixin method)": [[29, "bittensor.dendrite.DendriteMixin.__del__", false]], "__delegates_details_url__ (in module bittensor)": [[44, "bittensor.__delegates_details_url__", false]], "__dict__ (bittensor.mock.mocksubtensor attribute)": [[47, "bittensor.mock.MockSubtensor.__dict__", false]], "__dict__ (bittensor.mock.subtensor_mock.mocksubtensor attribute)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor.__dict__", false]], "__dict__ (bittensor.mocksubtensor attribute)": [[44, "bittensor.MockSubtensor.__dict__", false]], "__do_add_stake_single() (in module bittensor.extrinsics.staking)": [[41, "bittensor.extrinsics.staking.__do_add_stake_single", false]], "__do_remove_stake_single() (in module bittensor.extrinsics.unstaking)": [[43, "bittensor.extrinsics.unstaking.__do_remove_stake_single", false]], "__enter__() (bittensor.utils.registration._usingspawnstartmethod method)": [[64, "bittensor.utils.registration._UsingSpawnStartMethod.__enter__", false]], "__eq__() (bittensor.axoninfo method)": [[44, "bittensor.AxonInfo.__eq__", false]], "__eq__() (bittensor.balance method)": [[44, "bittensor.Balance.__eq__", false]], "__eq__() (bittensor.chain_data.axoninfo method)": [[6, "bittensor.chain_data.AxonInfo.__eq__", false]], "__eq__() (bittensor.utils.balance.balance method)": [[60, "bittensor.utils.balance.Balance.__eq__", false]], "__exit__() (bittensor.utils.registration._usingspawnstartmethod method)": [[64, "bittensor.utils.registration._UsingSpawnStartMethod.__exit__", false]], "__finney_entrypoint__ (in module bittensor)": [[44, "bittensor.__finney_entrypoint__", false]], "__finney_test_entrypoint__ (in module bittensor)": [[44, "bittensor.__finney_test_entrypoint__", false]], "__float__() (bittensor.balance method)": [[44, "bittensor.Balance.__float__", false]], "__float__() (bittensor.utils.balance.balance method)": [[60, "bittensor.utils.balance.Balance.__float__", false]], "__floordiv__() (bittensor.balance method)": [[44, "bittensor.Balance.__floordiv__", false]], "__floordiv__() (bittensor.utils.balance.balance method)": [[60, "bittensor.utils.balance.Balance.__floordiv__", false]], "__ge__() (bittensor.balance method)": [[44, "bittensor.Balance.__ge__", false]], "__ge__() (bittensor.utils.balance.balance method)": [[60, "bittensor.utils.balance.Balance.__ge__", false]], "__get_required_args_from_parser() (bittensor.config static method)": [[44, "bittensor.config.__get_required_args_from_parser", false]], "__get_required_args_from_parser() (bittensor.config.config static method)": [[27, "bittensor.config.config.__get_required_args_from_parser", false]], "__getattr__() (bittensor.utils.registration.lazyloadedtorch method)": [[64, "bittensor.utils.registration.LazyLoadedTorch.__getattr__", false]], "__getattr__() (in module bittensor)": [[44, "bittensor.__getattr__", false]], "__getitem__() (bittensor.mock.subtensor_mock.infodict method)": [[49, "bittensor.mock.subtensor_mock.InfoDict.__getitem__", false]], "__getitem__() (bittensor.tensor.dtypes method)": [[55, "bittensor.tensor.DTypes.__getitem__", false]], "__global_mock_state__ (in module bittensor.mock.subtensor_mock)": [[49, "bittensor.mock.subtensor_mock.__GLOBAL_MOCK_STATE__", false]], "__gt__() (bittensor.balance method)": [[44, "bittensor.Balance.__gt__", false]], "__gt__() (bittensor.utils.balance.balance method)": [[60, "bittensor.utils.balance.Balance.__gt__", false]], "__int__() (bittensor.balance method)": [[44, "bittensor.Balance.__int__", false]], "__int__() (bittensor.utils.balance.balance method)": [[60, "bittensor.utils.balance.Balance.__int__", false]], "__is_set (bittensor.config attribute)": [[44, "bittensor.config.__is_set", false]], "__is_set (bittensor.config.config attribute)": [[27, "bittensor.config.config.__is_set", false]], "__iter__() (bittensor.mock.subtensor_mock.infodict method)": [[49, "bittensor.mock.subtensor_mock.InfoDict.__iter__", false]], "__iter__() (bittensor.mock.subtensor_mock.mockmapresult method)": [[49, "bittensor.mock.subtensor_mock.MockMapResult.__iter__", false]], "__le__() (bittensor.balance method)": [[44, "bittensor.Balance.__le__", false]], "__le__() (bittensor.utils.balance.balance method)": [[60, "bittensor.utils.balance.Balance.__le__", false]], "__len__() (bittensor.mock.subtensor_mock.infodict method)": [[49, "bittensor.mock.subtensor_mock.InfoDict.__len__", false]], "__local_entrypoint__ (in module bittensor)": [[44, "bittensor.__local_entrypoint__", false]], "__lt__() (bittensor.balance method)": [[44, "bittensor.Balance.__lt__", false]], "__lt__() (bittensor.utils.balance.balance method)": [[60, "bittensor.utils.balance.Balance.__lt__", false]], "__mul__() (bittensor.balance method)": [[44, "bittensor.Balance.__mul__", false]], "__mul__() (bittensor.utils.balance.balance method)": [[60, "bittensor.utils.balance.Balance.__mul__", false]], "__ne__() (bittensor.balance method)": [[44, "bittensor.Balance.__ne__", false]], "__ne__() (bittensor.utils.balance.balance method)": [[60, "bittensor.utils.balance.Balance.__ne__", false]], "__neg__() (bittensor.balance method)": [[44, "bittensor.Balance.__neg__", false]], "__neg__() (bittensor.utils.balance.balance method)": [[60, "bittensor.utils.balance.Balance.__neg__", false]], "__network_explorer_map__ (in module bittensor)": [[44, "bittensor.__network_explorer_map__", false]], "__networks__ (in module bittensor)": [[44, "bittensor.__networks__", false]], "__new_signature_version__ (in module bittensor)": [[44, "bittensor.__new_signature_version__", false]], "__nonzero__() (bittensor.balance method)": [[44, "bittensor.Balance.__nonzero__", false]], "__nonzero__() (bittensor.utils.balance.balance method)": [[60, "bittensor.utils.balance.Balance.__nonzero__", false]], "__parse_args__() (bittensor.config static method)": [[44, "bittensor.config.__parse_args__", false]], "__parse_args__() (bittensor.config.config static method)": [[27, "bittensor.config.config.__parse_args__", false]], "__pipaddress__ (in module bittensor)": [[44, "bittensor.__pipaddress__", false]], "__pos__() (bittensor.balance method)": [[44, "bittensor.Balance.__pos__", false]], "__pos__() (bittensor.utils.balance.balance method)": [[60, "bittensor.utils.balance.Balance.__pos__", false]], "__radd__() (bittensor.balance method)": [[44, "bittensor.Balance.__radd__", false]], "__radd__() (bittensor.utils.balance.balance method)": [[60, "bittensor.utils.balance.Balance.__radd__", false]], "__rao_symbol__ (in module bittensor)": [[44, "bittensor.__rao_symbol__", false]], "__repr__() (bittensor.axon method)": [[44, "bittensor.axon.__repr__", false]], "__repr__() (bittensor.axon.axon method)": [[0, "bittensor.axon.axon.__repr__", false]], "__repr__() (bittensor.axoninfo method)": [[44, "bittensor.AxonInfo.__repr__", false]], "__repr__() (bittensor.balance method)": [[44, "bittensor.Balance.__repr__", false]], "__repr__() (bittensor.chain_data.axoninfo method)": [[6, "bittensor.chain_data.AxonInfo.__repr__", false]], "__repr__() (bittensor.config method)": [[44, "bittensor.config.__repr__", false]], "__repr__() (bittensor.config.config method)": [[27, "bittensor.config.config.__repr__", false]], "__repr__() (bittensor.dendrite method)": [[44, "bittensor.dendrite.__repr__", false]], "__repr__() (bittensor.dendrite.dendrite method)": [[29, "bittensor.dendrite.dendrite.__repr__", false]], "__repr__() (bittensor.dendrite.dendritemixin method)": [[29, "bittensor.dendrite.DendriteMixin.__repr__", false], [29, "id14", false]], "__repr__() (bittensor.keyfile method)": [[44, "bittensor.keyfile.__repr__", false]], "__repr__() (bittensor.keyfile.keyfile method)": [[45, "bittensor.keyfile.keyfile.__repr__", false]], "__repr__() (bittensor.keyfile.mockkeyfile method)": [[45, "bittensor.keyfile.Mockkeyfile.__repr__", false]], "__repr__() (bittensor.metagraph.metagraphmixin method)": [[46, "bittensor.metagraph.MetagraphMixin.__repr__", false]], "__repr__() (bittensor.mock.keyfile_mock.mockkeyfile method)": [[48, "bittensor.mock.keyfile_mock.MockKeyfile.__repr__", false]], "__repr__() (bittensor.mockkeyfile method)": [[44, "bittensor.MockKeyfile.__repr__", false], [44, "bittensor.Mockkeyfile.__repr__", false]], "__repr__() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.__repr__", false], [44, "bittensor.subtensor.__repr__", false]], "__repr__() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.__repr__", false]], "__repr__() (bittensor.utils.balance.balance method)": [[60, "bittensor.utils.balance.Balance.__repr__", false]], "__repr__() (bittensor.wallet method)": [[44, "bittensor.wallet.__repr__", false]], "__repr__() (bittensor.wallet.wallet method)": [[70, "bittensor.wallet.wallet.__repr__", false]], "__rfloordiv__() (bittensor.balance method)": [[44, "bittensor.Balance.__rfloordiv__", false]], "__rfloordiv__() (bittensor.utils.balance.balance method)": [[60, "bittensor.utils.balance.Balance.__rfloordiv__", false]], "__rich__() (bittensor.balance method)": [[44, "bittensor.Balance.__rich__", false]], "__rich__() (bittensor.utils.balance.balance method)": [[60, "bittensor.utils.balance.Balance.__rich__", false]], "__rich_rao__() (bittensor.balance method)": [[44, "bittensor.Balance.__rich_rao__", false]], "__rich_rao__() (bittensor.utils.balance.balance method)": [[60, "bittensor.utils.balance.Balance.__rich_rao__", false]], "__rmul__() (bittensor.balance method)": [[44, "bittensor.Balance.__rmul__", false]], "__rmul__() (bittensor.utils.balance.balance method)": [[60, "bittensor.utils.balance.Balance.__rmul__", false]], "__rsub__() (bittensor.balance method)": [[44, "bittensor.Balance.__rsub__", false]], "__rsub__() (bittensor.utils.balance.balance method)": [[60, "bittensor.utils.balance.Balance.__rsub__", false]], "__rtruediv__() (bittensor.balance method)": [[44, "bittensor.Balance.__rtruediv__", false]], "__rtruediv__() (bittensor.utils.balance.balance method)": [[60, "bittensor.utils.balance.Balance.__rtruediv__", false]], "__setattr__() (bittensor.synapse method)": [[44, "bittensor.Synapse.__setattr__", false], [44, "id11", false]], "__setattr__() (bittensor.synapse.synapse method)": [[54, "bittensor.synapse.Synapse.__setattr__", false], [54, "id1", false]], "__setitem__() (bittensor.mock.subtensor_mock.infodict method)": [[49, "bittensor.mock.subtensor_mock.InfoDict.__setitem__", false]], "__split_params__() (bittensor.config static method)": [[44, "bittensor.config.__split_params__", false]], "__split_params__() (bittensor.config.config static method)": [[27, "bittensor.config.config.__split_params__", false]], "__ss58_address_length__ (in module bittensor)": [[44, "bittensor.__ss58_address_length__", false]], "__ss58_format__ (in module bittensor)": [[44, "bittensor.__ss58_format__", false]], "__str__() (bittensor.axon method)": [[44, "bittensor.axon.__str__", false]], "__str__() (bittensor.axon.axon method)": [[0, "bittensor.axon.axon.__str__", false]], "__str__() (bittensor.axoninfo method)": [[44, "bittensor.AxonInfo.__str__", false]], "__str__() (bittensor.balance method)": [[44, "bittensor.Balance.__str__", false]], "__str__() (bittensor.chain_data.axoninfo method)": [[6, "bittensor.chain_data.AxonInfo.__str__", false]], "__str__() (bittensor.config method)": [[44, "bittensor.config.__str__", false]], "__str__() (bittensor.config.config method)": [[27, "bittensor.config.config.__str__", false]], "__str__() (bittensor.dendrite method)": [[44, "bittensor.dendrite.__str__", false]], "__str__() (bittensor.dendrite.dendrite method)": [[29, "bittensor.dendrite.dendrite.__str__", false]], "__str__() (bittensor.dendrite.dendritemixin method)": [[29, "bittensor.dendrite.DendriteMixin.__str__", false], [29, "id13", false]], "__str__() (bittensor.keyfile method)": [[44, "bittensor.keyfile.__str__", false]], "__str__() (bittensor.keyfile.keyfile method)": [[45, "bittensor.keyfile.keyfile.__str__", false]], "__str__() (bittensor.keyfile.mockkeyfile method)": [[45, "bittensor.keyfile.Mockkeyfile.__str__", false]], "__str__() (bittensor.metagraph.metagraphmixin method)": [[46, "bittensor.metagraph.MetagraphMixin.__str__", false]], "__str__() (bittensor.mock.keyfile_mock.mockkeyfile method)": [[48, "bittensor.mock.keyfile_mock.MockKeyfile.__str__", false]], "__str__() (bittensor.mockkeyfile method)": [[44, "bittensor.MockKeyfile.__str__", false], [44, "bittensor.Mockkeyfile.__str__", false]], "__str__() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.__str__", false], [44, "bittensor.subtensor.__str__", false]], "__str__() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.__str__", false]], "__str__() (bittensor.utils.balance.balance method)": [[60, "bittensor.utils.balance.Balance.__str__", false]], "__str__() (bittensor.wallet method)": [[44, "bittensor.wallet.__str__", false]], "__str__() (bittensor.wallet.wallet method)": [[70, "bittensor.wallet.wallet.__str__", false]], "__str_rao__() (bittensor.balance method)": [[44, "bittensor.Balance.__str_rao__", false]], "__str_rao__() (bittensor.utils.balance.balance method)": [[60, "bittensor.utils.balance.Balance.__str_rao__", false]], "__sub__() (bittensor.balance method)": [[44, "bittensor.Balance.__sub__", false]], "__sub__() (bittensor.utils.balance.balance method)": [[60, "bittensor.utils.balance.Balance.__sub__", false]], "__tao_symbol__ (in module bittensor)": [[44, "bittensor.__tao_symbol__", false]], "__trace_on__ (bittensor.btlogging.loggingmachine property)": [[4, "bittensor.btlogging.LoggingMachine.__trace_on__", false]], "__trace_on__ (bittensor.btlogging.loggingmachine.loggingmachine property)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.__trace_on__", false]], "__truediv__() (bittensor.balance method)": [[44, "bittensor.Balance.__truediv__", false]], "__truediv__() (bittensor.utils.balance.balance method)": [[60, "bittensor.utils.balance.Balance.__truediv__", false]], "__type_registry__ (in module bittensor)": [[44, "bittensor.__type_registry__", false]], "__use_console__ (in module bittensor)": [[44, "bittensor.__use_console__", false]], "__version__ (in module bittensor)": [[44, "bittensor.__version__", false]], "__version_as_int__ (in module bittensor)": [[44, "bittensor.__version_as_int__", false]], "__version_info__ (in module bittensor)": [[44, "bittensor.__version_info__", false]], "_add_torch() (bittensor.tensor.dtypes method)": [[55, "bittensor.tensor.DTypes._add_torch", false]], "_adjust_thread_count() (bittensor.prioritythreadpoolexecutor method)": [[44, "bittensor.PriorityThreadPoolExecutor._adjust_thread_count", false]], "_adjust_thread_count() (bittensor.threadpool.prioritythreadpoolexecutor method)": [[56, "bittensor.threadpool.PriorityThreadPoolExecutor._adjust_thread_count", false]], "_assign_neurons() (bittensor.metagraph.metagraphmixin method)": [[46, "bittensor.metagraph.MetagraphMixin._assign_neurons", false]], "_broken (bittensor.prioritythreadpoolexecutor attribute)": [[44, "bittensor.PriorityThreadPoolExecutor._broken", false]], "_broken (bittensor.threadpool.prioritythreadpoolexecutor attribute)": [[56, "bittensor.threadpool.PriorityThreadPoolExecutor._broken", false]], "_bt_dir (in module bittensor.utils.subtensor)": [[65, "bittensor.utils.subtensor._BT_DIR", false]], "_check_for_newest_block_and_update() (in module bittensor.utils.registration)": [[64, "bittensor.utils.registration._check_for_newest_block_and_update", false]], "_check_threshold_amount() (in module bittensor.extrinsics.staking)": [[41, "bittensor.extrinsics.staking._check_threshold_amount", false]], "_coldkey (bittensor.wallet attribute)": [[44, "bittensor.wallet._coldkey", false]], "_coldkey (bittensor.wallet.wallet attribute)": [[70, "bittensor.wallet.wallet._coldkey", false]], "_coldkeypub (bittensor.wallet attribute)": [[44, "bittensor.wallet._coldkeypub", false]], "_coldkeypub (bittensor.wallet.wallet attribute)": [[70, "bittensor.wallet.wallet._coldkeypub", false]], "_config (bittensor.btlogging.loggingmachine attribute)": [[4, "bittensor.btlogging.LoggingMachine._config", false]], "_config (bittensor.btlogging.loggingmachine.loggingmachine attribute)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine._config", false]], "_config (bittensor.config attribute)": [[44, "bittensor.config._config", false]], "_config (bittensor.config.config attribute)": [[27, "bittensor.config.config._config", false]], "_configure_handlers() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine._configure_handlers", false]], "_configure_handlers() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine._configure_handlers", false]], "_connection_timeout (bittensor.subtensor attribute)": [[44, "bittensor.Subtensor._connection_timeout", false], [44, "bittensor.subtensor._connection_timeout", false]], "_connection_timeout (bittensor.subtensor.subtensor attribute)": [[53, "bittensor.subtensor.Subtensor._connection_timeout", false]], "_convert_to_balance() (bittensor.mock.mocksubtensor static method)": [[47, "bittensor.mock.MockSubtensor._convert_to_balance", false]], "_convert_to_balance() (bittensor.mock.subtensor_mock.mocksubtensor static method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor._convert_to_balance", false]], "_convert_to_balance() (bittensor.mocksubtensor static method)": [[44, "bittensor.MockSubtensor._convert_to_balance", false]], "_counter (bittensor.prioritythreadpoolexecutor attribute)": [[44, "bittensor.PriorityThreadPoolExecutor._counter", false]], "_counter (bittensor.threadpool.prioritythreadpoolexecutor attribute)": [[56, "bittensor.threadpool.PriorityThreadPoolExecutor._counter", false]], "_create_and_start_listener() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine._create_and_start_listener", false]], "_create_and_start_listener() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine._create_and_start_listener", false]], "_create_file_handler() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine._create_file_handler", false]], "_create_file_handler() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine._create_file_handler", false]], "_create_seal_hash() (in module bittensor.utils.registration)": [[64, "bittensor.utils.registration._create_seal_hash", false]], "_create_tensor() (bittensor.metagraph.metagraphmixin static method)": [[46, "bittensor.metagraph.MetagraphMixin._create_tensor", false]], "_cudasolver (class in bittensor.utils.registration)": [[64, "bittensor.utils.registration._CUDASolver", false]], "_deinitialize_bt_logger() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine._deinitialize_bt_logger", false]], "_deinitialize_bt_logger() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine._deinitialize_bt_logger", false]], "_do_associate_ips() (bittensor.subtensor method)": [[44, "bittensor.Subtensor._do_associate_ips", false], [44, "bittensor.subtensor._do_associate_ips", false]], "_do_associate_ips() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor._do_associate_ips", false]], "_do_burned_register() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor._do_burned_register", false]], "_do_burned_register() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor._do_burned_register", false]], "_do_burned_register() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor._do_burned_register", false]], "_do_burned_register() (bittensor.subtensor method)": [[44, "bittensor.Subtensor._do_burned_register", false], [44, "bittensor.subtensor._do_burned_register", false]], "_do_burned_register() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor._do_burned_register", false]], "_do_commit_weights() (bittensor.subtensor method)": [[44, "bittensor.Subtensor._do_commit_weights", false], [44, "bittensor.subtensor._do_commit_weights", false]], "_do_commit_weights() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor._do_commit_weights", false]], "_do_decrease_take() (bittensor.subtensor method)": [[44, "bittensor.Subtensor._do_decrease_take", false], [44, "bittensor.subtensor._do_decrease_take", false]], "_do_decrease_take() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor._do_decrease_take", false]], "_do_delegation() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor._do_delegation", false]], "_do_delegation() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor._do_delegation", false]], "_do_delegation() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor._do_delegation", false]], "_do_delegation() (bittensor.subtensor method)": [[44, "bittensor.Subtensor._do_delegation", false], [44, "bittensor.subtensor._do_delegation", false]], "_do_delegation() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor._do_delegation", false]], "_do_increase_take() (bittensor.subtensor method)": [[44, "bittensor.Subtensor._do_increase_take", false], [44, "bittensor.subtensor._do_increase_take", false]], "_do_increase_take() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor._do_increase_take", false]], "_do_nominate() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor._do_nominate", false]], "_do_nominate() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor._do_nominate", false]], "_do_nominate() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor._do_nominate", false]], "_do_nominate() (bittensor.subtensor method)": [[44, "bittensor.Subtensor._do_nominate", false], [44, "bittensor.subtensor._do_nominate", false]], "_do_nominate() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor._do_nominate", false]], "_do_pow_register() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor._do_pow_register", false]], "_do_pow_register() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor._do_pow_register", false]], "_do_pow_register() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor._do_pow_register", false]], "_do_pow_register() (bittensor.subtensor method)": [[44, "bittensor.Subtensor._do_pow_register", false], [44, "bittensor.subtensor._do_pow_register", false]], "_do_pow_register() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor._do_pow_register", false]], "_do_reveal_weights() (bittensor.subtensor method)": [[44, "bittensor.Subtensor._do_reveal_weights", false], [44, "bittensor.subtensor._do_reveal_weights", false]], "_do_reveal_weights() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor._do_reveal_weights", false]], "_do_root_register() (bittensor.subtensor method)": [[44, "bittensor.Subtensor._do_root_register", false], [44, "bittensor.subtensor._do_root_register", false]], "_do_root_register() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor._do_root_register", false]], "_do_serve_axon() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor._do_serve_axon", false]], "_do_serve_axon() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor._do_serve_axon", false]], "_do_serve_axon() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor._do_serve_axon", false]], "_do_serve_axon() (bittensor.subtensor method)": [[44, "bittensor.Subtensor._do_serve_axon", false], [44, "bittensor.subtensor._do_serve_axon", false]], "_do_serve_axon() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor._do_serve_axon", false]], "_do_serve_prometheus() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor._do_serve_prometheus", false]], "_do_serve_prometheus() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor._do_serve_prometheus", false]], "_do_serve_prometheus() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor._do_serve_prometheus", false]], "_do_serve_prometheus() (bittensor.subtensor method)": [[44, "bittensor.Subtensor._do_serve_prometheus", false], [44, "bittensor.subtensor._do_serve_prometheus", false]], "_do_serve_prometheus() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor._do_serve_prometheus", false]], "_do_set_childkey_take() (bittensor.subtensor method)": [[44, "bittensor.Subtensor._do_set_childkey_take", false], [44, "bittensor.subtensor._do_set_childkey_take", false]], "_do_set_childkey_take() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor._do_set_childkey_take", false]], "_do_set_children() (bittensor.subtensor method)": [[44, "bittensor.Subtensor._do_set_children", false], [44, "bittensor.subtensor._do_set_children", false]], "_do_set_children() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor._do_set_children", false]], "_do_set_root_weights() (bittensor.subtensor method)": [[44, "bittensor.Subtensor._do_set_root_weights", false], [44, "bittensor.subtensor._do_set_root_weights", false]], "_do_set_root_weights() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor._do_set_root_weights", false]], "_do_set_weights() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor._do_set_weights", false]], "_do_set_weights() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor._do_set_weights", false]], "_do_set_weights() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor._do_set_weights", false]], "_do_set_weights() (bittensor.subtensor method)": [[44, "bittensor.Subtensor._do_set_weights", false], [44, "bittensor.subtensor._do_set_weights", false]], "_do_set_weights() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor._do_set_weights", false]], "_do_stake() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor._do_stake", false]], "_do_stake() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor._do_stake", false]], "_do_stake() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor._do_stake", false]], "_do_stake() (bittensor.subtensor method)": [[44, "bittensor.Subtensor._do_stake", false], [44, "bittensor.subtensor._do_stake", false]], "_do_stake() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor._do_stake", false]], "_do_swap_hotkey() (bittensor.subtensor method)": [[44, "bittensor.Subtensor._do_swap_hotkey", false], [44, "bittensor.subtensor._do_swap_hotkey", false]], "_do_swap_hotkey() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor._do_swap_hotkey", false]], "_do_transfer() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor._do_transfer", false]], "_do_transfer() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor._do_transfer", false]], "_do_transfer() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor._do_transfer", false]], "_do_transfer() (bittensor.subtensor method)": [[44, "bittensor.Subtensor._do_transfer", false], [44, "bittensor.subtensor._do_transfer", false]], "_do_transfer() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor._do_transfer", false]], "_do_undelegation() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor._do_undelegation", false]], "_do_undelegation() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor._do_undelegation", false]], "_do_undelegation() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor._do_undelegation", false]], "_do_undelegation() (bittensor.subtensor method)": [[44, "bittensor.Subtensor._do_undelegation", false], [44, "bittensor.subtensor._do_undelegation", false]], "_do_undelegation() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor._do_undelegation", false]], "_do_unstake() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor._do_unstake", false]], "_do_unstake() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor._do_unstake", false]], "_do_unstake() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor._do_unstake", false]], "_do_unstake() (bittensor.subtensor method)": [[44, "bittensor.Subtensor._do_unstake", false], [44, "bittensor.subtensor._do_unstake", false]], "_do_unstake() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor._do_unstake", false]], "_enable_file_logging() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine._enable_file_logging", false]], "_enable_file_logging() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine._enable_file_logging", false]], "_enable_initial_state() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine._enable_initial_state", false]], "_enable_initial_state() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine._enable_initial_state", false]], "_encode_params() (bittensor.subtensor method)": [[44, "bittensor.Subtensor._encode_params", false], [44, "bittensor.subtensor._encode_params", false]], "_encode_params() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor._encode_params", false]], "_errors_file_path (in module bittensor.utils.subtensor)": [[65, "bittensor.utils.subtensor._ERRORS_FILE_PATH", false]], "_extract_dtype (bittensor.tensor attribute)": [[44, "bittensor.Tensor._extract_dtype", false]], "_extract_dtype (bittensor.tensor.tensor attribute)": [[55, "bittensor.tensor.Tensor._extract_dtype", false]], "_extract_header_size (bittensor.synapse attribute)": [[44, "bittensor.Synapse._extract_header_size", false]], "_extract_header_size (bittensor.synapse.synapse attribute)": [[54, "bittensor.synapse.Synapse._extract_header_size", false]], "_extract_logging_config() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine._extract_logging_config", false]], "_extract_logging_config() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine._extract_logging_config", false]], "_extract_nonce (bittensor.synapse.terminalinfo attribute)": [[54, "bittensor.synapse.TerminalInfo._extract_nonce", false]], "_extract_nonce (bittensor.terminalinfo attribute)": [[44, "bittensor.TerminalInfo._extract_nonce", false]], "_extract_port (bittensor.synapse.terminalinfo attribute)": [[54, "bittensor.synapse.TerminalInfo._extract_port", false]], "_extract_port (bittensor.terminalinfo attribute)": [[44, "bittensor.TerminalInfo._extract_port", false]], "_extract_process_time (bittensor.synapse.terminalinfo attribute)": [[54, "bittensor.synapse.TerminalInfo._extract_process_time", false]], "_extract_process_time (bittensor.terminalinfo attribute)": [[44, "bittensor.TerminalInfo._extract_process_time", false]], "_extract_shape (bittensor.tensor attribute)": [[44, "bittensor.Tensor._extract_shape", false]], "_extract_shape (bittensor.tensor.tensor attribute)": [[55, "bittensor.tensor.Tensor._extract_shape", false]], "_extract_status_code (bittensor.synapse.terminalinfo attribute)": [[54, "bittensor.synapse.TerminalInfo._extract_status_code", false]], "_extract_status_code (bittensor.terminalinfo attribute)": [[44, "bittensor.TerminalInfo._extract_status_code", false]], "_extract_timeout (bittensor.synapse attribute)": [[44, "bittensor.Synapse._extract_timeout", false]], "_extract_timeout (bittensor.synapse.synapse attribute)": [[54, "bittensor.synapse.Synapse._extract_timeout", false]], "_extract_total_size (bittensor.synapse attribute)": [[44, "bittensor.Synapse._extract_total_size", false]], "_extract_total_size (bittensor.synapse.synapse attribute)": [[54, "bittensor.synapse.Synapse._extract_total_size", false]], "_extract_version (bittensor.synapse.terminalinfo attribute)": [[54, "bittensor.synapse.TerminalInfo._extract_version", false]], "_extract_version (bittensor.terminalinfo attribute)": [[44, "bittensor.TerminalInfo._extract_version", false]], "_file_formatter (bittensor.btlogging.loggingmachine attribute)": [[4, "bittensor.btlogging.LoggingMachine._file_formatter", false]], "_file_formatter (bittensor.btlogging.loggingmachine.loggingmachine attribute)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine._file_formatter", false]], "_find_event_attributes_in_extrinsic_receipt() (in module bittensor.extrinsics.network)": [[34, "bittensor.extrinsics.network._find_event_attributes_in_extrinsic_receipt", false]], "_force (bittensor.utils.registration._usingspawnstartmethod attribute)": [[64, "bittensor.utils.registration._UsingSpawnStartMethod._force", false]], "_get_axon_info() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor._get_axon_info", false]], "_get_axon_info() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor._get_axon_info", false]], "_get_axon_info() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor._get_axon_info", false]], "_get_block_with_retry() (in module bittensor.utils.registration)": [[64, "bittensor.utils.registration._get_block_with_retry", false]], "_get_cached_model_json_schema() (bittensor.synapse class method)": [[44, "bittensor.Synapse._get_cached_model_json_schema", false]], "_get_cached_model_json_schema() (bittensor.synapse.synapse class method)": [[54, "bittensor.synapse.Synapse._get_cached_model_json_schema", false]], "_get_coldkey_ss58_addresses_for_path() (in module bittensor.commands.wallets)": [[25, "bittensor.commands.wallets._get_coldkey_ss58_addresses_for_path", false]], "_get_coldkey_wallets_for_path() (in module bittensor.commands.delegates)": [[9, "bittensor.commands.delegates._get_coldkey_wallets_for_path", false]], "_get_coldkey_wallets_for_path() (in module bittensor.commands.inspect)": [[12, "bittensor.commands.inspect._get_coldkey_wallets_for_path", false]], "_get_coldkey_wallets_for_path() (in module bittensor.commands.stake)": [[21, "bittensor.commands.stake._get_coldkey_wallets_for_path", false]], "_get_coldkey_wallets_for_path() (in module bittensor.commands.wallets)": [[25, "bittensor.commands.wallets._get_coldkey_wallets_for_path", false]], "_get_de_registered_stake_for_coldkey_wallet() (bittensor.commands.overview.overviewcommand static method)": [[17, "bittensor.commands.overview.OverviewCommand._get_de_registered_stake_for_coldkey_wallet", false]], "_get_de_registered_stake_for_coldkey_wallet() (bittensor.commands.overviewcommand static method)": [[11, "bittensor.commands.OverviewCommand._get_de_registered_stake_for_coldkey_wallet", false]], "_get_delegates_details_from_github() (in module bittensor.commands.utils)": [[24, "bittensor.commands.utils._get_delegates_details_from_github", false]], "_get_endpoint_url() (bittensor.dendrite.dendritemixin method)": [[29, "bittensor.dendrite.DendriteMixin._get_endpoint_url", false]], "_get_errors_from_cache() (in module bittensor.utils.subtensor)": [[65, "bittensor.utils.subtensor._get_errors_from_cache", false]], "_get_errors_from_pallet() (in module bittensor.utils.subtensor)": [[65, "bittensor.utils.subtensor._get_errors_from_pallet", false]], "_get_hotkey_wallets_for_wallet() (in module bittensor.commands.inspect)": [[12, "bittensor.commands.inspect._get_hotkey_wallets_for_wallet", false]], "_get_hotkey_wallets_for_wallet() (in module bittensor.commands.stake)": [[21, "bittensor.commands.stake._get_hotkey_wallets_for_wallet", false]], "_get_hotkeys() (bittensor.commands.overview.overviewcommand static method)": [[17, "bittensor.commands.overview.OverviewCommand._get_hotkeys", false]], "_get_hotkeys() (bittensor.commands.overviewcommand static method)": [[11, "bittensor.commands.OverviewCommand._get_hotkeys", false]], "_get_hyperparameter() (bittensor.subtensor method)": [[44, "bittensor.Subtensor._get_hyperparameter", false], [44, "bittensor.subtensor._get_hyperparameter", false]], "_get_hyperparameter() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor._get_hyperparameter", false]], "_get_key_address() (bittensor.commands.overview.overviewcommand static method)": [[17, "bittensor.commands.overview.OverviewCommand._get_key_address", false]], "_get_key_address() (bittensor.commands.overviewcommand static method)": [[11, "bittensor.commands.OverviewCommand._get_key_address", false]], "_get_most_recent_storage() (bittensor.mock.mocksubtensor static method)": [[47, "bittensor.mock.MockSubtensor._get_most_recent_storage", false]], "_get_most_recent_storage() (bittensor.mock.subtensor_mock.mocksubtensor static method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor._get_most_recent_storage", false]], "_get_most_recent_storage() (bittensor.mocksubtensor static method)": [[44, "bittensor.MockSubtensor._get_most_recent_storage", false]], "_get_neurons_for_netuid() (bittensor.commands.overview.overviewcommand static method)": [[17, "bittensor.commands.overview.OverviewCommand._get_neurons_for_netuid", false]], "_get_neurons_for_netuid() (bittensor.commands.overviewcommand static method)": [[11, "bittensor.commands.OverviewCommand._get_neurons_for_netuid", false]], "_get_prometheus_info() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor._get_prometheus_info", false]], "_get_prometheus_info() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor._get_prometheus_info", false]], "_get_prometheus_info() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor._get_prometheus_info", false]], "_get_real_torch() (in module bittensor.utils.registration)": [[64, "bittensor.utils.registration._get_real_torch", false]], "_get_substrate() (bittensor.subtensor method)": [[44, "bittensor.Subtensor._get_substrate", false], [44, "bittensor.subtensor._get_substrate", false]], "_get_substrate() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor._get_substrate", false]], "_get_total_balance() (bittensor.commands.overview.overviewcommand static method)": [[17, "bittensor.commands.overview.OverviewCommand._get_total_balance", false]], "_get_total_balance() (bittensor.commands.overviewcommand static method)": [[11, "bittensor.commands.OverviewCommand._get_total_balance", false]], "_get_version_file_path() (in module bittensor.utils.version)": [[67, "bittensor.utils.version._get_version_file_path", false]], "_get_version_from_file() (in module bittensor.utils.version)": [[67, "bittensor.utils.version._get_version_from_file", false]], "_get_version_from_pypi() (in module bittensor.utils.version)": [[67, "bittensor.utils.version._get_version_from_pypi", false]], "_handle_type_default() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor._handle_type_default", false]], "_handle_type_default() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor._handle_type_default", false]], "_handle_type_default() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor._handle_type_default", false]], "_handlers (bittensor.btlogging.loggingmachine attribute)": [[4, "bittensor.btlogging.LoggingMachine._handlers", false]], "_handlers (bittensor.btlogging.loggingmachine.loggingmachine attribute)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine._handlers", false]], "_hash_block_with_hotkey() (in module bittensor.utils.registration)": [[64, "bittensor.utils.registration._hash_block_with_hotkey", false]], "_hex_bytes_to_u8_list() (in module bittensor.utils.registration)": [[64, "bittensor.utils.registration._hex_bytes_to_u8_list", false]], "_hotkey (bittensor.wallet attribute)": [[44, "bittensor.wallet._hotkey", false]], "_hotkey (bittensor.wallet.wallet attribute)": [[70, "bittensor.wallet.wallet._hotkey", false]], "_idle_semaphore (bittensor.prioritythreadpoolexecutor attribute)": [[44, "bittensor.PriorityThreadPoolExecutor._idle_semaphore", false]], "_idle_semaphore (bittensor.threadpool.prioritythreadpoolexecutor attribute)": [[56, "bittensor.threadpool.PriorityThreadPoolExecutor._idle_semaphore", false]], "_initargs (bittensor.prioritythreadpoolexecutor attribute)": [[44, "bittensor.PriorityThreadPoolExecutor._initargs", false]], "_initargs (bittensor.threadpool.prioritythreadpoolexecutor attribute)": [[56, "bittensor.threadpool.PriorityThreadPoolExecutor._initargs", false]], "_initialize_bt_logger() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine._initialize_bt_logger", false]], "_initialize_bt_logger() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine._initialize_bt_logger", false]], "_initialize_subtensor() (bittensor.metagraph.metagraphmixin method)": [[46, "bittensor.metagraph.MetagraphMixin._initialize_subtensor", false]], "_initializer (bittensor.prioritythreadpoolexecutor attribute)": [[44, "bittensor.PriorityThreadPoolExecutor._initializer", false]], "_initializer (bittensor.threadpool.prioritythreadpoolexecutor attribute)": [[56, "bittensor.threadpool.PriorityThreadPoolExecutor._initializer", false]], "_initializer_failed() (bittensor.prioritythreadpoolexecutor method)": [[44, "bittensor.PriorityThreadPoolExecutor._initializer_failed", false]], "_initializer_failed() (bittensor.threadpool.prioritythreadpoolexecutor method)": [[56, "bittensor.threadpool.PriorityThreadPoolExecutor._initializer_failed", false]], "_is_mock (bittensor.mock.wallet_mock.mockwallet attribute)": [[50, "bittensor.mock.wallet_mock.MockWallet._is_mock", false]], "_is_mock (bittensor.mockwallet attribute)": [[44, "bittensor.MockWallet._is_mock", false]], "_listener (bittensor.btlogging.loggingmachine attribute)": [[4, "bittensor.btlogging.LoggingMachine._listener", false]], "_listener (bittensor.btlogging.loggingmachine.loggingmachine attribute)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine._listener", false]], "_log_incoming_response() (bittensor.dendrite.dendritemixin method)": [[29, "bittensor.dendrite.DendriteMixin._log_incoming_response", false]], "_log_outgoing_request() (bittensor.dendrite.dendritemixin method)": [[29, "bittensor.dendrite.DendriteMixin._log_outgoing_request", false]], "_logger (bittensor.btlogging.loggingmachine attribute)": [[4, "bittensor.btlogging.LoggingMachine._logger", false]], "_logger (bittensor.btlogging.loggingmachine.loggingmachine attribute)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine._logger", false]], "_logger (in module bittensor.utils.subtensor)": [[65, "bittensor.utils.subtensor._logger", false]], "_max_workers (bittensor.prioritythreadpoolexecutor attribute)": [[44, "bittensor.PriorityThreadPoolExecutor._max_workers", false]], "_max_workers (bittensor.threadpool.prioritythreadpoolexecutor attribute)": [[56, "bittensor.threadpool.PriorityThreadPoolExecutor._max_workers", false]], "_may_overwrite() (bittensor.keyfile method)": [[44, "bittensor.keyfile._may_overwrite", false]], "_may_overwrite() (bittensor.keyfile.keyfile method)": [[45, "bittensor.keyfile.keyfile._may_overwrite", false]], "_merge() (bittensor.config class method)": [[44, "bittensor.config._merge", false]], "_merge() (bittensor.config.config class method)": [[27, "bittensor.config.config._merge", false]], "_mock_data (bittensor.keyfile.mockkeyfile attribute)": [[45, "bittensor.keyfile.Mockkeyfile._mock_data", false]], "_mock_data (bittensor.mock.keyfile_mock.mockkeyfile attribute)": [[48, "bittensor.mock.keyfile_mock.MockKeyfile._mock_data", false]], "_mock_data (bittensor.mockkeyfile attribute)": [[44, "bittensor.MockKeyfile._mock_data", false], [44, "bittensor.Mockkeyfile._mock_data", false]], "_mock_keypair (bittensor.keyfile.mockkeyfile attribute)": [[45, "bittensor.keyfile.Mockkeyfile._mock_keypair", false]], "_mock_keypair (bittensor.mock.keyfile_mock.mockkeyfile attribute)": [[48, "bittensor.mock.keyfile_mock.MockKeyfile._mock_keypair", false]], "_mock_keypair (bittensor.mockkeyfile attribute)": [[44, "bittensor.MockKeyfile._mock_keypair", false], [44, "bittensor.Mockkeyfile._mock_keypair", false]], "_mocked_coldkey_keyfile (bittensor.mock.wallet_mock.mockwallet attribute)": [[50, "bittensor.mock.wallet_mock.MockWallet._mocked_coldkey_keyfile", false]], "_mocked_coldkey_keyfile (bittensor.mockwallet attribute)": [[44, "bittensor.MockWallet._mocked_coldkey_keyfile", false]], "_mocked_hotkey_keyfile (bittensor.mock.wallet_mock.mockwallet attribute)": [[50, "bittensor.mock.wallet_mock.MockWallet._mocked_hotkey_keyfile", false]], "_mocked_hotkey_keyfile (bittensor.mockwallet attribute)": [[44, "bittensor.MockWallet._mocked_hotkey_keyfile", false]], "_model_json_schema (bittensor.synapse attribute)": [[44, "bittensor.Synapse._model_json_schema", false]], "_model_json_schema (bittensor.synapse.synapse attribute)": [[54, "bittensor.synapse.Synapse._model_json_schema", false]], "_neuron_subnet_exists() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor._neuron_subnet_exists", false]], "_neuron_subnet_exists() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor._neuron_subnet_exists", false]], "_neuron_subnet_exists() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor._neuron_subnet_exists", false]], "_null_neuron() (bittensor.subtensor static method)": [[44, "bittensor.Subtensor._null_neuron", false], [44, "bittensor.subtensor._null_neuron", false]], "_null_neuron() (bittensor.subtensor.subtensor static method)": [[53, "bittensor.subtensor.Subtensor._null_neuron", false]], "_old_start_method (bittensor.utils.registration._usingspawnstartmethod attribute)": [[64, "bittensor.utils.registration._UsingSpawnStartMethod._old_start_method", false]], "_primary_loggers (bittensor.btlogging.loggingmachine attribute)": [[4, "bittensor.btlogging.LoggingMachine._primary_loggers", false]], "_primary_loggers (bittensor.btlogging.loggingmachine.loggingmachine attribute)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine._primary_loggers", false]], "_process_neuron_results() (bittensor.commands.overview.overviewcommand static method)": [[17, "bittensor.commands.overview.OverviewCommand._process_neuron_results", false]], "_process_neuron_results() (bittensor.commands.overviewcommand static method)": [[11, "bittensor.commands.OverviewCommand._process_neuron_results", false]], "_process_root_weights() (bittensor.metagraph.metagraphmixin method)": [[46, "bittensor.metagraph.MetagraphMixin._process_root_weights", false]], "_process_weights_or_bonds() (bittensor.metagraph.metagraphmixin method)": [[46, "bittensor.metagraph.MetagraphMixin._process_weights_or_bonds", false]], "_queue (bittensor.btlogging.loggingmachine attribute)": [[4, "bittensor.btlogging.LoggingMachine._queue", false]], "_queue (bittensor.btlogging.loggingmachine.loggingmachine attribute)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine._queue", false]], "_read_keyfile_data_from_file() (bittensor.keyfile method)": [[44, "bittensor.keyfile._read_keyfile_data_from_file", false]], "_read_keyfile_data_from_file() (bittensor.keyfile.keyfile method)": [[45, "bittensor.keyfile.keyfile._read_keyfile_data_from_file", false]], "_records (bittensor.mock.subtensor_mock.mockmapresult attribute)": [[49, "bittensor.mock.subtensor_mock.MockMapResult._records", false]], "_register_neuron() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor._register_neuron", false]], "_register_neuron() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor._register_neuron", false]], "_register_neuron() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor._register_neuron", false]], "_registration_diff_pack() (in module bittensor.utils.registration)": [[64, "bittensor.utils.registration._registration_diff_pack", false]], "_registration_diff_unpack() (in module bittensor.utils.registration)": [[64, "bittensor.utils.registration._registration_diff_unpack", false]], "_remove_private_keys() (bittensor.config static method)": [[44, "bittensor.config._remove_private_keys", false]], "_remove_private_keys() (bittensor.config.config static method)": [[27, "bittensor.config.config._remove_private_keys", false]], "_run() (bittensor.commands.check_coldkey_swap.checkcoldkeyswapcommand static method)": [[8, "bittensor.commands.check_coldkey_swap.CheckColdKeySwapCommand._run", false]], "_run() (bittensor.commands.checkcoldkeyswapcommand static method)": [[11, "bittensor.commands.CheckColdKeySwapCommand._run", false]], "_run() (bittensor.commands.commitweightcommand static method)": [[11, "bittensor.commands.CommitWeightCommand._run", false]], "_run() (bittensor.commands.delegates.delegateunstakecommand method)": [[9, "bittensor.commands.delegates.DelegateUnstakeCommand._run", false]], "_run() (bittensor.commands.delegates.listdelegatescommand static method)": [[9, "bittensor.commands.delegates.ListDelegatesCommand._run", false]], "_run() (bittensor.commands.delegates.mydelegatescommand static method)": [[9, "bittensor.commands.delegates.MyDelegatesCommand._run", false]], "_run() (bittensor.commands.delegates.nominatecommand static method)": [[9, "bittensor.commands.delegates.NominateCommand._run", false]], "_run() (bittensor.commands.delegates.settakecommand static method)": [[9, "bittensor.commands.delegates.SetTakeCommand._run", false]], "_run() (bittensor.commands.delegateunstakecommand method)": [[11, "bittensor.commands.DelegateUnstakeCommand._run", false]], "_run() (bittensor.commands.getchildkeytakecommand static method)": [[11, "bittensor.commands.GetChildKeyTakeCommand._run", false]], "_run() (bittensor.commands.getchildrencommand static method)": [[11, "bittensor.commands.GetChildrenCommand._run", false]], "_run() (bittensor.commands.getidentitycommand method)": [[11, "bittensor.commands.GetIdentityCommand._run", false]], "_run() (bittensor.commands.identity.getidentitycommand method)": [[10, "bittensor.commands.identity.GetIdentityCommand._run", false]], "_run() (bittensor.commands.identity.setidentitycommand method)": [[10, "bittensor.commands.identity.SetIdentityCommand._run", false]], "_run() (bittensor.commands.inspect.inspectcommand static method)": [[12, "bittensor.commands.inspect.InspectCommand._run", false]], "_run() (bittensor.commands.inspectcommand static method)": [[11, "bittensor.commands.InspectCommand._run", false]], "_run() (bittensor.commands.list.listcommand static method)": [[13, "bittensor.commands.list.ListCommand._run", false]], "_run() (bittensor.commands.listcommand static method)": [[11, "bittensor.commands.ListCommand._run", false]], "_run() (bittensor.commands.listdelegatescommand static method)": [[11, "bittensor.commands.ListDelegatesCommand._run", false]], "_run() (bittensor.commands.metagraph.metagraphcommand method)": [[14, "bittensor.commands.metagraph.MetagraphCommand._run", false]], "_run() (bittensor.commands.metagraphcommand method)": [[11, "bittensor.commands.MetagraphCommand._run", false]], "_run() (bittensor.commands.mydelegatescommand static method)": [[11, "bittensor.commands.MyDelegatesCommand._run", false]], "_run() (bittensor.commands.network.registersubnetworkcommand static method)": [[16, "bittensor.commands.network.RegisterSubnetworkCommand._run", false]], "_run() (bittensor.commands.network.subnetgethyperparamscommand static method)": [[16, "bittensor.commands.network.SubnetGetHyperparamsCommand._run", false]], "_run() (bittensor.commands.network.subnethyperparamscommand static method)": [[16, "bittensor.commands.network.SubnetHyperparamsCommand._run", false]], "_run() (bittensor.commands.network.subnetlistcommand static method)": [[16, "bittensor.commands.network.SubnetListCommand._run", false]], "_run() (bittensor.commands.network.subnetlockcostcommand static method)": [[16, "bittensor.commands.network.SubnetLockCostCommand._run", false]], "_run() (bittensor.commands.network.subnetsudocommand static method)": [[16, "bittensor.commands.network.SubnetSudoCommand._run", false]], "_run() (bittensor.commands.nominatecommand static method)": [[11, "bittensor.commands.NominateCommand._run", false]], "_run() (bittensor.commands.overview.overviewcommand method)": [[17, "bittensor.commands.overview.OverviewCommand._run", false]], "_run() (bittensor.commands.overviewcommand method)": [[11, "bittensor.commands.OverviewCommand._run", false]], "_run() (bittensor.commands.powregistercommand static method)": [[11, "bittensor.commands.PowRegisterCommand._run", false]], "_run() (bittensor.commands.proposalscommand static method)": [[11, "bittensor.commands.ProposalsCommand._run", false]], "_run() (bittensor.commands.register.powregistercommand static method)": [[18, "bittensor.commands.register.PowRegisterCommand._run", false]], "_run() (bittensor.commands.register.registercommand static method)": [[18, "bittensor.commands.register.RegisterCommand._run", false]], "_run() (bittensor.commands.register.runfaucetcommand static method)": [[18, "bittensor.commands.register.RunFaucetCommand._run", false]], "_run() (bittensor.commands.register.swaphotkeycommand static method)": [[18, "bittensor.commands.register.SwapHotkeyCommand._run", false]], "_run() (bittensor.commands.registercommand static method)": [[11, "bittensor.commands.RegisterCommand._run", false]], "_run() (bittensor.commands.revealweightcommand static method)": [[11, "bittensor.commands.RevealWeightCommand._run", false]], "_run() (bittensor.commands.revokechildrencommand static method)": [[11, "bittensor.commands.RevokeChildrenCommand._run", false]], "_run() (bittensor.commands.root.rootgetweightscommand static method)": [[19, "bittensor.commands.root.RootGetWeightsCommand._run", false]], "_run() (bittensor.commands.root.rootlist static method)": [[19, "bittensor.commands.root.RootList._run", false]], "_run() (bittensor.commands.root.rootregistercommand static method)": [[19, "bittensor.commands.root.RootRegisterCommand._run", false]], "_run() (bittensor.commands.root.rootsetboostcommand static method)": [[19, "bittensor.commands.root.RootSetBoostCommand._run", false]], "_run() (bittensor.commands.root.rootsetslashcommand static method)": [[19, "bittensor.commands.root.RootSetSlashCommand._run", false]], "_run() (bittensor.commands.root.rootsetweightscommand static method)": [[19, "bittensor.commands.root.RootSetWeightsCommand._run", false]], "_run() (bittensor.commands.rootgetweightscommand static method)": [[11, "bittensor.commands.RootGetWeightsCommand._run", false]], "_run() (bittensor.commands.rootlist static method)": [[11, "bittensor.commands.RootList._run", false]], "_run() (bittensor.commands.rootregistercommand static method)": [[11, "bittensor.commands.RootRegisterCommand._run", false]], "_run() (bittensor.commands.rootsetboostcommand static method)": [[11, "bittensor.commands.RootSetBoostCommand._run", false]], "_run() (bittensor.commands.rootsetslashcommand static method)": [[11, "bittensor.commands.RootSetSlashCommand._run", false]], "_run() (bittensor.commands.rootsetweightscommand static method)": [[11, "bittensor.commands.RootSetWeightsCommand._run", false]], "_run() (bittensor.commands.runfaucetcommand static method)": [[11, "bittensor.commands.RunFaucetCommand._run", false]], "_run() (bittensor.commands.senate.proposalscommand static method)": [[20, "bittensor.commands.senate.ProposalsCommand._run", false]], "_run() (bittensor.commands.senate.senatecommand static method)": [[20, "bittensor.commands.senate.SenateCommand._run", false]], "_run() (bittensor.commands.senate.senateleavecommand static method)": [[20, "bittensor.commands.senate.SenateLeaveCommand._run", false]], "_run() (bittensor.commands.senate.senateregistercommand static method)": [[20, "bittensor.commands.senate.SenateRegisterCommand._run", false]], "_run() (bittensor.commands.senate.showvotescommand static method)": [[20, "bittensor.commands.senate.ShowVotesCommand._run", false]], "_run() (bittensor.commands.senate.votecommand static method)": [[20, "bittensor.commands.senate.VoteCommand._run", false]], "_run() (bittensor.commands.senatecommand static method)": [[11, "bittensor.commands.SenateCommand._run", false]], "_run() (bittensor.commands.senateleavecommand static method)": [[11, "bittensor.commands.SenateLeaveCommand._run", false]], "_run() (bittensor.commands.senateregistercommand static method)": [[11, "bittensor.commands.SenateRegisterCommand._run", false]], "_run() (bittensor.commands.setchildkeytakecommand static method)": [[11, "bittensor.commands.SetChildKeyTakeCommand._run", false]], "_run() (bittensor.commands.setchildrencommand static method)": [[11, "bittensor.commands.SetChildrenCommand._run", false]], "_run() (bittensor.commands.setidentitycommand method)": [[11, "bittensor.commands.SetIdentityCommand._run", false]], "_run() (bittensor.commands.settakecommand static method)": [[11, "bittensor.commands.SetTakeCommand._run", false]], "_run() (bittensor.commands.showvotescommand static method)": [[11, "bittensor.commands.ShowVotesCommand._run", false]], "_run() (bittensor.commands.stake.getchildkeytakecommand static method)": [[21, "bittensor.commands.stake.GetChildKeyTakeCommand._run", false]], "_run() (bittensor.commands.stake.getchildrencommand static method)": [[21, "bittensor.commands.stake.GetChildrenCommand._run", false]], "_run() (bittensor.commands.stake.setchildkeytakecommand static method)": [[21, "bittensor.commands.stake.SetChildKeyTakeCommand._run", false]], "_run() (bittensor.commands.stake.setchildrencommand static method)": [[21, "bittensor.commands.stake.SetChildrenCommand._run", false]], "_run() (bittensor.commands.stake.stakecommand static method)": [[21, "bittensor.commands.stake.StakeCommand._run", false]], "_run() (bittensor.commands.stake.stakeshow static method)": [[21, "bittensor.commands.stake.StakeShow._run", false]], "_run() (bittensor.commands.stakecommand static method)": [[11, "bittensor.commands.StakeCommand._run", false]], "_run() (bittensor.commands.stakeshow static method)": [[11, "bittensor.commands.StakeShow._run", false]], "_run() (bittensor.commands.swaphotkeycommand static method)": [[11, "bittensor.commands.SwapHotkeyCommand._run", false]], "_run() (bittensor.commands.transfer.transfercommand static method)": [[22, "bittensor.commands.transfer.TransferCommand._run", false]], "_run() (bittensor.commands.transfercommand static method)": [[11, "bittensor.commands.TransferCommand._run", false]], "_run() (bittensor.commands.unstake.revokechildrencommand static method)": [[23, "bittensor.commands.unstake.RevokeChildrenCommand._run", false]], "_run() (bittensor.commands.unstake.unstakecommand static method)": [[23, "bittensor.commands.unstake.UnStakeCommand._run", false]], "_run() (bittensor.commands.unstakecommand static method)": [[11, "bittensor.commands.UnStakeCommand._run", false]], "_run() (bittensor.commands.votecommand static method)": [[11, "bittensor.commands.VoteCommand._run", false]], "_run() (bittensor.commands.walletbalancecommand static method)": [[11, "bittensor.commands.WalletBalanceCommand._run", false]], "_run() (bittensor.commands.wallets.walletbalancecommand static method)": [[25, "bittensor.commands.wallets.WalletBalanceCommand._run", false]], "_run() (bittensor.commands.weights.commitweightcommand static method)": [[26, "bittensor.commands.weights.CommitWeightCommand._run", false]], "_run() (bittensor.commands.weights.revealweightcommand static method)": [[26, "bittensor.commands.weights.RevealWeightCommand._run", false]], "_save_errors_to_cache() (in module bittensor.utils.subtensor)": [[65, "bittensor.utils.subtensor._save_errors_to_cache", false]], "_seal_meets_difficulty() (in module bittensor.utils.registration)": [[64, "bittensor.utils.registration._seal_meets_difficulty", false]], "_session (bittensor.dendrite.dendritemixin attribute)": [[29, "bittensor.dendrite.DendriteMixin._session", false]], "_set_metagraph_attributes() (bittensor.metagraph.metagraphmixin method)": [[46, "bittensor.metagraph.MetagraphMixin._set_metagraph_attributes", false]], "_set_metagraph_attributes() (bittensor.metagraph.nontorchmetagraph method)": [[46, "bittensor.metagraph.NonTorchMetagraph._set_metagraph_attributes", false]], "_set_metagraph_attributes() (bittensor.metagraph.torchmetagraph method)": [[46, "bittensor.metagraph.TorchMetaGraph._set_metagraph_attributes", false]], "_set_weights_and_bonds() (bittensor.metagraph.metagraphmixin method)": [[46, "bittensor.metagraph.MetagraphMixin._set_weights_and_bonds", false]], "_shutdown (bittensor.prioritythreadpoolexecutor attribute)": [[44, "bittensor.PriorityThreadPoolExecutor._shutdown", false]], "_shutdown (bittensor.threadpool.prioritythreadpoolexecutor attribute)": [[56, "bittensor.threadpool.PriorityThreadPoolExecutor._shutdown", false]], "_shutdown (in module bittensor.threadpool)": [[56, "bittensor.threadpool._shutdown", false]], "_shutdown_lock (bittensor.prioritythreadpoolexecutor attribute)": [[44, "bittensor.PriorityThreadPoolExecutor._shutdown_lock", false]], "_shutdown_lock (bittensor.threadpool.prioritythreadpoolexecutor attribute)": [[56, "bittensor.threadpool.PriorityThreadPoolExecutor._shutdown_lock", false]], "_solve_for_difficulty_fast() (in module bittensor.utils.registration)": [[64, "bittensor.utils.registration._solve_for_difficulty_fast", false]], "_solve_for_difficulty_fast_cuda() (in module bittensor.utils.registration)": [[64, "bittensor.utils.registration._solve_for_difficulty_fast_cuda", false]], "_solve_for_nonce_block() (in module bittensor.utils.registration)": [[64, "bittensor.utils.registration._solve_for_nonce_block", false]], "_solve_for_nonce_block_cuda() (in module bittensor.utils.registration)": [[64, "bittensor.utils.registration._solve_for_nonce_block_cuda", false]], "_solver (class in bittensor.utils.registration)": [[64, "bittensor.utils.registration._Solver", false]], "_solverbase (class in bittensor.utils.registration)": [[64, "bittensor.utils.registration._SolverBase", false]], "_st_build_id (in module bittensor.utils.subtensor)": [[65, "bittensor.utils.subtensor._ST_BUILD_ID", false]], "_stream_formatter (bittensor.btlogging.loggingmachine attribute)": [[4, "bittensor.btlogging.LoggingMachine._stream_formatter", false]], "_stream_formatter (bittensor.btlogging.loggingmachine.loggingmachine attribute)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine._stream_formatter", false]], "_subtensor_errors (bittensor.subtensor attribute)": [[44, "bittensor.Subtensor._subtensor_errors", false], [44, "bittensor.subtensor._subtensor_errors", false]], "_subtensor_errors (bittensor.subtensor.subtensor attribute)": [[53, "bittensor.subtensor.Subtensor._subtensor_errors", false]], "_success() (in module bittensor.btlogging.format)": [[2, "bittensor.btlogging.format._success", false]], "_terminate_workers_and_wait_for_exit() (in module bittensor.utils.registration)": [[64, "bittensor.utils.registration._terminate_workers_and_wait_for_exit", false]], "_thread_name_prefix (bittensor.prioritythreadpoolexecutor attribute)": [[44, "bittensor.PriorityThreadPoolExecutor._thread_name_prefix", false]], "_thread_name_prefix (bittensor.threadpool.prioritythreadpoolexecutor attribute)": [[56, "bittensor.threadpool.PriorityThreadPoolExecutor._thread_name_prefix", false]], "_threads (bittensor.prioritythreadpoolexecutor attribute)": [[44, "bittensor.PriorityThreadPoolExecutor._threads", false]], "_threads (bittensor.threadpool.prioritythreadpoolexecutor attribute)": [[56, "bittensor.threadpool.PriorityThreadPoolExecutor._threads", false]], "_threads_queues (in module bittensor.threadpool)": [[56, "bittensor.threadpool._threads_queues", false]], "_trace() (in module bittensor.btlogging.format)": [[2, "bittensor.btlogging.format._trace", false]], "_unbiased_topk() (in module bittensor.utils)": [[62, "bittensor.utils._unbiased_topk", false]], "_update_curr_block() (in module bittensor.utils.registration)": [[64, "bittensor.utils.registration._update_curr_block", false]], "_user_home_dir (in module bittensor.utils.subtensor)": [[65, "bittensor.utils.subtensor._USER_HOME_DIR", false]], "_usingspawnstartmethod (class in bittensor.utils.registration)": [[64, "bittensor.utils.registration._UsingSpawnStartMethod", false]], "_version_int_base (in module bittensor)": [[44, "bittensor._version_int_base", false]], "_version_split (in module bittensor)": [[44, "bittensor._version_split", false]], "_work_queue (bittensor.prioritythreadpoolexecutor attribute)": [[44, "bittensor.PriorityThreadPoolExecutor._work_queue", false]], "_work_queue (bittensor.threadpool.prioritythreadpoolexecutor attribute)": [[56, "bittensor.threadpool.PriorityThreadPoolExecutor._work_queue", false]], "_worker() (in module bittensor.threadpool)": [[56, "bittensor.threadpool._worker", false]], "_workitem (class in bittensor.threadpool)": [[56, "bittensor.threadpool._WorkItem", false]], "_wrapper_run() (bittensor.axon.fastapithreadedserver method)": [[0, "bittensor.axon.FastAPIThreadedServer._wrapper_run", false]], "_write_keyfile_data_to_file() (bittensor.keyfile method)": [[44, "bittensor.keyfile._write_keyfile_data_to_file", false]], "_write_keyfile_data_to_file() (bittensor.keyfile.keyfile method)": [[45, "bittensor.keyfile.keyfile._write_keyfile_data_to_file", false]], "account (bittensor.mock.subtensor_mock.mocksystemstate attribute)": [[49, "bittensor.mock.subtensor_mock.MockSystemState.Account", false]], "aclose_session() (bittensor.dendrite method)": [[44, "bittensor.dendrite.aclose_session", false]], "aclose_session() (bittensor.dendrite.dendrite method)": [[29, "bittensor.dendrite.dendrite.aclose_session", false]], "aclose_session() (bittensor.dendrite.dendritemixin method)": [[29, "bittensor.dendrite.DendriteMixin.aclose_session", false], [29, "id4", false]], "active (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.active", false]], "active (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.active", false]], "active (bittensor.metagraph.metagraphmixin attribute)": [[46, "bittensor.metagraph.MetagraphMixin.active", false]], "active (bittensor.metagraph.nontorchmetagraph attribute)": [[46, "bittensor.metagraph.NonTorchMetagraph.active", false]], "active (bittensor.metagraph.torchmetagraph attribute)": [[46, "bittensor.metagraph.TorchMetaGraph.active", false]], "active (bittensor.mock.subtensor_mock.mocksubtensorstate attribute)": [[49, "bittensor.mock.subtensor_mock.MockSubtensorState.Active", false]], "active (bittensor.neuroninfo attribute)": [[44, "bittensor.NeuronInfo.active", false]], "active (bittensor.neuroninfolite attribute)": [[44, "bittensor.NeuronInfoLite.active", false]], "activity_cutoff (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.activity_cutoff", false]], "activity_cutoff (bittensor.subnethyperparameters attribute)": [[44, "bittensor.SubnetHyperparameters.activity_cutoff", false]], "add_args() (bittensor.axon class method)": [[44, "bittensor.axon.add_args", false]], "add_args() (bittensor.axon.axon class method)": [[0, "bittensor.axon.axon.add_args", false]], "add_args() (bittensor.btlogging.loggingmachine class method)": [[4, "bittensor.btlogging.LoggingMachine.add_args", false]], "add_args() (bittensor.btlogging.loggingmachine.loggingmachine class method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.add_args", false]], "add_args() (bittensor.commands.autocompletecommand static method)": [[11, "bittensor.commands.AutocompleteCommand.add_args", false]], "add_args() (bittensor.commands.check_coldkey_swap.checkcoldkeyswapcommand static method)": [[8, "bittensor.commands.check_coldkey_swap.CheckColdKeySwapCommand.add_args", false]], "add_args() (bittensor.commands.checkcoldkeyswapcommand static method)": [[11, "bittensor.commands.CheckColdKeySwapCommand.add_args", false]], "add_args() (bittensor.commands.commitweightcommand static method)": [[11, "bittensor.commands.CommitWeightCommand.add_args", false]], "add_args() (bittensor.commands.delegates.delegatestakecommand static method)": [[9, "bittensor.commands.delegates.DelegateStakeCommand.add_args", false]], "add_args() (bittensor.commands.delegates.delegateunstakecommand static method)": [[9, "bittensor.commands.delegates.DelegateUnstakeCommand.add_args", false]], "add_args() (bittensor.commands.delegates.listdelegatescommand static method)": [[9, "bittensor.commands.delegates.ListDelegatesCommand.add_args", false]], "add_args() (bittensor.commands.delegates.mydelegatescommand static method)": [[9, "bittensor.commands.delegates.MyDelegatesCommand.add_args", false]], "add_args() (bittensor.commands.delegates.nominatecommand static method)": [[9, "bittensor.commands.delegates.NominateCommand.add_args", false]], "add_args() (bittensor.commands.delegates.settakecommand static method)": [[9, "bittensor.commands.delegates.SetTakeCommand.add_args", false]], "add_args() (bittensor.commands.delegatestakecommand static method)": [[11, "bittensor.commands.DelegateStakeCommand.add_args", false]], "add_args() (bittensor.commands.delegateunstakecommand static method)": [[11, "bittensor.commands.DelegateUnstakeCommand.add_args", false]], "add_args() (bittensor.commands.getchildkeytakecommand static method)": [[11, "bittensor.commands.GetChildKeyTakeCommand.add_args", false]], "add_args() (bittensor.commands.getchildrencommand static method)": [[11, "bittensor.commands.GetChildrenCommand.add_args", false]], "add_args() (bittensor.commands.getidentitycommand static method)": [[11, "bittensor.commands.GetIdentityCommand.add_args", false]], "add_args() (bittensor.commands.getwallethistorycommand static method)": [[11, "bittensor.commands.GetWalletHistoryCommand.add_args", false]], "add_args() (bittensor.commands.identity.getidentitycommand static method)": [[10, "bittensor.commands.identity.GetIdentityCommand.add_args", false]], "add_args() (bittensor.commands.identity.setidentitycommand static method)": [[10, "bittensor.commands.identity.SetIdentityCommand.add_args", false]], "add_args() (bittensor.commands.inspect.inspectcommand static method)": [[12, "bittensor.commands.inspect.InspectCommand.add_args", false]], "add_args() (bittensor.commands.inspectcommand static method)": [[11, "bittensor.commands.InspectCommand.add_args", false]], "add_args() (bittensor.commands.list.listcommand static method)": [[13, "bittensor.commands.list.ListCommand.add_args", false]], "add_args() (bittensor.commands.listcommand static method)": [[11, "bittensor.commands.ListCommand.add_args", false]], "add_args() (bittensor.commands.listdelegatescommand static method)": [[11, "bittensor.commands.ListDelegatesCommand.add_args", false]], "add_args() (bittensor.commands.metagraph.metagraphcommand static method)": [[14, "bittensor.commands.metagraph.MetagraphCommand.add_args", false]], "add_args() (bittensor.commands.metagraphcommand static method)": [[11, "bittensor.commands.MetagraphCommand.add_args", false]], "add_args() (bittensor.commands.misc.autocompletecommand static method)": [[15, "bittensor.commands.misc.AutocompleteCommand.add_args", false]], "add_args() (bittensor.commands.misc.updatecommand static method)": [[15, "bittensor.commands.misc.UpdateCommand.add_args", false]], "add_args() (bittensor.commands.mydelegatescommand static method)": [[11, "bittensor.commands.MyDelegatesCommand.add_args", false]], "add_args() (bittensor.commands.network.registersubnetworkcommand class method)": [[16, "bittensor.commands.network.RegisterSubnetworkCommand.add_args", false]], "add_args() (bittensor.commands.network.subnetgethyperparamscommand static method)": [[16, "bittensor.commands.network.SubnetGetHyperparamsCommand.add_args", false]], "add_args() (bittensor.commands.network.subnethyperparamscommand static method)": [[16, "bittensor.commands.network.SubnetHyperparamsCommand.add_args", false]], "add_args() (bittensor.commands.network.subnetlistcommand static method)": [[16, "bittensor.commands.network.SubnetListCommand.add_args", false]], "add_args() (bittensor.commands.network.subnetlockcostcommand class method)": [[16, "bittensor.commands.network.SubnetLockCostCommand.add_args", false]], "add_args() (bittensor.commands.network.subnetsudocommand static method)": [[16, "bittensor.commands.network.SubnetSudoCommand.add_args", false]], "add_args() (bittensor.commands.newcoldkeycommand static method)": [[11, "bittensor.commands.NewColdkeyCommand.add_args", false]], "add_args() (bittensor.commands.newhotkeycommand static method)": [[11, "bittensor.commands.NewHotkeyCommand.add_args", false]], "add_args() (bittensor.commands.nominatecommand static method)": [[11, "bittensor.commands.NominateCommand.add_args", false]], "add_args() (bittensor.commands.overview.overviewcommand static method)": [[17, "bittensor.commands.overview.OverviewCommand.add_args", false]], "add_args() (bittensor.commands.overviewcommand static method)": [[11, "bittensor.commands.OverviewCommand.add_args", false]], "add_args() (bittensor.commands.powregistercommand static method)": [[11, "bittensor.commands.PowRegisterCommand.add_args", false]], "add_args() (bittensor.commands.proposalscommand class method)": [[11, "bittensor.commands.ProposalsCommand.add_args", false]], "add_args() (bittensor.commands.regencoldkeycommand static method)": [[11, "bittensor.commands.RegenColdkeyCommand.add_args", false]], "add_args() (bittensor.commands.regencoldkeypubcommand static method)": [[11, "bittensor.commands.RegenColdkeypubCommand.add_args", false]], "add_args() (bittensor.commands.regenhotkeycommand static method)": [[11, "bittensor.commands.RegenHotkeyCommand.add_args", false]], "add_args() (bittensor.commands.register.powregistercommand static method)": [[18, "bittensor.commands.register.PowRegisterCommand.add_args", false]], "add_args() (bittensor.commands.register.registercommand static method)": [[18, "bittensor.commands.register.RegisterCommand.add_args", false]], "add_args() (bittensor.commands.register.runfaucetcommand static method)": [[18, "bittensor.commands.register.RunFaucetCommand.add_args", false]], "add_args() (bittensor.commands.register.swaphotkeycommand static method)": [[18, "bittensor.commands.register.SwapHotkeyCommand.add_args", false]], "add_args() (bittensor.commands.registercommand static method)": [[11, "bittensor.commands.RegisterCommand.add_args", false]], "add_args() (bittensor.commands.revealweightcommand static method)": [[11, "bittensor.commands.RevealWeightCommand.add_args", false]], "add_args() (bittensor.commands.revokechildrencommand static method)": [[11, "bittensor.commands.RevokeChildrenCommand.add_args", false]], "add_args() (bittensor.commands.root.rootgetweightscommand static method)": [[19, "bittensor.commands.root.RootGetWeightsCommand.add_args", false]], "add_args() (bittensor.commands.root.rootlist static method)": [[19, "bittensor.commands.root.RootList.add_args", false]], "add_args() (bittensor.commands.root.rootregistercommand static method)": [[19, "bittensor.commands.root.RootRegisterCommand.add_args", false]], "add_args() (bittensor.commands.root.rootsetboostcommand static method)": [[19, "bittensor.commands.root.RootSetBoostCommand.add_args", false]], "add_args() (bittensor.commands.root.rootsetslashcommand static method)": [[19, "bittensor.commands.root.RootSetSlashCommand.add_args", false]], "add_args() (bittensor.commands.root.rootsetweightscommand static method)": [[19, "bittensor.commands.root.RootSetWeightsCommand.add_args", false]], "add_args() (bittensor.commands.rootgetweightscommand static method)": [[11, "bittensor.commands.RootGetWeightsCommand.add_args", false]], "add_args() (bittensor.commands.rootlist static method)": [[11, "bittensor.commands.RootList.add_args", false]], "add_args() (bittensor.commands.rootregistercommand static method)": [[11, "bittensor.commands.RootRegisterCommand.add_args", false]], "add_args() (bittensor.commands.rootsetboostcommand static method)": [[11, "bittensor.commands.RootSetBoostCommand.add_args", false]], "add_args() (bittensor.commands.rootsetslashcommand static method)": [[11, "bittensor.commands.RootSetSlashCommand.add_args", false]], "add_args() (bittensor.commands.rootsetweightscommand static method)": [[11, "bittensor.commands.RootSetWeightsCommand.add_args", false]], "add_args() (bittensor.commands.runfaucetcommand static method)": [[11, "bittensor.commands.RunFaucetCommand.add_args", false]], "add_args() (bittensor.commands.senate.proposalscommand class method)": [[20, "bittensor.commands.senate.ProposalsCommand.add_args", false]], "add_args() (bittensor.commands.senate.senatecommand class method)": [[20, "bittensor.commands.senate.SenateCommand.add_args", false]], "add_args() (bittensor.commands.senate.senateleavecommand class method)": [[20, "bittensor.commands.senate.SenateLeaveCommand.add_args", false]], "add_args() (bittensor.commands.senate.senateregistercommand class method)": [[20, "bittensor.commands.senate.SenateRegisterCommand.add_args", false]], "add_args() (bittensor.commands.senate.showvotescommand class method)": [[20, "bittensor.commands.senate.ShowVotesCommand.add_args", false]], "add_args() (bittensor.commands.senate.votecommand class method)": [[20, "bittensor.commands.senate.VoteCommand.add_args", false]], "add_args() (bittensor.commands.senatecommand class method)": [[11, "bittensor.commands.SenateCommand.add_args", false]], "add_args() (bittensor.commands.senateleavecommand class method)": [[11, "bittensor.commands.SenateLeaveCommand.add_args", false]], "add_args() (bittensor.commands.senateregistercommand class method)": [[11, "bittensor.commands.SenateRegisterCommand.add_args", false]], "add_args() (bittensor.commands.setchildkeytakecommand static method)": [[11, "bittensor.commands.SetChildKeyTakeCommand.add_args", false]], "add_args() (bittensor.commands.setchildrencommand static method)": [[11, "bittensor.commands.SetChildrenCommand.add_args", false]], "add_args() (bittensor.commands.setidentitycommand static method)": [[11, "bittensor.commands.SetIdentityCommand.add_args", false]], "add_args() (bittensor.commands.settakecommand static method)": [[11, "bittensor.commands.SetTakeCommand.add_args", false]], "add_args() (bittensor.commands.showvotescommand class method)": [[11, "bittensor.commands.ShowVotesCommand.add_args", false]], "add_args() (bittensor.commands.stake.getchildkeytakecommand static method)": [[21, "bittensor.commands.stake.GetChildKeyTakeCommand.add_args", false]], "add_args() (bittensor.commands.stake.getchildrencommand static method)": [[21, "bittensor.commands.stake.GetChildrenCommand.add_args", false]], "add_args() (bittensor.commands.stake.setchildkeytakecommand static method)": [[21, "bittensor.commands.stake.SetChildKeyTakeCommand.add_args", false]], "add_args() (bittensor.commands.stake.setchildrencommand static method)": [[21, "bittensor.commands.stake.SetChildrenCommand.add_args", false]], "add_args() (bittensor.commands.stake.stakecommand class method)": [[21, "bittensor.commands.stake.StakeCommand.add_args", false]], "add_args() (bittensor.commands.stake.stakeshow static method)": [[21, "bittensor.commands.stake.StakeShow.add_args", false]], "add_args() (bittensor.commands.stakecommand class method)": [[11, "bittensor.commands.StakeCommand.add_args", false]], "add_args() (bittensor.commands.stakeshow static method)": [[11, "bittensor.commands.StakeShow.add_args", false]], "add_args() (bittensor.commands.swaphotkeycommand static method)": [[11, "bittensor.commands.SwapHotkeyCommand.add_args", false]], "add_args() (bittensor.commands.transfer.transfercommand static method)": [[22, "bittensor.commands.transfer.TransferCommand.add_args", false]], "add_args() (bittensor.commands.transfercommand static method)": [[11, "bittensor.commands.TransferCommand.add_args", false]], "add_args() (bittensor.commands.unstake.revokechildrencommand static method)": [[23, "bittensor.commands.unstake.RevokeChildrenCommand.add_args", false]], "add_args() (bittensor.commands.unstake.unstakecommand static method)": [[23, "bittensor.commands.unstake.UnStakeCommand.add_args", false]], "add_args() (bittensor.commands.unstakecommand static method)": [[11, "bittensor.commands.UnStakeCommand.add_args", false]], "add_args() (bittensor.commands.updatecommand static method)": [[11, "bittensor.commands.UpdateCommand.add_args", false]], "add_args() (bittensor.commands.updatewalletcommand static method)": [[11, "bittensor.commands.UpdateWalletCommand.add_args", false]], "add_args() (bittensor.commands.votecommand class method)": [[11, "bittensor.commands.VoteCommand.add_args", false]], "add_args() (bittensor.commands.walletbalancecommand static method)": [[11, "bittensor.commands.WalletBalanceCommand.add_args", false]], "add_args() (bittensor.commands.walletcreatecommand static method)": [[11, "bittensor.commands.WalletCreateCommand.add_args", false]], "add_args() (bittensor.commands.wallets.getwallethistorycommand static method)": [[25, "bittensor.commands.wallets.GetWalletHistoryCommand.add_args", false]], "add_args() (bittensor.commands.wallets.newcoldkeycommand static method)": [[25, "bittensor.commands.wallets.NewColdkeyCommand.add_args", false]], "add_args() (bittensor.commands.wallets.newhotkeycommand static method)": [[25, "bittensor.commands.wallets.NewHotkeyCommand.add_args", false]], "add_args() (bittensor.commands.wallets.regencoldkeycommand static method)": [[25, "bittensor.commands.wallets.RegenColdkeyCommand.add_args", false]], "add_args() (bittensor.commands.wallets.regencoldkeypubcommand static method)": [[25, "bittensor.commands.wallets.RegenColdkeypubCommand.add_args", false]], "add_args() (bittensor.commands.wallets.regenhotkeycommand static method)": [[25, "bittensor.commands.wallets.RegenHotkeyCommand.add_args", false]], "add_args() (bittensor.commands.wallets.updatewalletcommand static method)": [[25, "bittensor.commands.wallets.UpdateWalletCommand.add_args", false]], "add_args() (bittensor.commands.wallets.walletbalancecommand static method)": [[25, "bittensor.commands.wallets.WalletBalanceCommand.add_args", false]], "add_args() (bittensor.commands.wallets.walletcreatecommand static method)": [[25, "bittensor.commands.wallets.WalletCreateCommand.add_args", false]], "add_args() (bittensor.commands.weights.commitweightcommand static method)": [[26, "bittensor.commands.weights.CommitWeightCommand.add_args", false]], "add_args() (bittensor.commands.weights.revealweightcommand static method)": [[26, "bittensor.commands.weights.RevealWeightCommand.add_args", false]], "add_args() (bittensor.prioritythreadpoolexecutor class method)": [[44, "bittensor.PriorityThreadPoolExecutor.add_args", false]], "add_args() (bittensor.subtensor class method)": [[44, "bittensor.Subtensor.add_args", false], [44, "bittensor.subtensor.add_args", false]], "add_args() (bittensor.subtensor.subtensor class method)": [[53, "bittensor.subtensor.Subtensor.add_args", false]], "add_args() (bittensor.threadpool.prioritythreadpoolexecutor class method)": [[56, "bittensor.threadpool.PriorityThreadPoolExecutor.add_args", false]], "add_args() (bittensor.wallet class method)": [[44, "bittensor.wallet.add_args", false]], "add_args() (bittensor.wallet.wallet class method)": [[70, "bittensor.wallet.wallet.add_args", false]], "add_stake() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.add_stake", false], [44, "bittensor.subtensor.add_stake", false]], "add_stake() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.add_stake", false]], "add_stake_extrinsic() (in module bittensor.extrinsics.staking)": [[41, "bittensor.extrinsics.staking.add_stake_extrinsic", false]], "add_stake_multiple() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.add_stake_multiple", false], [44, "bittensor.subtensor.add_stake_multiple", false]], "add_stake_multiple() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.add_stake_multiple", false]], "add_stake_multiple_extrinsic() (in module bittensor.extrinsics.staking)": [[41, "bittensor.extrinsics.staking.add_stake_multiple_extrinsic", false]], "addresses (bittensor.metagraph.metagraphmixin property)": [[46, "bittensor.metagraph.MetagraphMixin.addresses", false]], "adjustment_alpha (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.adjustment_alpha", false]], "adjustment_alpha (bittensor.subnethyperparameters attribute)": [[44, "bittensor.SubnetHyperparameters.adjustment_alpha", false]], "adjustment_alpha() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.adjustment_alpha", false], [44, "bittensor.subtensor.adjustment_alpha", false]], "adjustment_alpha() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.adjustment_alpha", false]], "adjustment_interval (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.adjustment_interval", false]], "adjustment_interval (bittensor.subnethyperparameters attribute)": [[44, "bittensor.SubnetHyperparameters.adjustment_interval", false]], "after_disable_debug() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.after_disable_debug", false]], "after_disable_debug() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.after_disable_debug", false]], "after_disable_trace() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.after_disable_trace", false]], "after_disable_trace() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.after_disable_trace", false]], "after_enable_debug() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.after_enable_debug", false]], "after_enable_debug() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.after_enable_debug", false]], "after_enable_default() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.after_enable_default", false]], "after_enable_default() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.after_enable_default", false]], "after_enable_trace() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.after_enable_trace", false]], "after_enable_trace() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.after_enable_trace", false]], "after_transition() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.after_transition", false]], "after_transition() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.after_transition", false]], "alias_to_command (in module bittensor.cli)": [[7, "bittensor.cli.ALIAS_TO_COMMAND", false]], "all_commands (in module bittensor)": [[44, "bittensor.ALL_COMMANDS", false]], "all_default_args (bittensor.config attribute)": [[44, "bittensor.config.all_default_args", false]], "all_default_args (bittensor.config.config attribute)": [[27, "bittensor.config.config.all_default_args", false]], "all_logger_names() (in module bittensor.btlogging.helpers)": [[3, "bittensor.btlogging.helpers.all_logger_names", false]], "all_loggers() (in module bittensor.btlogging.helpers)": [[3, "bittensor.btlogging.helpers.all_loggers", false]], "allowed_delta (in module bittensor.constants)": [[28, "bittensor.constants.ALLOWED_DELTA", false]], "allowed_nonce_window_ns() (in module bittensor.utils.axon_utils)": [[59, "bittensor.utils.axon_utils.allowed_nonce_window_ns", false]], "allowed_value() (in module bittensor.commands.network)": [[16, "bittensor.commands.network.allowed_value", false]], "alpha_high (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.alpha_high", false]], "alpha_high (bittensor.subnethyperparameters attribute)": [[44, "bittensor.SubnetHyperparameters.alpha_high", false]], "alpha_low (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.alpha_low", false]], "alpha_low (bittensor.subnethyperparameters attribute)": [[44, "bittensor.SubnetHyperparameters.alpha_low", false]], "api_url (in module bittensor.commands.wallets)": [[25, "bittensor.commands.wallets.API_URL", false]], "app (bittensor.axon attribute)": [[44, "bittensor.axon.app", false]], "app (bittensor.axon.axon attribute)": [[0, "bittensor.axon.axon.app", false]], "arbitration_block (bittensor.chain_data.scheduledcoldkeyswapinfo attribute)": [[6, "bittensor.chain_data.ScheduledColdkeySwapInfo.arbitration_block", false]], "args (bittensor.threadpool._workitem attribute)": [[56, "bittensor.threadpool._WorkItem.args", false]], "ask_password_to_encrypt() (in module bittensor)": [[44, "bittensor.ask_password_to_encrypt", false]], "ask_password_to_encrypt() (in module bittensor.keyfile)": [[45, "bittensor.keyfile.ask_password_to_encrypt", false]], "attach() (bittensor.axon method)": [[44, "bittensor.axon.attach", false]], "attach() (bittensor.axon.axon method)": [[0, "bittensor.axon.axon.attach", false]], "autocompletecommand (class in bittensor.commands)": [[11, "bittensor.commands.AutocompleteCommand", false]], "autocompletecommand (class in bittensor.commands.misc)": [[15, "bittensor.commands.misc.AutocompleteCommand", false]], "axon (bittensor.axon.axonmiddleware attribute)": [[0, "bittensor.axon.AxonMiddleware.axon", false]], "axon (bittensor.synapse attribute)": [[44, "bittensor.Synapse.axon", false]], "axon (bittensor.synapse.synapse attribute)": [[54, "bittensor.synapse.Synapse.axon", false]], "axon (class in bittensor)": [[44, "bittensor.axon", false]], "axon (class in bittensor.axon)": [[0, "bittensor.axon.axon", false]], "axon_info (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.axon_info", false]], "axon_info (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.axon_info", false]], "axon_info (bittensor.neuroninfo attribute)": [[44, "bittensor.NeuronInfo.axon_info", false]], "axon_info (bittensor.neuroninfolite attribute)": [[44, "bittensor.NeuronInfoLite.axon_info", false]], "axoninfo (class in bittensor)": [[44, "bittensor.AxonInfo", false]], "axoninfo (class in bittensor.chain_data)": [[6, "bittensor.chain_data.AxonInfo", false]], "axoninfodict (class in bittensor.mock.subtensor_mock)": [[49, "bittensor.mock.subtensor_mock.AxonInfoDict", false]], "axonmiddleware (class in bittensor.axon)": [[0, "bittensor.axon.AxonMiddleware", false]], "axons (bittensor.metagraph.metagraphmixin attribute)": [[46, "bittensor.metagraph.MetagraphMixin.axons", false]], "axons (bittensor.metagraph.nontorchmetagraph attribute)": [[46, "bittensor.metagraph.NonTorchMetagraph.axons", false]], "axons (bittensor.metagraph.torchmetagraph attribute)": [[46, "bittensor.metagraph.TorchMetaGraph.axons", false]], "axonservecallparams (class in bittensor.mock.subtensor_mock)": [[49, "bittensor.mock.subtensor_mock.AxonServeCallParams", false]], "axonservecallparams (class in bittensor.types)": [[57, "bittensor.types.AxonServeCallParams", false]], "ayes (bittensor.chain_data.proposalvotedata attribute)": [[6, "bittensor.chain_data.ProposalVoteData.ayes", false]], "ayes (bittensor.proposalvotedata attribute)": [[44, "bittensor.ProposalVoteData.ayes", false]], "b (bittensor.metagraph.metagraphmixin property)": [[46, "bittensor.metagraph.MetagraphMixin.B", false]], "balance (class in bittensor)": [[44, "bittensor.Balance", false]], "balance (class in bittensor.utils.balance)": [[60, "bittensor.utils.balance.Balance", false]], "base_log_format (in module bittensor.btlogging.defines)": [[1, "bittensor.btlogging.defines.BASE_LOG_FORMAT", false]], "baseclass (in module bittensor.metagraph)": [[46, "bittensor.metagraph.BaseClass", false]], "basemodel (in module bittensor.dendrite)": [[29, "bittensor.dendrite.BaseModel", false]], "before_disable_debug() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.before_disable_debug", false]], "before_disable_debug() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.before_disable_debug", false]], "before_disable_logging() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.before_disable_logging", false]], "before_disable_logging() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.before_disable_logging", false]], "before_disable_trace() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.before_disable_trace", false]], "before_disable_trace() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.before_disable_trace", false]], "before_enable_debug() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.before_enable_debug", false]], "before_enable_debug() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.before_enable_debug", false]], "before_enable_default() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.before_enable_default", false]], "before_enable_default() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.before_enable_default", false]], "before_enable_trace() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.before_enable_trace", false]], "before_enable_trace() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.before_enable_trace", false]], "before_transition() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.before_transition", false]], "before_transition() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.before_transition", false]], "bittensor": [[44, "module-bittensor", false]], "bittensor.axon": [[0, "module-bittensor.axon", false]], "bittensor.btlogging": [[4, "module-bittensor.btlogging", false]], "bittensor.btlogging.defines": [[1, "module-bittensor.btlogging.defines", false]], "bittensor.btlogging.format": [[2, "module-bittensor.btlogging.format", false]], "bittensor.btlogging.helpers": [[3, "module-bittensor.btlogging.helpers", false]], "bittensor.btlogging.loggingmachine": [[5, "module-bittensor.btlogging.loggingmachine", false]], "bittensor.chain_data": [[6, "module-bittensor.chain_data", false]], "bittensor.cli": [[7, "module-bittensor.cli", false]], "bittensor.commands": [[11, "module-bittensor.commands", false]], "bittensor.commands.check_coldkey_swap": [[8, "module-bittensor.commands.check_coldkey_swap", false]], "bittensor.commands.delegates": [[9, "module-bittensor.commands.delegates", false]], "bittensor.commands.identity": [[10, "module-bittensor.commands.identity", false]], "bittensor.commands.inspect": [[12, "module-bittensor.commands.inspect", false]], "bittensor.commands.list": [[13, "module-bittensor.commands.list", false]], "bittensor.commands.metagraph": [[14, "module-bittensor.commands.metagraph", false]], "bittensor.commands.misc": [[15, "module-bittensor.commands.misc", false]], "bittensor.commands.network": [[16, "module-bittensor.commands.network", false]], "bittensor.commands.overview": [[17, "module-bittensor.commands.overview", false]], "bittensor.commands.register": [[18, "module-bittensor.commands.register", false]], "bittensor.commands.root": [[19, "module-bittensor.commands.root", false]], "bittensor.commands.senate": [[20, "module-bittensor.commands.senate", false]], "bittensor.commands.stake": [[21, "module-bittensor.commands.stake", false]], "bittensor.commands.transfer": [[22, "module-bittensor.commands.transfer", false]], "bittensor.commands.unstake": [[23, "module-bittensor.commands.unstake", false]], "bittensor.commands.utils": [[24, "module-bittensor.commands.utils", false]], "bittensor.commands.wallets": [[25, "module-bittensor.commands.wallets", false]], "bittensor.commands.weights": [[26, "module-bittensor.commands.weights", false]], "bittensor.config": [[27, "module-bittensor.config", false]], "bittensor.constants": [[28, "module-bittensor.constants", false]], "bittensor.dendrite": [[29, "module-bittensor.dendrite", false]], "bittensor.errors": [[30, "module-bittensor.errors", false]], "bittensor.extrinsics": [[33, "module-bittensor.extrinsics", false]], "bittensor.extrinsics.commit_weights": [[31, "module-bittensor.extrinsics.commit_weights", false]], "bittensor.extrinsics.delegation": [[32, "module-bittensor.extrinsics.delegation", false]], "bittensor.extrinsics.network": [[34, "module-bittensor.extrinsics.network", false]], "bittensor.extrinsics.prometheus": [[35, "module-bittensor.extrinsics.prometheus", false]], "bittensor.extrinsics.registration": [[36, "module-bittensor.extrinsics.registration", false]], "bittensor.extrinsics.root": [[37, "module-bittensor.extrinsics.root", false]], "bittensor.extrinsics.senate": [[38, "module-bittensor.extrinsics.senate", false]], "bittensor.extrinsics.serving": [[39, "module-bittensor.extrinsics.serving", false]], "bittensor.extrinsics.set_weights": [[40, "module-bittensor.extrinsics.set_weights", false]], "bittensor.extrinsics.staking": [[41, "module-bittensor.extrinsics.staking", false]], "bittensor.extrinsics.transfer": [[42, "module-bittensor.extrinsics.transfer", false]], "bittensor.extrinsics.unstaking": [[43, "module-bittensor.extrinsics.unstaking", false]], "bittensor.keyfile": [[45, "module-bittensor.keyfile", false]], "bittensor.metagraph": [[46, "module-bittensor.metagraph", false]], "bittensor.mock": [[47, "module-bittensor.mock", false]], "bittensor.mock.keyfile_mock": [[48, "module-bittensor.mock.keyfile_mock", false]], "bittensor.mock.subtensor_mock": [[49, "module-bittensor.mock.subtensor_mock", false]], "bittensor.mock.wallet_mock": [[50, "module-bittensor.mock.wallet_mock", false]], "bittensor.stream": [[51, "module-bittensor.stream", false]], "bittensor.subnets": [[52, "module-bittensor.subnets", false]], "bittensor.subtensor": [[53, "module-bittensor.subtensor", false]], "bittensor.synapse": [[54, "module-bittensor.synapse", false]], "bittensor.tensor": [[55, "module-bittensor.tensor", false]], "bittensor.threadpool": [[56, "module-bittensor.threadpool", false]], "bittensor.types": [[57, "module-bittensor.types", false]], "bittensor.utils": [[62, "module-bittensor.utils", false]], "bittensor.utils._register_cuda": [[58, "module-bittensor.utils._register_cuda", false]], "bittensor.utils.axon_utils": [[59, "module-bittensor.utils.axon_utils", false]], "bittensor.utils.balance": [[60, "module-bittensor.utils.balance", false]], "bittensor.utils.formatting": [[61, "module-bittensor.utils.formatting", false]], "bittensor.utils.networking": [[63, "module-bittensor.utils.networking", false]], "bittensor.utils.registration": [[64, "module-bittensor.utils.registration", false]], "bittensor.utils.subtensor": [[65, "module-bittensor.utils.subtensor", false]], "bittensor.utils.test_utils": [[66, "module-bittensor.utils.test_utils", false]], "bittensor.utils.version": [[67, "module-bittensor.utils.version", false]], "bittensor.utils.wallet_utils": [[68, "module-bittensor.utils.wallet_utils", false]], "bittensor.utils.weight_utils": [[69, "module-bittensor.utils.weight_utils", false]], "bittensor.wallet": [[70, "module-bittensor.wallet", false]], "bittensor_logger_name (in module bittensor.btlogging.defines)": [[1, "bittensor.btlogging.defines.BITTENSOR_LOGGER_NAME", false]], "blacklist() (bittensor.axon.axonmiddleware method)": [[0, "bittensor.axon.AxonMiddleware.blacklist", false]], "blacklist_fns (bittensor.axon attribute)": [[44, "bittensor.axon.blacklist_fns", false]], "blacklist_fns (bittensor.axon.axon attribute)": [[0, "bittensor.axon.axon.blacklist_fns", false]], "blacklistedexception": [[30, "bittensor.errors.BlacklistedException", false], [44, "bittensor.BlacklistedException", false]], "block (bittensor.chain_data.prometheusinfo attribute)": [[6, "bittensor.chain_data.PrometheusInfo.block", false]], "block (bittensor.metagraph.metagraphmixin attribute)": [[46, "bittensor.metagraph.MetagraphMixin.block", false]], "block (bittensor.metagraph.nontorchmetagraph attribute)": [[46, "bittensor.metagraph.NonTorchMetagraph.block", false]], "block (bittensor.metagraph.torchmetagraph attribute)": [[46, "bittensor.metagraph.TorchMetaGraph.block", false]], "block (bittensor.mock.subtensor_mock.axoninfodict attribute)": [[49, "bittensor.mock.subtensor_mock.AxonInfoDict.block", false]], "block (bittensor.mock.subtensor_mock.prometheusinfodict attribute)": [[49, "bittensor.mock.subtensor_mock.PrometheusInfoDict.block", false]], "block (bittensor.prometheusinfo attribute)": [[44, "bittensor.PrometheusInfo.block", false]], "block (bittensor.subtensor property)": [[44, "bittensor.Subtensor.block", false], [44, "bittensor.subtensor.block", false]], "block (bittensor.subtensor.subtensor property)": [[53, "bittensor.subtensor.Subtensor.block", false]], "block_hash (bittensor.utils.registration.registrationstatistics attribute)": [[64, "bittensor.utils.registration.RegistrationStatistics.block_hash", false]], "block_number (bittensor.mock.mocksubtensor attribute)": [[47, "bittensor.mock.MockSubtensor.block_number", false]], "block_number (bittensor.mock.subtensor_mock.mocksubtensor attribute)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor.block_number", false]], "block_number (bittensor.mocksubtensor attribute)": [[44, "bittensor.MockSubtensor.block_number", false]], "block_number (bittensor.utils.registration.powsolution attribute)": [[64, "bittensor.utils.registration.POWSolution.block_number", false]], "block_number (bittensor.utils.registration.registrationstatistics attribute)": [[64, "bittensor.utils.registration.RegistrationStatistics.block_number", false]], "blocknumber (in module bittensor.mock.subtensor_mock)": [[49, "bittensor.mock.subtensor_mock.BlockNumber", false]], "blocks_since_epoch (bittensor.chain_data.subnetinfo attribute)": [[6, "bittensor.chain_data.SubnetInfo.blocks_since_epoch", false]], "blocks_since_epoch (bittensor.subnetinfo attribute)": [[44, "bittensor.SubnetInfo.blocks_since_epoch", false]], "blocks_since_epoch() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.blocks_since_epoch", false], [44, "bittensor.subtensor.blocks_since_epoch", false]], "blocks_since_epoch() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.blocks_since_epoch", false]], "blocks_since_last_update() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.blocks_since_last_update", false], [44, "bittensor.subtensor.blocks_since_last_update", false]], "blocks_since_last_update() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.blocks_since_last_update", false]], "body_hash (bittensor.synapse property)": [[44, "id14", false]], "body_hash (bittensor.synapse.synapse property)": [[54, "id4", false]], "body_hash() (bittensor.synapse method)": [[44, "bittensor.Synapse.body_hash", false]], "body_hash() (bittensor.synapse.synapse method)": [[54, "bittensor.synapse.Synapse.body_hash", false]], "bonds (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.bonds", false]], "bonds (bittensor.metagraph.metagraphmixin attribute)": [[46, "bittensor.metagraph.MetagraphMixin.bonds", false]], "bonds (bittensor.metagraph.nontorchmetagraph attribute)": [[46, "bittensor.metagraph.NonTorchMetagraph.bonds", false]], "bonds (bittensor.metagraph.torchmetagraph attribute)": [[46, "bittensor.metagraph.TorchMetaGraph.bonds", false]], "bonds (bittensor.neuroninfo attribute)": [[44, "bittensor.NeuronInfo.bonds", false]], "bonds() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.bonds", false], [44, "bittensor.subtensor.bonds", false]], "bonds() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.bonds", false]], "bonds_moving_avg (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.bonds_moving_avg", false]], "bonds_moving_avg (bittensor.subnethyperparameters attribute)": [[44, "bittensor.SubnetHyperparameters.bonds_moving_avg", false]], "bonds_moving_avg() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.bonds_moving_avg", false], [44, "bittensor.subtensor.bonds_moving_avg", false]], "bonds_moving_avg() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.bonds_moving_avg", false]], "brokenthreadpool": [[56, "bittensor.threadpool.BrokenThreadPool", false]], "btfileformatter (class in bittensor.btlogging.format)": [[2, "bittensor.btlogging.format.BtFileFormatter", false]], "btstreamformatter (class in bittensor.btlogging.format)": [[2, "bittensor.btlogging.format.BtStreamFormatter", false]], "btstreamingresponsemodel (class in bittensor.stream)": [[51, "bittensor.stream.BTStreamingResponseModel", false]], "buffer (bittensor.tensor attribute)": [[44, "bittensor.Tensor.buffer", false]], "buffer (bittensor.tensor.tensor attribute)": [[55, "bittensor.tensor.Tensor.buffer", false]], "burn (bittensor.chain_data.subnetinfo attribute)": [[6, "bittensor.chain_data.SubnetInfo.burn", false]], "burn (bittensor.subnetinfo attribute)": [[44, "bittensor.SubnetInfo.burn", false]], "burned_register() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.burned_register", false], [44, "bittensor.subtensor.burned_register", false]], "burned_register() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.burned_register", false]], "burned_register_extrinsic() (in module bittensor.extrinsics.registration)": [[36, "bittensor.extrinsics.registration.burned_register_extrinsic", false]], "c (bittensor.metagraph.metagraphmixin property)": [[46, "bittensor.metagraph.MetagraphMixin.C", false]], "calculate_diff_seconds() (in module bittensor.utils.axon_utils)": [[59, "bittensor.utils.axon_utils.calculate_diff_seconds", false]], "call() (bittensor.dendrite method)": [[44, "bittensor.dendrite.call", false]], "call() (bittensor.dendrite.dendrite method)": [[29, "bittensor.dendrite.dendrite.call", false]], "call() (bittensor.dendrite.dendritemixin method)": [[29, "bittensor.dendrite.DendriteMixin.call", false], [29, "id8", false]], "call() (in module bittensor.dendrite)": [[29, "bittensor.dendrite.call", false]], "call_stream() (bittensor.dendrite method)": [[44, "bittensor.dendrite.call_stream", false]], "call_stream() (bittensor.dendrite.dendrite method)": [[29, "bittensor.dendrite.dendrite.call_stream", false]], "call_stream() (bittensor.dendrite.dendritemixin method)": [[29, "bittensor.dendrite.DendriteMixin.call_stream", false], [29, "id9", false]], "cast_dtype() (in module bittensor.tensor)": [[55, "bittensor.tensor.cast_dtype", false]], "cast_float() (in module bittensor.synapse)": [[54, "bittensor.synapse.cast_float", false]], "cast_int() (in module bittensor.synapse)": [[54, "bittensor.synapse.cast_int", false]], "cast_shape() (in module bittensor.tensor)": [[55, "bittensor.tensor.cast_shape", false]], "chain_state (bittensor.mock.mocksubtensor attribute)": [[47, "bittensor.mock.MockSubtensor.chain_state", false]], "chain_state (bittensor.mock.subtensor_mock.mocksubtensor attribute)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor.chain_state", false]], "chain_state (bittensor.mocksubtensor attribute)": [[44, "bittensor.MockSubtensor.chain_state", false]], "chainconnectionerror": [[30, "bittensor.errors.ChainConnectionError", false], [44, "bittensor.ChainConnectionError", false]], "chaindatatype (class in bittensor.chain_data)": [[6, "bittensor.chain_data.ChainDataType", false]], "chainerror": [[30, "bittensor.errors.ChainError", false], [44, "bittensor.ChainError", false]], "chainqueryerror": [[30, "bittensor.errors.ChainQueryError", false], [44, "bittensor.ChainQueryError", false]], "chaintransactionerror": [[30, "bittensor.errors.ChainTransactionError", false], [44, "bittensor.ChainTransactionError", false]], "check_and_update_encryption() (bittensor.keyfile method)": [[44, "bittensor.keyfile.check_and_update_encryption", false]], "check_and_update_encryption() (bittensor.keyfile.keyfile method)": [[45, "bittensor.keyfile.keyfile.check_and_update_encryption", false]], "check_and_update_encryption() (bittensor.keyfile.mockkeyfile method)": [[45, "bittensor.keyfile.Mockkeyfile.check_and_update_encryption", false]], "check_and_update_encryption() (bittensor.mockkeyfile method)": [[44, "bittensor.Mockkeyfile.check_and_update_encryption", false]], "check_block (bittensor.utils.registration._solverbase attribute)": [[64, "bittensor.utils.registration._SolverBase.check_block", false]], "check_choice() (bittensor.commands.utils.intlistprompt method)": [[24, "bittensor.commands.utils.IntListPrompt.check_choice", false]], "check_config() (bittensor.axon class method)": [[44, "bittensor.axon.check_config", false]], "check_config() (bittensor.axon.axon class method)": [[0, "bittensor.axon.axon.check_config", false]], "check_config() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.check_config", false]], "check_config() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.check_config", false]], "check_config() (bittensor.cli static method)": [[44, "bittensor.cli.check_config", false]], "check_config() (bittensor.cli.cli static method)": [[7, "bittensor.cli.cli.check_config", false]], "check_config() (bittensor.commands.autocompletecommand static method)": [[11, "bittensor.commands.AutocompleteCommand.check_config", false]], "check_config() (bittensor.commands.check_coldkey_swap.checkcoldkeyswapcommand class method)": [[8, "bittensor.commands.check_coldkey_swap.CheckColdKeySwapCommand.check_config", false]], "check_config() (bittensor.commands.checkcoldkeyswapcommand class method)": [[11, "bittensor.commands.CheckColdKeySwapCommand.check_config", false]], "check_config() (bittensor.commands.commitweightcommand static method)": [[11, "bittensor.commands.CommitWeightCommand.check_config", false]], "check_config() (bittensor.commands.delegates.delegatestakecommand static method)": [[9, "bittensor.commands.delegates.DelegateStakeCommand.check_config", false]], "check_config() (bittensor.commands.delegates.delegateunstakecommand static method)": [[9, "bittensor.commands.delegates.DelegateUnstakeCommand.check_config", false]], "check_config() (bittensor.commands.delegates.listdelegatescommand static method)": [[9, "bittensor.commands.delegates.ListDelegatesCommand.check_config", false]], "check_config() (bittensor.commands.delegates.mydelegatescommand static method)": [[9, "bittensor.commands.delegates.MyDelegatesCommand.check_config", false]], "check_config() (bittensor.commands.delegates.nominatecommand static method)": [[9, "bittensor.commands.delegates.NominateCommand.check_config", false]], "check_config() (bittensor.commands.delegates.settakecommand static method)": [[9, "bittensor.commands.delegates.SetTakeCommand.check_config", false]], "check_config() (bittensor.commands.delegatestakecommand static method)": [[11, "bittensor.commands.DelegateStakeCommand.check_config", false]], "check_config() (bittensor.commands.delegateunstakecommand static method)": [[11, "bittensor.commands.DelegateUnstakeCommand.check_config", false]], "check_config() (bittensor.commands.getchildkeytakecommand static method)": [[11, "bittensor.commands.GetChildKeyTakeCommand.check_config", false]], "check_config() (bittensor.commands.getchildrencommand static method)": [[11, "bittensor.commands.GetChildrenCommand.check_config", false]], "check_config() (bittensor.commands.getidentitycommand static method)": [[11, "bittensor.commands.GetIdentityCommand.check_config", false]], "check_config() (bittensor.commands.getwallethistorycommand static method)": [[11, "bittensor.commands.GetWalletHistoryCommand.check_config", false]], "check_config() (bittensor.commands.identity.getidentitycommand static method)": [[10, "bittensor.commands.identity.GetIdentityCommand.check_config", false]], "check_config() (bittensor.commands.identity.setidentitycommand static method)": [[10, "bittensor.commands.identity.SetIdentityCommand.check_config", false]], "check_config() (bittensor.commands.inspect.inspectcommand static method)": [[12, "bittensor.commands.inspect.InspectCommand.check_config", false]], "check_config() (bittensor.commands.inspectcommand static method)": [[11, "bittensor.commands.InspectCommand.check_config", false]], "check_config() (bittensor.commands.list.listcommand static method)": [[13, "bittensor.commands.list.ListCommand.check_config", false]], "check_config() (bittensor.commands.listcommand static method)": [[11, "bittensor.commands.ListCommand.check_config", false]], "check_config() (bittensor.commands.listdelegatescommand static method)": [[11, "bittensor.commands.ListDelegatesCommand.check_config", false]], "check_config() (bittensor.commands.metagraph.metagraphcommand static method)": [[14, "bittensor.commands.metagraph.MetagraphCommand.check_config", false]], "check_config() (bittensor.commands.metagraphcommand static method)": [[11, "bittensor.commands.MetagraphCommand.check_config", false]], "check_config() (bittensor.commands.misc.autocompletecommand static method)": [[15, "bittensor.commands.misc.AutocompleteCommand.check_config", false]], "check_config() (bittensor.commands.misc.updatecommand static method)": [[15, "bittensor.commands.misc.UpdateCommand.check_config", false]], "check_config() (bittensor.commands.mydelegatescommand static method)": [[11, "bittensor.commands.MyDelegatesCommand.check_config", false]], "check_config() (bittensor.commands.network.registersubnetworkcommand class method)": [[16, "bittensor.commands.network.RegisterSubnetworkCommand.check_config", false]], "check_config() (bittensor.commands.network.subnetgethyperparamscommand static method)": [[16, "bittensor.commands.network.SubnetGetHyperparamsCommand.check_config", false]], "check_config() (bittensor.commands.network.subnethyperparamscommand static method)": [[16, "bittensor.commands.network.SubnetHyperparamsCommand.check_config", false]], "check_config() (bittensor.commands.network.subnetlistcommand static method)": [[16, "bittensor.commands.network.SubnetListCommand.check_config", false]], "check_config() (bittensor.commands.network.subnetlockcostcommand class method)": [[16, "bittensor.commands.network.SubnetLockCostCommand.check_config", false]], "check_config() (bittensor.commands.network.subnetsudocommand static method)": [[16, "bittensor.commands.network.SubnetSudoCommand.check_config", false]], "check_config() (bittensor.commands.newcoldkeycommand static method)": [[11, "bittensor.commands.NewColdkeyCommand.check_config", false]], "check_config() (bittensor.commands.newhotkeycommand static method)": [[11, "bittensor.commands.NewHotkeyCommand.check_config", false]], "check_config() (bittensor.commands.nominatecommand static method)": [[11, "bittensor.commands.NominateCommand.check_config", false]], "check_config() (bittensor.commands.overview.overviewcommand static method)": [[17, "bittensor.commands.overview.OverviewCommand.check_config", false]], "check_config() (bittensor.commands.overviewcommand static method)": [[11, "bittensor.commands.OverviewCommand.check_config", false]], "check_config() (bittensor.commands.powregistercommand static method)": [[11, "bittensor.commands.PowRegisterCommand.check_config", false]], "check_config() (bittensor.commands.proposalscommand class method)": [[11, "bittensor.commands.ProposalsCommand.check_config", false]], "check_config() (bittensor.commands.regencoldkeycommand static method)": [[11, "bittensor.commands.RegenColdkeyCommand.check_config", false]], "check_config() (bittensor.commands.regencoldkeypubcommand static method)": [[11, "bittensor.commands.RegenColdkeypubCommand.check_config", false]], "check_config() (bittensor.commands.regenhotkeycommand static method)": [[11, "bittensor.commands.RegenHotkeyCommand.check_config", false]], "check_config() (bittensor.commands.register.powregistercommand static method)": [[18, "bittensor.commands.register.PowRegisterCommand.check_config", false]], "check_config() (bittensor.commands.register.registercommand static method)": [[18, "bittensor.commands.register.RegisterCommand.check_config", false]], "check_config() (bittensor.commands.register.runfaucetcommand static method)": [[18, "bittensor.commands.register.RunFaucetCommand.check_config", false]], "check_config() (bittensor.commands.register.swaphotkeycommand static method)": [[18, "bittensor.commands.register.SwapHotkeyCommand.check_config", false]], "check_config() (bittensor.commands.registercommand static method)": [[11, "bittensor.commands.RegisterCommand.check_config", false]], "check_config() (bittensor.commands.revealweightcommand static method)": [[11, "bittensor.commands.RevealWeightCommand.check_config", false]], "check_config() (bittensor.commands.revokechildrencommand static method)": [[11, "bittensor.commands.RevokeChildrenCommand.check_config", false]], "check_config() (bittensor.commands.root.rootgetweightscommand static method)": [[19, "bittensor.commands.root.RootGetWeightsCommand.check_config", false]], "check_config() (bittensor.commands.root.rootlist static method)": [[19, "bittensor.commands.root.RootList.check_config", false]], "check_config() (bittensor.commands.root.rootregistercommand static method)": [[19, "bittensor.commands.root.RootRegisterCommand.check_config", false]], "check_config() (bittensor.commands.root.rootsetboostcommand static method)": [[19, "bittensor.commands.root.RootSetBoostCommand.check_config", false]], "check_config() (bittensor.commands.root.rootsetslashcommand static method)": [[19, "bittensor.commands.root.RootSetSlashCommand.check_config", false]], "check_config() (bittensor.commands.root.rootsetweightscommand static method)": [[19, "bittensor.commands.root.RootSetWeightsCommand.check_config", false]], "check_config() (bittensor.commands.rootgetweightscommand static method)": [[11, "bittensor.commands.RootGetWeightsCommand.check_config", false]], "check_config() (bittensor.commands.rootlist static method)": [[11, "bittensor.commands.RootList.check_config", false]], "check_config() (bittensor.commands.rootregistercommand static method)": [[11, "bittensor.commands.RootRegisterCommand.check_config", false]], "check_config() (bittensor.commands.rootsetboostcommand static method)": [[11, "bittensor.commands.RootSetBoostCommand.check_config", false]], "check_config() (bittensor.commands.rootsetslashcommand static method)": [[11, "bittensor.commands.RootSetSlashCommand.check_config", false]], "check_config() (bittensor.commands.rootsetweightscommand static method)": [[11, "bittensor.commands.RootSetWeightsCommand.check_config", false]], "check_config() (bittensor.commands.runfaucetcommand static method)": [[11, "bittensor.commands.RunFaucetCommand.check_config", false]], "check_config() (bittensor.commands.senate.proposalscommand class method)": [[20, "bittensor.commands.senate.ProposalsCommand.check_config", false]], "check_config() (bittensor.commands.senate.senatecommand class method)": [[20, "bittensor.commands.senate.SenateCommand.check_config", false]], "check_config() (bittensor.commands.senate.senateleavecommand class method)": [[20, "bittensor.commands.senate.SenateLeaveCommand.check_config", false]], "check_config() (bittensor.commands.senate.senateregistercommand class method)": [[20, "bittensor.commands.senate.SenateRegisterCommand.check_config", false]], "check_config() (bittensor.commands.senate.showvotescommand class method)": [[20, "bittensor.commands.senate.ShowVotesCommand.check_config", false]], "check_config() (bittensor.commands.senate.votecommand class method)": [[20, "bittensor.commands.senate.VoteCommand.check_config", false]], "check_config() (bittensor.commands.senatecommand class method)": [[11, "bittensor.commands.SenateCommand.check_config", false]], "check_config() (bittensor.commands.senateleavecommand class method)": [[11, "bittensor.commands.SenateLeaveCommand.check_config", false]], "check_config() (bittensor.commands.senateregistercommand class method)": [[11, "bittensor.commands.SenateRegisterCommand.check_config", false]], "check_config() (bittensor.commands.setchildkeytakecommand static method)": [[11, "bittensor.commands.SetChildKeyTakeCommand.check_config", false]], "check_config() (bittensor.commands.setchildrencommand static method)": [[11, "bittensor.commands.SetChildrenCommand.check_config", false]], "check_config() (bittensor.commands.setidentitycommand static method)": [[11, "bittensor.commands.SetIdentityCommand.check_config", false]], "check_config() (bittensor.commands.settakecommand static method)": [[11, "bittensor.commands.SetTakeCommand.check_config", false]], "check_config() (bittensor.commands.showvotescommand class method)": [[11, "bittensor.commands.ShowVotesCommand.check_config", false]], "check_config() (bittensor.commands.stake.getchildkeytakecommand static method)": [[21, "bittensor.commands.stake.GetChildKeyTakeCommand.check_config", false]], "check_config() (bittensor.commands.stake.getchildrencommand static method)": [[21, "bittensor.commands.stake.GetChildrenCommand.check_config", false]], "check_config() (bittensor.commands.stake.setchildkeytakecommand static method)": [[21, "bittensor.commands.stake.SetChildKeyTakeCommand.check_config", false]], "check_config() (bittensor.commands.stake.setchildrencommand static method)": [[21, "bittensor.commands.stake.SetChildrenCommand.check_config", false]], "check_config() (bittensor.commands.stake.stakecommand class method)": [[21, "bittensor.commands.stake.StakeCommand.check_config", false]], "check_config() (bittensor.commands.stake.stakeshow static method)": [[21, "bittensor.commands.stake.StakeShow.check_config", false]], "check_config() (bittensor.commands.stakecommand class method)": [[11, "bittensor.commands.StakeCommand.check_config", false]], "check_config() (bittensor.commands.stakeshow static method)": [[11, "bittensor.commands.StakeShow.check_config", false]], "check_config() (bittensor.commands.swaphotkeycommand static method)": [[11, "bittensor.commands.SwapHotkeyCommand.check_config", false]], "check_config() (bittensor.commands.transfer.transfercommand static method)": [[22, "bittensor.commands.transfer.TransferCommand.check_config", false]], "check_config() (bittensor.commands.transfercommand static method)": [[11, "bittensor.commands.TransferCommand.check_config", false]], "check_config() (bittensor.commands.unstake.revokechildrencommand static method)": [[23, "bittensor.commands.unstake.RevokeChildrenCommand.check_config", false]], "check_config() (bittensor.commands.unstake.unstakecommand class method)": [[23, "bittensor.commands.unstake.UnStakeCommand.check_config", false]], "check_config() (bittensor.commands.unstakecommand class method)": [[11, "bittensor.commands.UnStakeCommand.check_config", false]], "check_config() (bittensor.commands.updatecommand static method)": [[11, "bittensor.commands.UpdateCommand.check_config", false]], "check_config() (bittensor.commands.updatewalletcommand static method)": [[11, "bittensor.commands.UpdateWalletCommand.check_config", false]], "check_config() (bittensor.commands.votecommand class method)": [[11, "bittensor.commands.VoteCommand.check_config", false]], "check_config() (bittensor.commands.walletbalancecommand static method)": [[11, "bittensor.commands.WalletBalanceCommand.check_config", false]], "check_config() (bittensor.commands.walletcreatecommand static method)": [[11, "bittensor.commands.WalletCreateCommand.check_config", false]], "check_config() (bittensor.commands.wallets.getwallethistorycommand static method)": [[25, "bittensor.commands.wallets.GetWalletHistoryCommand.check_config", false]], "check_config() (bittensor.commands.wallets.newcoldkeycommand static method)": [[25, "bittensor.commands.wallets.NewColdkeyCommand.check_config", false]], "check_config() (bittensor.commands.wallets.newhotkeycommand static method)": [[25, "bittensor.commands.wallets.NewHotkeyCommand.check_config", false]], "check_config() (bittensor.commands.wallets.regencoldkeycommand static method)": [[25, "bittensor.commands.wallets.RegenColdkeyCommand.check_config", false]], "check_config() (bittensor.commands.wallets.regencoldkeypubcommand static method)": [[25, "bittensor.commands.wallets.RegenColdkeypubCommand.check_config", false]], "check_config() (bittensor.commands.wallets.regenhotkeycommand static method)": [[25, "bittensor.commands.wallets.RegenHotkeyCommand.check_config", false]], "check_config() (bittensor.commands.wallets.updatewalletcommand static method)": [[25, "bittensor.commands.wallets.UpdateWalletCommand.check_config", false]], "check_config() (bittensor.commands.wallets.walletbalancecommand static method)": [[25, "bittensor.commands.wallets.WalletBalanceCommand.check_config", false]], "check_config() (bittensor.commands.wallets.walletcreatecommand static method)": [[25, "bittensor.commands.wallets.WalletCreateCommand.check_config", false]], "check_config() (bittensor.commands.weights.commitweightcommand static method)": [[26, "bittensor.commands.weights.CommitWeightCommand.check_config", false]], "check_config() (bittensor.commands.weights.revealweightcommand static method)": [[26, "bittensor.commands.weights.RevealWeightCommand.check_config", false]], "check_for_cuda_reg_config() (in module bittensor.commands.utils)": [[24, "bittensor.commands.utils.check_for_cuda_reg_config", false]], "check_in_arbitration() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.check_in_arbitration", false], [44, "bittensor.subtensor.check_in_arbitration", false]], "check_in_arbitration() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.check_in_arbitration", false]], "check_netuid_set() (in module bittensor.commands.utils)": [[24, "bittensor.commands.utils.check_netuid_set", false]], "check_threshold_amount() (in module bittensor.extrinsics.unstaking)": [[43, "bittensor.extrinsics.unstaking.check_threshold_amount", false]], "check_version() (in module bittensor.utils)": [[62, "bittensor.utils.check_version", false]], "check_version() (in module bittensor.utils.version)": [[67, "bittensor.utils.version.check_version", false]], "checkcoldkeyswapcommand (class in bittensor.commands)": [[11, "bittensor.commands.CheckColdKeySwapCommand", false]], "checkcoldkeyswapcommand (class in bittensor.commands.check_coldkey_swap)": [[8, "bittensor.commands.check_coldkey_swap.CheckColdKeySwapCommand", false]], "cli (class in bittensor)": [[44, "bittensor.cli", false]], "cli (class in bittensor.cli)": [[7, "bittensor.cli.cli", false]], "clierrorparser (class in bittensor.cli)": [[7, "bittensor.cli.CLIErrorParser", false]], "close() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.close", false], [44, "bittensor.subtensor.close", false]], "close() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.close", false]], "close_session() (bittensor.dendrite method)": [[44, "bittensor.dendrite.close_session", false]], "close_session() (bittensor.dendrite.dendrite method)": [[29, "bittensor.dendrite.dendrite.close_session", false]], "close_session() (bittensor.dendrite.dendritemixin method)": [[29, "bittensor.dendrite.DendriteMixin.close_session", false], [29, "id0", false]], "coldkey (bittensor.axoninfo attribute)": [[44, "bittensor.AxonInfo.coldkey", false]], "coldkey (bittensor.chain_data.axoninfo attribute)": [[6, "bittensor.chain_data.AxonInfo.coldkey", false]], "coldkey (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.coldkey", false]], "coldkey (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.coldkey", false]], "coldkey (bittensor.neuroninfo attribute)": [[44, "bittensor.NeuronInfo.coldkey", false]], "coldkey (bittensor.neuroninfolite attribute)": [[44, "bittensor.NeuronInfoLite.coldkey", false]], "coldkey (bittensor.wallet property)": [[44, "bittensor.wallet.coldkey", false]], "coldkey (bittensor.wallet.wallet property)": [[70, "bittensor.wallet.wallet.coldkey", false]], "coldkey_file (bittensor.mock.wallet_mock.mockwallet property)": [[50, "bittensor.mock.wallet_mock.MockWallet.coldkey_file", false]], "coldkey_file (bittensor.mockwallet property)": [[44, "bittensor.MockWallet.coldkey_file", false]], "coldkey_file (bittensor.wallet property)": [[44, "bittensor.wallet.coldkey_file", false]], "coldkey_file (bittensor.wallet.wallet property)": [[70, "bittensor.wallet.wallet.coldkey_file", false]], "coldkey_ss58 (bittensor.chain_data.stakeinfo attribute)": [[6, "bittensor.chain_data.StakeInfo.coldkey_ss58", false]], "coldkey_ss58 (bittensor.stakeinfo attribute)": [[44, "bittensor.StakeInfo.coldkey_ss58", false]], "coldkeypub (bittensor.wallet property)": [[44, "bittensor.wallet.coldkeypub", false]], "coldkeypub (bittensor.wallet.wallet property)": [[70, "bittensor.wallet.wallet.coldkeypub", false]], "coldkeypub_file (bittensor.mock.wallet_mock.mockwallet property)": [[50, "bittensor.mock.wallet_mock.MockWallet.coldkeypub_file", false]], "coldkeypub_file (bittensor.mockwallet property)": [[44, "bittensor.MockWallet.coldkeypub_file", false]], "coldkeypub_file (bittensor.wallet property)": [[44, "bittensor.wallet.coldkeypub_file", false]], "coldkeypub_file (bittensor.wallet.wallet property)": [[70, "bittensor.wallet.wallet.coldkeypub_file", false]], "coldkeys (bittensor.metagraph.metagraphmixin property)": [[46, "bittensor.metagraph.MetagraphMixin.coldkeys", false]], "color_map (in module bittensor.btlogging.format)": [[2, "bittensor.btlogging.format.color_map", false]], "commands (in module bittensor.cli)": [[7, "bittensor.cli.COMMANDS", false]], "commit() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor.commit", false]], "commit() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor.commit", false]], "commit() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor.commit", false]], "commit() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.commit", false], [44, "bittensor.subtensor.commit", false]], "commit() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.commit", false]], "commit_reveal_weights_enabled (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.commit_reveal_weights_enabled", false]], "commit_reveal_weights_enabled (bittensor.subnethyperparameters attribute)": [[44, "bittensor.SubnetHyperparameters.commit_reveal_weights_enabled", false]], "commit_reveal_weights_interval (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.commit_reveal_weights_interval", false]], "commit_reveal_weights_interval (bittensor.subnethyperparameters attribute)": [[44, "bittensor.SubnetHyperparameters.commit_reveal_weights_interval", false]], "commit_weights() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.commit_weights", false], [44, "bittensor.subtensor.commit_weights", false]], "commit_weights() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.commit_weights", false]], "commit_weights_extrinsic() (in module bittensor.extrinsics.commit_weights)": [[31, "bittensor.extrinsics.commit_weights.commit_weights_extrinsic", false]], "commitweightcommand (class in bittensor.commands)": [[11, "bittensor.commands.CommitWeightCommand", false]], "commitweightcommand (class in bittensor.commands.weights)": [[26, "bittensor.commands.weights.CommitWeightCommand", false]], "computed_body_hash (bittensor.synapse attribute)": [[44, "bittensor.Synapse.computed_body_hash", false]], "computed_body_hash (bittensor.synapse.synapse attribute)": [[54, "bittensor.synapse.Synapse.computed_body_hash", false]], "config (bittensor.axon attribute)": [[44, "bittensor.axon.config", false]], "config (bittensor.axon.axon attribute)": [[0, "bittensor.axon.axon.config", false]], "config (bittensor.cli attribute)": [[44, "bittensor.cli.config", false]], "config (bittensor.cli.cli attribute)": [[7, "bittensor.cli.cli.config", false]], "config (bittensor.subtensor attribute)": [[44, "bittensor.Subtensor.config", false], [44, "bittensor.subtensor.config", false]], "config (bittensor.subtensor.subtensor attribute)": [[53, "bittensor.subtensor.Subtensor.config", false]], "config (class in bittensor)": [[44, "bittensor.config", false]], "config (class in bittensor.config)": [[27, "bittensor.config.config", false]], "config() (bittensor.btlogging.loggingmachine class method)": [[4, "bittensor.btlogging.LoggingMachine.config", false]], "config() (bittensor.btlogging.loggingmachine.loggingmachine class method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.config", false]], "config() (bittensor.prioritythreadpoolexecutor class method)": [[44, "bittensor.PriorityThreadPoolExecutor.config", false]], "config() (bittensor.threadpool.prioritythreadpoolexecutor class method)": [[56, "bittensor.threadpool.PriorityThreadPoolExecutor.config", false]], "config() (bittensor.wallet class method)": [[44, "bittensor.wallet.config", false]], "config() (bittensor.wallet.wallet class method)": [[70, "bittensor.wallet.wallet.config", false]], "config_params (bittensor.config attribute)": [[44, "bittensor.config.config_params", false]], "config_params (bittensor.config.config attribute)": [[27, "bittensor.config.config.config_params", false]], "configs (in module bittensor)": [[44, "bittensor.configs", false]], "connection_requirements (bittensor.chain_data.subnetinfo attribute)": [[6, "bittensor.chain_data.SubnetInfo.connection_requirements", false]], "connection_requirements (bittensor.subnetinfo attribute)": [[44, "bittensor.SubnetInfo.connection_requirements", false]], "consensus (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.consensus", false]], "consensus (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.consensus", false]], "consensus (bittensor.metagraph.metagraphmixin attribute)": [[46, "bittensor.metagraph.MetagraphMixin.consensus", false]], "consensus (bittensor.metagraph.nontorchmetagraph attribute)": [[46, "bittensor.metagraph.NonTorchMetagraph.consensus", false]], "consensus (bittensor.metagraph.torchmetagraph attribute)": [[46, "bittensor.metagraph.TorchMetaGraph.consensus", false]], "consensus (bittensor.neuroninfo attribute)": [[44, "bittensor.NeuronInfo.consensus", false]], "consensus (bittensor.neuroninfolite attribute)": [[44, "bittensor.NeuronInfoLite.consensus", false]], "console (bittensor.utils.registration.registrationstatisticslogger attribute)": [[64, "bittensor.utils.registration.RegistrationStatisticsLogger.console", false]], "console (in module bittensor.cli)": [[7, "bittensor.cli.console", false]], "console (in module bittensor.commands.check_coldkey_swap)": [[8, "bittensor.commands.check_coldkey_swap.console", false]], "console (in module bittensor.commands.delegates)": [[9, "bittensor.commands.delegates.console", false]], "console (in module bittensor.commands.inspect)": [[12, "bittensor.commands.inspect.console", false]], "console (in module bittensor.commands.list)": [[13, "bittensor.commands.list.console", false]], "console (in module bittensor.commands.metagraph)": [[14, "bittensor.commands.metagraph.console", false]], "console (in module bittensor.commands.misc)": [[15, "bittensor.commands.misc.console", false]], "console (in module bittensor.commands.network)": [[16, "bittensor.commands.network.console", false]], "console (in module bittensor.commands.overview)": [[17, "bittensor.commands.overview.console", false]], "console (in module bittensor.commands.register)": [[18, "bittensor.commands.register.console", false]], "console (in module bittensor.commands.root)": [[19, "bittensor.commands.root.console", false]], "console (in module bittensor.commands.senate)": [[20, "bittensor.commands.senate.console", false]], "console (in module bittensor.commands.stake)": [[21, "bittensor.commands.stake.console", false]], "console (in module bittensor.commands.transfer)": [[22, "bittensor.commands.transfer.console", false]], "console (in module bittensor.commands.unstake)": [[23, "bittensor.commands.unstake.console", false]], "console (in module bittensor.commands.utils)": [[24, "bittensor.commands.utils.console", false]], "console (in module bittensor.extrinsics.staking)": [[41, "bittensor.extrinsics.staking.console", false]], "convert_blocks_to_time() (in module bittensor.utils.formatting)": [[61, "bittensor.utils.formatting.convert_blocks_to_time", false]], "convert_bond_uids_and_vals_to_tensor() (in module bittensor.utils.weight_utils)": [[69, "bittensor.utils.weight_utils.convert_bond_uids_and_vals_to_tensor", false]], "convert_root_weight_uids_and_vals_to_tensor() (in module bittensor.utils.weight_utils)": [[69, "bittensor.utils.weight_utils.convert_root_weight_uids_and_vals_to_tensor", false]], "convert_weight_uids_and_vals_to_tensor() (in module bittensor.utils.weight_utils)": [[69, "bittensor.utils.weight_utils.convert_weight_uids_and_vals_to_tensor", false]], "convert_weights_and_uids_for_emit() (in module bittensor.utils.weight_utils)": [[69, "bittensor.utils.weight_utils.convert_weights_and_uids_for_emit", false]], "copy() (bittensor.config method)": [[44, "bittensor.config.copy", false]], "copy() (bittensor.config.config method)": [[27, "bittensor.config.config.copy", false]], "create() (bittensor.wallet method)": [[44, "bittensor.wallet.create", false]], "create() (bittensor.wallet.wallet method)": [[70, "bittensor.wallet.wallet.create", false]], "create_coldkey_from_uri() (bittensor.wallet method)": [[44, "bittensor.wallet.create_coldkey_from_uri", false]], "create_coldkey_from_uri() (bittensor.wallet.wallet method)": [[70, "bittensor.wallet.wallet.create_coldkey_from_uri", false]], "create_config() (bittensor.cli static method)": [[44, "bittensor.cli.create_config", false]], "create_config() (bittensor.cli.cli static method)": [[7, "bittensor.cli.cli.create_config", false]], "create_error_response() (in module bittensor.axon)": [[0, "bittensor.axon.create_error_response", false]], "create_hotkey_from_uri() (bittensor.wallet method)": [[44, "bittensor.wallet.create_hotkey_from_uri", false]], "create_hotkey_from_uri() (bittensor.wallet.wallet method)": [[70, "bittensor.wallet.wallet.create_hotkey_from_uri", false]], "create_identity_dict() (in module bittensor.utils)": [[62, "bittensor.utils.create_identity_dict", false]], "create_identity_dict() (in module bittensor.utils.wallet_utils)": [[68, "bittensor.utils.wallet_utils.create_identity_dict", false]], "create_if_non_existent() (bittensor.wallet method)": [[44, "bittensor.wallet.create_if_non_existent", false]], "create_if_non_existent() (bittensor.wallet.wallet method)": [[70, "bittensor.wallet.wallet.create_if_non_existent", false]], "create_new_coldkey() (bittensor.wallet method)": [[44, "bittensor.wallet.create_new_coldkey", false]], "create_new_coldkey() (bittensor.wallet.wallet method)": [[70, "bittensor.wallet.wallet.create_new_coldkey", false]], "create_new_hotkey() (bittensor.wallet method)": [[44, "bittensor.wallet.create_new_hotkey", false]], "create_new_hotkey() (bittensor.wallet.wallet method)": [[70, "bittensor.wallet.wallet.create_new_hotkey", false]], "create_pow() (in module bittensor.utils.registration)": [[64, "bittensor.utils.registration.create_pow", false]], "create_shared_memory() (bittensor.utils.registration._solverbase static method)": [[64, "bittensor.utils.registration._SolverBase.create_shared_memory", false]], "create_streaming_response() (bittensor.stream.streamingsynapse method)": [[51, "bittensor.stream.StreamingSynapse.create_streaming_response", false]], "create_streaming_response() (bittensor.streamingsynapse method)": [[44, "bittensor.StreamingSynapse.create_streaming_response", false]], "create_subnet() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor.create_subnet", false]], "create_subnet() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor.create_subnet", false]], "create_subnet() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor.create_subnet", false]], "create_transfer_history_table() (in module bittensor.commands.wallets)": [[25, "bittensor.commands.wallets.create_transfer_history_table", false]], "critical() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.critical", false]], "critical() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.critical", false]], "cudaexception": [[64, "bittensor.utils.registration.CUDAException", false]], "curr_block (bittensor.utils.registration._solverbase attribute)": [[64, "bittensor.utils.registration._SolverBase.curr_block", false]], "curr_block_num (bittensor.utils.registration._solverbase attribute)": [[64, "bittensor.utils.registration._SolverBase.curr_block_num", false]], "curr_diff (bittensor.utils.registration._solverbase attribute)": [[64, "bittensor.utils.registration._SolverBase.curr_diff", false]], "custom_rpc_type_registry (in module bittensor.chain_data)": [[6, "bittensor.chain_data.custom_rpc_type_registry", false]], "d (bittensor.metagraph.metagraphmixin property)": [[46, "bittensor.metagraph.MetagraphMixin.D", false]], "data (bittensor.keyfile property)": [[44, "bittensor.keyfile.data", false]], "data (bittensor.keyfile.keyfile property)": [[45, "bittensor.keyfile.keyfile.data", false]], "data (bittensor.keyfile.mockkeyfile property)": [[45, "bittensor.keyfile.Mockkeyfile.data", false]], "data (bittensor.mock.keyfile_mock.mockkeyfile property)": [[48, "bittensor.mock.keyfile_mock.MockKeyfile.data", false]], "data (bittensor.mockkeyfile property)": [[44, "bittensor.MockKeyfile.data", false], [44, "bittensor.Mockkeyfile.data", false]], "date_format (in module bittensor.btlogging.defines)": [[1, "bittensor.btlogging.defines.DATE_FORMAT", false]], "debug (bittensor.btlogging.loggingmachine attribute)": [[4, "bittensor.btlogging.LoggingMachine.Debug", false]], "debug (bittensor.btlogging.loggingmachine.loggingconfig attribute)": [[5, "bittensor.btlogging.loggingmachine.LoggingConfig.debug", false]], "debug (bittensor.btlogging.loggingmachine.loggingmachine attribute)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.Debug", false]], "debug() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.debug", false]], "debug() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.debug", false]], "debug() (in module bittensor)": [[44, "bittensor.debug", false]], "decode_account_id_list() (bittensor.chain_data.scheduledcoldkeyswapinfo class method)": [[6, "bittensor.chain_data.ScheduledColdkeySwapInfo.decode_account_id_list", false]], "decode_hex_identity_dict() (in module bittensor.utils)": [[62, "bittensor.utils.decode_hex_identity_dict", false]], "decode_hex_identity_dict() (in module bittensor.utils.wallet_utils)": [[68, "bittensor.utils.wallet_utils.decode_hex_identity_dict", false]], "decrease_take_extrinsic() (in module bittensor.extrinsics.delegation)": [[32, "bittensor.extrinsics.delegation.decrease_take_extrinsic", false]], "decrypt() (bittensor.keyfile method)": [[44, "bittensor.keyfile.decrypt", false]], "decrypt() (bittensor.keyfile.keyfile method)": [[45, "bittensor.keyfile.keyfile.decrypt", false]], "decrypt() (bittensor.keyfile.mockkeyfile method)": [[45, "bittensor.keyfile.Mockkeyfile.decrypt", false]], "decrypt() (bittensor.mock.keyfile_mock.mockkeyfile method)": [[48, "bittensor.mock.keyfile_mock.MockKeyfile.decrypt", false]], "decrypt() (bittensor.mockkeyfile method)": [[44, "bittensor.MockKeyfile.decrypt", false], [44, "bittensor.Mockkeyfile.decrypt", false]], "decrypt_keyfile_data() (in module bittensor)": [[44, "bittensor.decrypt_keyfile_data", false]], "decrypt_keyfile_data() (in module bittensor.keyfile)": [[45, "bittensor.keyfile.decrypt_keyfile_data", false]], "default (bittensor.btlogging.loggingmachine attribute)": [[4, "bittensor.btlogging.LoggingMachine.Default", false]], "default (bittensor.btlogging.loggingmachine.loggingmachine attribute)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.Default", false]], "default() (bittensor.config.defaultconfig class method)": [[27, "bittensor.config.DefaultConfig.default", false]], "default() (bittensor.defaultconfig class method)": [[44, "bittensor.DefaultConfig.default", false]], "default() (bittensor.mock.subtensor_mock.axoninfodict class method)": [[49, "bittensor.mock.subtensor_mock.AxonInfoDict.default", false]], "default() (bittensor.mock.subtensor_mock.infodict class method)": [[49, "bittensor.mock.subtensor_mock.InfoDict.default", false]], "default() (bittensor.mock.subtensor_mock.prometheusinfodict class method)": [[49, "bittensor.mock.subtensor_mock.PrometheusInfoDict.default", false]], "default_log_backup_count (in module bittensor.btlogging.defines)": [[1, "bittensor.btlogging.defines.DEFAULT_LOG_BACKUP_COUNT", false]], "default_log_file_name (in module bittensor.btlogging.defines)": [[1, "bittensor.btlogging.defines.DEFAULT_LOG_FILE_NAME", false]], "default_log_format (in module bittensor.btlogging.format)": [[2, "bittensor.btlogging.format.DEFAULT_LOG_FORMAT", false]], "default_max_rotating_log_file_size (in module bittensor.btlogging.defines)": [[1, "bittensor.btlogging.defines.DEFAULT_MAX_ROTATING_LOG_FILE_SIZE", false]], "default_param_args (bittensor.config attribute)": [[44, "bittensor.config.default_param_args", false]], "default_param_args (bittensor.config.config attribute)": [[27, "bittensor.config.config.default_param_args", false]], "default_params (bittensor.config attribute)": [[44, "bittensor.config.default_params", false]], "default_params (bittensor.config.config attribute)": [[27, "bittensor.config.config.default_params", false]], "default_trace_format (in module bittensor.btlogging.format)": [[2, "bittensor.btlogging.format.DEFAULT_TRACE_FORMAT", false]], "default_verify() (bittensor.axon method)": [[44, "bittensor.axon.default_verify", false]], "default_verify() (bittensor.axon.axon method)": [[0, "bittensor.axon.axon.default_verify", false]], "defaultconfig (class in bittensor)": [[44, "bittensor.DefaultConfig", false]], "defaultconfig (class in bittensor.config)": [[27, "bittensor.config.DefaultConfig", false]], "defaults (in module bittensor)": [[44, "bittensor.defaults", false]], "defaults (in module bittensor.commands)": [[11, "bittensor.commands.defaults", false]], "defaults_as_suppress (bittensor.config attribute)": [[44, "bittensor.config.defaults_as_suppress", false]], "defaults_as_suppress (bittensor.config.config attribute)": [[27, "bittensor.config.config.defaults_as_suppress", false]], "delegate() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.delegate", false], [44, "bittensor.subtensor.delegate", false]], "delegate() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.delegate", false]], "delegate_extrinsic() (in module bittensor.extrinsics.delegation)": [[32, "bittensor.extrinsics.delegation.delegate_extrinsic", false]], "delegate_ss58 (bittensor.chain_data.delegateinfolite attribute)": [[6, "bittensor.chain_data.DelegateInfoLite.delegate_ss58", false]], "delegated_list_from_vec_u8() (bittensor.chain_data.delegateinfo class method)": [[6, "bittensor.chain_data.DelegateInfo.delegated_list_from_vec_u8", false]], "delegated_list_from_vec_u8() (bittensor.delegateinfo class method)": [[44, "bittensor.DelegateInfo.delegated_list_from_vec_u8", false]], "delegatedinfo (bittensor.chain_data.chaindatatype attribute)": [[6, "bittensor.chain_data.ChainDataType.DelegatedInfo", false]], "delegateinfo (bittensor.chain_data.chaindatatype attribute)": [[6, "bittensor.chain_data.ChainDataType.DelegateInfo", false]], "delegateinfo (class in bittensor)": [[44, "bittensor.DelegateInfo", false]], "delegateinfo (class in bittensor.chain_data)": [[6, "bittensor.chain_data.DelegateInfo", false]], "delegateinfolite (class in bittensor.chain_data)": [[6, "bittensor.chain_data.DelegateInfoLite", false]], "delegates (bittensor.mock.subtensor_mock.mocksubtensorstate attribute)": [[49, "bittensor.mock.subtensor_mock.MockSubtensorState.Delegates", false]], "delegatesdetails (class in bittensor.commands.utils)": [[24, "bittensor.commands.utils.DelegatesDetails", false]], "delegatestakecommand (class in bittensor.commands)": [[11, "bittensor.commands.DelegateStakeCommand", false]], "delegatestakecommand (class in bittensor.commands.delegates)": [[9, "bittensor.commands.delegates.DelegateStakeCommand", false]], "delegateunstakecommand (class in bittensor.commands)": [[11, "bittensor.commands.DelegateUnstakeCommand", false]], "delegateunstakecommand (class in bittensor.commands.delegates)": [[9, "bittensor.commands.delegates.DelegateUnstakeCommand", false]], "dendrite (bittensor.subnets.subnetsapi attribute)": [[52, "bittensor.subnets.SubnetsAPI.dendrite", false]], "dendrite (bittensor.subnetsapi attribute)": [[44, "bittensor.SubnetsAPI.dendrite", false]], "dendrite (bittensor.synapse attribute)": [[44, "bittensor.Synapse.dendrite", false]], "dendrite (bittensor.synapse.synapse attribute)": [[54, "bittensor.synapse.Synapse.dendrite", false]], "dendrite (class in bittensor)": [[44, "bittensor.dendrite", false]], "dendrite (class in bittensor.dendrite)": [[29, "bittensor.dendrite.dendrite", false]], "dendrite_default_error (in module bittensor.constants)": [[28, "bittensor.constants.DENDRITE_DEFAULT_ERROR", false]], "dendrite_error_mapping (in module bittensor.constants)": [[28, "bittensor.constants.DENDRITE_ERROR_MAPPING", false]], "dendritemixin (class in bittensor.dendrite)": [[29, "bittensor.dendrite.DendriteMixin", false]], "deregister_primary_logger() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.deregister_primary_logger", false]], "deregister_primary_logger() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.deregister_primary_logger", false]], "description (bittensor.commands.utils.delegatesdetails attribute)": [[24, "bittensor.commands.utils.DelegatesDetails.description", false]], "deserialize() (bittensor.synapse method)": [[44, "bittensor.Synapse.deserialize", false], [44, "id0", false]], "deserialize() (bittensor.synapse.synapse method)": [[54, "bittensor.synapse.Synapse.deserialize", false], [54, "id0", false]], "deserialize() (bittensor.tensor method)": [[44, "bittensor.Tensor.deserialize", false]], "deserialize() (bittensor.tensor.tensor method)": [[55, "bittensor.tensor.Tensor.deserialize", false]], "deserialize_keypair_from_keyfile_data() (in module bittensor)": [[44, "bittensor.deserialize_keypair_from_keyfile_data", false]], "deserialize_keypair_from_keyfile_data() (in module bittensor.keyfile)": [[45, "bittensor.keyfile.deserialize_keypair_from_keyfile_data", false]], "determine_chain_endpoint_and_network() (bittensor.subtensor static method)": [[44, "bittensor.Subtensor.determine_chain_endpoint_and_network", false], [44, "bittensor.subtensor.determine_chain_endpoint_and_network", false]], "determine_chain_endpoint_and_network() (bittensor.subtensor.subtensor static method)": [[53, "bittensor.subtensor.Subtensor.determine_chain_endpoint_and_network", false]], "dev_id (bittensor.utils.registration._cudasolver attribute)": [[64, "bittensor.utils.registration._CUDASolver.dev_id", false]], "difficulty (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.difficulty", false]], "difficulty (bittensor.chain_data.subnetinfo attribute)": [[6, "bittensor.chain_data.SubnetInfo.difficulty", false]], "difficulty (bittensor.mock.subtensor_mock.mocksubtensorstate attribute)": [[49, "bittensor.mock.subtensor_mock.MockSubtensorState.Difficulty", false]], "difficulty (bittensor.subnethyperparameters attribute)": [[44, "bittensor.SubnetHyperparameters.difficulty", false]], "difficulty (bittensor.subnetinfo attribute)": [[44, "bittensor.SubnetInfo.difficulty", false]], "difficulty (bittensor.utils.registration.powsolution attribute)": [[64, "bittensor.utils.registration.POWSolution.difficulty", false]], "difficulty (bittensor.utils.registration.registrationstatistics attribute)": [[64, "bittensor.utils.registration.RegistrationStatistics.difficulty", false]], "difficulty() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.difficulty", false], [44, "bittensor.subtensor.difficulty", false]], "difficulty() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.difficulty", false]], "disable_debug (bittensor.btlogging.loggingmachine attribute)": [[4, "bittensor.btlogging.LoggingMachine.disable_debug", false]], "disable_debug (bittensor.btlogging.loggingmachine.loggingmachine attribute)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.disable_debug", false]], "disable_logging (bittensor.btlogging.loggingmachine attribute)": [[4, "bittensor.btlogging.LoggingMachine.disable_logging", false]], "disable_logging (bittensor.btlogging.loggingmachine.loggingmachine attribute)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.disable_logging", false]], "disable_third_party_loggers() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.disable_third_party_loggers", false]], "disable_third_party_loggers() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.disable_third_party_loggers", false]], "disable_trace (bittensor.btlogging.loggingmachine attribute)": [[4, "bittensor.btlogging.LoggingMachine.disable_trace", false]], "disable_trace (bittensor.btlogging.loggingmachine.loggingmachine attribute)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.disable_trace", false]], "disabled (bittensor.btlogging.loggingmachine attribute)": [[4, "bittensor.btlogging.LoggingMachine.Disabled", false]], "disabled (bittensor.btlogging.loggingmachine.loggingmachine attribute)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.Disabled", false]], "dispatch() (bittensor.axon.axonmiddleware method)": [[0, "bittensor.axon.AxonMiddleware.dispatch", false]], "display_mnemonic_msg() (in module bittensor)": [[44, "bittensor.display_mnemonic_msg", false]], "display_mnemonic_msg() (in module bittensor.wallet)": [[70, "bittensor.wallet.display_mnemonic_msg", false]], "display_votes() (in module bittensor.commands.senate)": [[20, "bittensor.commands.senate.display_votes", false]], "dividends (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.dividends", false]], "dividends (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.dividends", false]], "dividends (bittensor.metagraph.metagraphmixin attribute)": [[46, "bittensor.metagraph.MetagraphMixin.dividends", false]], "dividends (bittensor.metagraph.nontorchmetagraph attribute)": [[46, "bittensor.metagraph.NonTorchMetagraph.dividends", false]], "dividends (bittensor.metagraph.torchmetagraph attribute)": [[46, "bittensor.metagraph.TorchMetaGraph.dividends", false]], "dividends (bittensor.neuroninfo attribute)": [[44, "bittensor.NeuronInfo.dividends", false]], "dividends (bittensor.neuroninfolite attribute)": [[44, "bittensor.NeuronInfoLite.dividends", false]], "do_block_step() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor.do_block_step", false]], "do_block_step() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor.do_block_step", false]], "do_block_step() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor.do_block_step", false]], "does_hotkey_exist() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.does_hotkey_exist", false], [44, "bittensor.subtensor.does_hotkey_exist", false]], "does_hotkey_exist() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.does_hotkey_exist", false]], "dtype (bittensor.tensor attribute)": [[44, "bittensor.Tensor.dtype", false]], "dtype (bittensor.tensor.tensor attribute)": [[55, "bittensor.tensor.Tensor.dtype", false]], "dtypes (class in bittensor.tensor)": [[55, "bittensor.tensor.DTypes", false]], "dtypes (in module bittensor.tensor)": [[55, "bittensor.tensor.dtypes", false]], "e (bittensor.metagraph.metagraphmixin property)": [[46, "bittensor.metagraph.MetagraphMixin.E", false]], "emission (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.emission", false]], "emission (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.emission", false]], "emission (bittensor.metagraph.metagraphmixin attribute)": [[46, "bittensor.metagraph.MetagraphMixin.emission", false]], "emission (bittensor.metagraph.nontorchmetagraph attribute)": [[46, "bittensor.metagraph.NonTorchMetagraph.emission", false]], "emission (bittensor.metagraph.torchmetagraph attribute)": [[46, "bittensor.metagraph.TorchMetaGraph.emission", false]], "emission (bittensor.neuroninfo attribute)": [[44, "bittensor.NeuronInfo.emission", false]], "emission (bittensor.neuroninfolite attribute)": [[44, "bittensor.NeuronInfoLite.emission", false]], "emission_value (bittensor.chain_data.subnetinfo attribute)": [[6, "bittensor.chain_data.SubnetInfo.emission_value", false]], "emission_value (bittensor.subnetinfo attribute)": [[44, "bittensor.SubnetInfo.emission_value", false]], "emoji_map (in module bittensor.btlogging.format)": [[2, "bittensor.btlogging.format.emoji_map", false]], "enable_debug (bittensor.btlogging.loggingmachine attribute)": [[4, "bittensor.btlogging.LoggingMachine.enable_debug", false]], "enable_debug (bittensor.btlogging.loggingmachine.loggingmachine attribute)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.enable_debug", false]], "enable_default (bittensor.btlogging.loggingmachine attribute)": [[4, "bittensor.btlogging.LoggingMachine.enable_default", false]], "enable_default (bittensor.btlogging.loggingmachine.loggingmachine attribute)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.enable_default", false]], "enable_third_party_loggers() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.enable_third_party_loggers", false]], "enable_third_party_loggers() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.enable_third_party_loggers", false]], "enable_trace (bittensor.btlogging.loggingmachine attribute)": [[4, "bittensor.btlogging.LoggingMachine.enable_trace", false]], "enable_trace (bittensor.btlogging.loggingmachine.loggingmachine attribute)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.enable_trace", false]], "encode() (bittensor.chain_data.ipinfo method)": [[6, "bittensor.chain_data.IPInfo.encode", false]], "encode() (bittensor.ipinfo method)": [[44, "bittensor.IPInfo.encode", false]], "encrypt() (bittensor.keyfile method)": [[44, "bittensor.keyfile.encrypt", false]], "encrypt() (bittensor.keyfile.keyfile method)": [[45, "bittensor.keyfile.keyfile.encrypt", false]], "encrypt() (bittensor.keyfile.mockkeyfile method)": [[45, "bittensor.keyfile.Mockkeyfile.encrypt", false]], "encrypt() (bittensor.mock.keyfile_mock.mockkeyfile method)": [[48, "bittensor.mock.keyfile_mock.MockKeyfile.encrypt", false]], "encrypt() (bittensor.mockkeyfile method)": [[44, "bittensor.MockKeyfile.encrypt", false], [44, "bittensor.Mockkeyfile.encrypt", false]], "encrypt_keyfile_data() (in module bittensor)": [[44, "bittensor.encrypt_keyfile_data", false]], "encrypt_keyfile_data() (in module bittensor.keyfile)": [[45, "bittensor.keyfile.encrypt_keyfile_data", false]], "end (bittensor.chain_data.proposalvotedata attribute)": [[6, "bittensor.chain_data.ProposalVoteData.end", false]], "end (bittensor.proposalvotedata attribute)": [[44, "bittensor.ProposalVoteData.end", false]], "ensure_connected() (in module bittensor.utils.networking)": [[63, "bittensor.utils.networking.ensure_connected", false]], "error() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.error", false]], "error() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.error", false]], "error() (bittensor.cli.clierrorparser method)": [[7, "bittensor.cli.CLIErrorParser.error", false]], "exception() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.exception", false]], "exception() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.exception", false]], "exists_on_device() (bittensor.keyfile method)": [[44, "bittensor.keyfile.exists_on_device", false]], "exists_on_device() (bittensor.keyfile.keyfile method)": [[45, "bittensor.keyfile.keyfile.exists_on_device", false]], "exists_on_device() (bittensor.keyfile.mockkeyfile method)": [[45, "bittensor.keyfile.Mockkeyfile.exists_on_device", false]], "exists_on_device() (bittensor.mock.keyfile_mock.mockkeyfile method)": [[48, "bittensor.mock.keyfile_mock.MockKeyfile.exists_on_device", false]], "exists_on_device() (bittensor.mockkeyfile method)": [[44, "bittensor.MockKeyfile.exists_on_device", false], [44, "bittensor.Mockkeyfile.exists_on_device", false]], "external_ip (bittensor.axon attribute)": [[44, "bittensor.axon.external_ip", false]], "external_ip (bittensor.axon.axon attribute)": [[0, "bittensor.axon.axon.external_ip", false]], "external_ip (bittensor.dendrite.dendritemixin attribute)": [[29, "bittensor.dendrite.DendriteMixin.external_ip", false]], "external_port (bittensor.axon attribute)": [[44, "bittensor.axon.external_port", false]], "external_port (bittensor.axon.axon attribute)": [[0, "bittensor.axon.axon.external_port", false]], "externalipnotfound": [[63, "bittensor.utils.networking.ExternalIPNotFound", false]], "extract_response_json() (bittensor.stream.streamingsynapse method)": [[51, "bittensor.stream.StreamingSynapse.extract_response_json", false]], "extract_response_json() (bittensor.streamingsynapse method)": [[44, "bittensor.StreamingSynapse.extract_response_json", false]], "failed_verification (bittensor.synapse property)": [[44, "bittensor.Synapse.failed_verification", false]], "failed_verification (bittensor.synapse.synapse property)": [[54, "bittensor.synapse.Synapse.failed_verification", false]], "fast_config (bittensor.axon attribute)": [[44, "bittensor.axon.fast_config", false]], "fast_config (bittensor.axon.axon attribute)": [[0, "bittensor.axon.axon.fast_config", false]], "fast_server (bittensor.axon attribute)": [[44, "bittensor.axon.fast_server", false]], "fast_server (bittensor.axon.axon attribute)": [[0, "bittensor.axon.axon.fast_server", false]], "fastapithreadedserver (class in bittensor.axon)": [[0, "bittensor.axon.FastAPIThreadedServer", false]], "fetch_arbitration_stats() (in module bittensor.commands.check_coldkey_swap)": [[8, "bittensor.commands.check_coldkey_swap.fetch_arbitration_stats", false]], "filter_netuids_by_registered_hotkeys() (in module bittensor.commands.utils)": [[24, "bittensor.commands.utils.filter_netuids_by_registered_hotkeys", false]], "finished_queue (bittensor.utils.registration._solverbase attribute)": [[64, "bittensor.utils.registration._SolverBase.finished_queue", false]], "fix_decoded_values() (bittensor.chain_data.delegateinfo class method)": [[6, "bittensor.chain_data.DelegateInfo.fix_decoded_values", false]], "fix_decoded_values() (bittensor.chain_data.ipinfo class method)": [[6, "bittensor.chain_data.IPInfo.fix_decoded_values", false]], "fix_decoded_values() (bittensor.chain_data.neuroninfo class method)": [[6, "bittensor.chain_data.NeuronInfo.fix_decoded_values", false]], "fix_decoded_values() (bittensor.chain_data.neuroninfolite class method)": [[6, "bittensor.chain_data.NeuronInfoLite.fix_decoded_values", false]], "fix_decoded_values() (bittensor.chain_data.prometheusinfo class method)": [[6, "bittensor.chain_data.PrometheusInfo.fix_decoded_values", false]], "fix_decoded_values() (bittensor.chain_data.scheduledcoldkeyswapinfo class method)": [[6, "bittensor.chain_data.ScheduledColdkeySwapInfo.fix_decoded_values", false]], "fix_decoded_values() (bittensor.chain_data.stakeinfo class method)": [[6, "bittensor.chain_data.StakeInfo.fix_decoded_values", false]], "fix_decoded_values() (bittensor.chain_data.subnethyperparameters class method)": [[6, "bittensor.chain_data.SubnetHyperparameters.fix_decoded_values", false]], "fix_decoded_values() (bittensor.chain_data.subnetinfo class method)": [[6, "bittensor.chain_data.SubnetInfo.fix_decoded_values", false]], "fix_decoded_values() (bittensor.delegateinfo class method)": [[44, "bittensor.DelegateInfo.fix_decoded_values", false]], "fix_decoded_values() (bittensor.ipinfo class method)": [[44, "bittensor.IPInfo.fix_decoded_values", false]], "fix_decoded_values() (bittensor.neuroninfo class method)": [[44, "bittensor.NeuronInfo.fix_decoded_values", false]], "fix_decoded_values() (bittensor.neuroninfolite class method)": [[44, "bittensor.NeuronInfoLite.fix_decoded_values", false]], "fix_decoded_values() (bittensor.prometheusinfo class method)": [[44, "bittensor.PrometheusInfo.fix_decoded_values", false]], "fix_decoded_values() (bittensor.stakeinfo class method)": [[44, "bittensor.StakeInfo.fix_decoded_values", false]], "fix_decoded_values() (bittensor.subnethyperparameters class method)": [[44, "bittensor.SubnetHyperparameters.fix_decoded_values", false]], "fix_decoded_values() (bittensor.subnetinfo class method)": [[44, "bittensor.SubnetInfo.fix_decoded_values", false]], "float_to_u16() (in module bittensor.utils.formatting)": [[61, "bittensor.utils.formatting.float_to_u16", false]], "float_to_u64() (in module bittensor.utils.formatting)": [[61, "bittensor.utils.formatting.float_to_u64", false]], "fn (bittensor.threadpool._workitem attribute)": [[56, "bittensor.threadpool._WorkItem.fn", false]], "force_register_neuron() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor.force_register_neuron", false]], "force_register_neuron() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor.force_register_neuron", false]], "force_register_neuron() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor.force_register_neuron", false]], "force_set_balance() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor.force_set_balance", false]], "force_set_balance() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor.force_set_balance", false]], "force_set_balance() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor.force_set_balance", false]], "format() (bittensor.btlogging.format.btfileformatter method)": [[2, "bittensor.btlogging.format.BtFileFormatter.format", false]], "format() (bittensor.btlogging.format.btstreamformatter method)": [[2, "bittensor.btlogging.format.BtStreamFormatter.format", false]], "format_call_data() (in module bittensor.commands.senate)": [[20, "bittensor.commands.senate.format_call_data", false]], "format_children() (in module bittensor.utils.subtensor)": [[65, "bittensor.utils.subtensor.format_children", false]], "format_error_message() (in module bittensor.utils)": [[62, "bittensor.utils.format_error_message", false]], "format_parent() (in module bittensor.utils.subtensor)": [[65, "bittensor.utils.subtensor.format_parent", false]], "formattime() (bittensor.btlogging.format.btfileformatter method)": [[2, "bittensor.btlogging.format.BtFileFormatter.formatTime", false]], "formattime() (bittensor.btlogging.format.btstreamformatter method)": [[2, "bittensor.btlogging.format.BtStreamFormatter.formatTime", false]], "forward() (bittensor.dendrite method)": [[44, "bittensor.dendrite.forward", false]], "forward() (bittensor.dendrite.dendrite method)": [[29, "bittensor.dendrite.dendrite.forward", false]], "forward() (bittensor.dendrite.dendritemixin method)": [[29, "bittensor.dendrite.DendriteMixin.forward", false], [29, "id7", false]], "forward_class_types (bittensor.axon attribute)": [[44, "bittensor.axon.forward_class_types", false]], "forward_class_types (bittensor.axon.axon attribute)": [[0, "bittensor.axon.axon.forward_class_types", false]], "forward_fns (bittensor.axon attribute)": [[44, "bittensor.axon.forward_fns", false]], "forward_fns (bittensor.axon.axon attribute)": [[0, "bittensor.axon.axon.forward_fns", false]], "from_float() (bittensor.balance static method)": [[44, "bittensor.Balance.from_float", false]], "from_float() (bittensor.utils.balance.balance static method)": [[60, "bittensor.utils.balance.Balance.from_float", false]], "from_headers() (bittensor.synapse class method)": [[44, "id16", false]], "from_headers() (bittensor.synapse method)": [[44, "bittensor.Synapse.from_headers", false]], "from_headers() (bittensor.synapse.synapse class method)": [[54, "id6", false]], "from_headers() (bittensor.synapse.synapse method)": [[54, "bittensor.synapse.Synapse.from_headers", false]], "from_json() (bittensor.commands.utils.delegatesdetails class method)": [[24, "bittensor.commands.utils.DelegatesDetails.from_json", false]], "from_neuron_info() (bittensor.axoninfo class method)": [[44, "bittensor.AxonInfo.from_neuron_info", false]], "from_neuron_info() (bittensor.chain_data.axoninfo class method)": [[6, "bittensor.chain_data.AxonInfo.from_neuron_info", false]], "from_parameter_dict() (bittensor.axoninfo class method)": [[44, "bittensor.AxonInfo.from_parameter_dict", false]], "from_parameter_dict() (bittensor.chain_data.axoninfo class method)": [[6, "bittensor.chain_data.AxonInfo.from_parameter_dict", false]], "from_parameter_dict() (bittensor.chain_data.ipinfo class method)": [[6, "bittensor.chain_data.IPInfo.from_parameter_dict", false]], "from_parameter_dict() (bittensor.chain_data.subnethyperparameters class method)": [[6, "bittensor.chain_data.SubnetHyperparameters.from_parameter_dict", false]], "from_parameter_dict() (bittensor.chain_data.subnetinfo class method)": [[6, "bittensor.chain_data.SubnetInfo.from_parameter_dict", false]], "from_parameter_dict() (bittensor.ipinfo class method)": [[44, "bittensor.IPInfo.from_parameter_dict", false]], "from_parameter_dict() (bittensor.subnethyperparameters class method)": [[44, "bittensor.SubnetHyperparameters.from_parameter_dict", false]], "from_parameter_dict() (bittensor.subnetinfo class method)": [[44, "bittensor.SubnetInfo.from_parameter_dict", false]], "from_rao() (bittensor.balance static method)": [[44, "bittensor.Balance.from_rao", false]], "from_rao() (bittensor.utils.balance.balance static method)": [[60, "bittensor.utils.balance.Balance.from_rao", false]], "from_scale_encoding() (in module bittensor.chain_data)": [[6, "bittensor.chain_data.from_scale_encoding", false]], "from_scale_encoding_using_type_string() (in module bittensor.chain_data)": [[6, "bittensor.chain_data.from_scale_encoding_using_type_string", false]], "from_string() (bittensor.axoninfo class method)": [[44, "bittensor.AxonInfo.from_string", false]], "from_string() (bittensor.chain_data.axoninfo class method)": [[6, "bittensor.chain_data.AxonInfo.from_string", false]], "from_tao() (bittensor.balance static method)": [[44, "bittensor.Balance.from_tao", false]], "from_tao() (bittensor.utils.balance.balance static method)": [[60, "bittensor.utils.balance.Balance.from_tao", false]], "from_vec_u8() (bittensor.chain_data.delegateinfo class method)": [[6, "bittensor.chain_data.DelegateInfo.from_vec_u8", false]], "from_vec_u8() (bittensor.chain_data.ipinfo class method)": [[6, "bittensor.chain_data.IPInfo.from_vec_u8", false]], "from_vec_u8() (bittensor.chain_data.neuroninfo class method)": [[6, "bittensor.chain_data.NeuronInfo.from_vec_u8", false]], "from_vec_u8() (bittensor.chain_data.neuroninfolite class method)": [[6, "bittensor.chain_data.NeuronInfoLite.from_vec_u8", false]], "from_vec_u8() (bittensor.chain_data.scheduledcoldkeyswapinfo class method)": [[6, "bittensor.chain_data.ScheduledColdkeySwapInfo.from_vec_u8", false]], "from_vec_u8() (bittensor.chain_data.stakeinfo class method)": [[6, "bittensor.chain_data.StakeInfo.from_vec_u8", false]], "from_vec_u8() (bittensor.chain_data.subnethyperparameters class method)": [[6, "bittensor.chain_data.SubnetHyperparameters.from_vec_u8", false]], "from_vec_u8() (bittensor.chain_data.subnetinfo class method)": [[6, "bittensor.chain_data.SubnetInfo.from_vec_u8", false]], "from_vec_u8() (bittensor.delegateinfo class method)": [[44, "bittensor.DelegateInfo.from_vec_u8", false]], "from_vec_u8() (bittensor.ipinfo class method)": [[44, "bittensor.IPInfo.from_vec_u8", false]], "from_vec_u8() (bittensor.neuroninfo class method)": [[44, "bittensor.NeuronInfo.from_vec_u8", false]], "from_vec_u8() (bittensor.neuroninfolite class method)": [[44, "bittensor.NeuronInfoLite.from_vec_u8", false]], "from_vec_u8() (bittensor.stakeinfo class method)": [[44, "bittensor.StakeInfo.from_vec_u8", false]], "from_vec_u8() (bittensor.subnethyperparameters class method)": [[44, "bittensor.SubnetHyperparameters.from_vec_u8", false]], "from_vec_u8() (bittensor.subnetinfo class method)": [[44, "bittensor.SubnetInfo.from_vec_u8", false]], "from_weights_bonds_and_neuron_lite() (bittensor.chain_data.neuroninfo class method)": [[6, "bittensor.chain_data.NeuronInfo.from_weights_bonds_and_neuron_lite", false]], "from_weights_bonds_and_neuron_lite() (bittensor.neuroninfo class method)": [[44, "bittensor.NeuronInfo.from_weights_bonds_and_neuron_lite", false]], "full_address (bittensor.axon attribute)": [[44, "bittensor.axon.full_address", false]], "full_address (bittensor.axon.axon attribute)": [[0, "bittensor.axon.axon.full_address", false]], "future (bittensor.threadpool._workitem attribute)": [[56, "bittensor.threadpool._WorkItem.future", false]], "generate_weight_hash() (in module bittensor.utils.weight_utils)": [[69, "bittensor.utils.weight_utils.generate_weight_hash", false]], "get_all_neurons_for_pubkey() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_all_neurons_for_pubkey", false], [44, "bittensor.subtensor.get_all_neurons_for_pubkey", false]], "get_all_neurons_for_pubkey() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_all_neurons_for_pubkey", false]], "get_all_subnet_netuids() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_all_subnet_netuids", false], [44, "bittensor.subtensor.get_all_subnet_netuids", false]], "get_all_subnet_netuids() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_all_subnet_netuids", false]], "get_all_subnets_info() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor.get_all_subnets_info", false]], "get_all_subnets_info() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor.get_all_subnets_info", false]], "get_all_subnets_info() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor.get_all_subnets_info", false]], "get_all_subnets_info() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_all_subnets_info", false], [44, "bittensor.subtensor.get_all_subnets_info", false]], "get_all_subnets_info() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_all_subnets_info", false]], "get_all_uids_for_hotkey() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_all_uids_for_hotkey", false], [44, "bittensor.subtensor.get_all_uids_for_hotkey", false]], "get_all_uids_for_hotkey() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_all_uids_for_hotkey", false]], "get_all_wallets_for_path() (in module bittensor.commands.utils)": [[24, "bittensor.commands.utils.get_all_wallets_for_path", false]], "get_and_save_latest_version() (in module bittensor.utils.version)": [[67, "bittensor.utils.version.get_and_save_latest_version", false]], "get_axon_info() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_axon_info", false], [44, "bittensor.subtensor.get_axon_info", false]], "get_axon_info() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_axon_info", false]], "get_balance() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor.get_balance", false]], "get_balance() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor.get_balance", false]], "get_balance() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor.get_balance", false]], "get_balance() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_balance", false], [44, "bittensor.subtensor.get_balance", false]], "get_balance() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_balance", false]], "get_balances() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor.get_balances", false]], "get_balances() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor.get_balances", false]], "get_balances() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor.get_balances", false]], "get_balances() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_balances", false], [44, "bittensor.subtensor.get_balances", false]], "get_balances() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_balances", false]], "get_block_hash() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor.get_block_hash", false]], "get_block_hash() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor.get_block_hash", false]], "get_block_hash() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor.get_block_hash", false]], "get_block_hash() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_block_hash", false], [44, "bittensor.subtensor.get_block_hash", false]], "get_block_hash() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_block_hash", false]], "get_childkey_take() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_childkey_take", false], [44, "bittensor.subtensor.get_childkey_take", false]], "get_childkey_take() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_childkey_take", false]], "get_children() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_children", false], [44, "bittensor.subtensor.get_children", false]], "get_children() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_children", false]], "get_coldkey() (bittensor.wallet method)": [[44, "bittensor.wallet.get_coldkey", false]], "get_coldkey() (bittensor.wallet.wallet method)": [[70, "bittensor.wallet.wallet.get_coldkey", false]], "get_coldkey_password_from_environment() (in module bittensor)": [[44, "bittensor.get_coldkey_password_from_environment", false]], "get_coldkey_password_from_environment() (in module bittensor.keyfile)": [[45, "bittensor.keyfile.get_coldkey_password_from_environment", false]], "get_coldkey_wallets_for_path() (in module bittensor.commands.utils)": [[24, "bittensor.commands.utils.get_coldkey_wallets_for_path", false]], "get_coldkeypub() (bittensor.wallet method)": [[44, "bittensor.wallet.get_coldkeypub", false]], "get_coldkeypub() (bittensor.wallet.wallet method)": [[70, "bittensor.wallet.wallet.get_coldkeypub", false]], "get_commitment() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor.get_commitment", false]], "get_commitment() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor.get_commitment", false]], "get_commitment() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor.get_commitment", false]], "get_commitment() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_commitment", false], [44, "bittensor.subtensor.get_commitment", false]], "get_commitment() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_commitment", false]], "get_config() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.get_config", false]], "get_config() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.get_config", false]], "get_cpu_count() (in module bittensor.utils.registration)": [[64, "bittensor.utils.registration.get_cpu_count", false]], "get_current_block() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor.get_current_block", false]], "get_current_block() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor.get_current_block", false]], "get_current_block() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor.get_current_block", false]], "get_current_block() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_current_block", false], [44, "bittensor.subtensor.get_current_block", false]], "get_current_block() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_current_block", false]], "get_delegate_by_hotkey() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor.get_delegate_by_hotkey", false]], "get_delegate_by_hotkey() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor.get_delegate_by_hotkey", false]], "get_delegate_by_hotkey() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor.get_delegate_by_hotkey", false]], "get_delegate_by_hotkey() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_delegate_by_hotkey", false], [44, "bittensor.subtensor.get_delegate_by_hotkey", false]], "get_delegate_by_hotkey() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_delegate_by_hotkey", false]], "get_delegate_take() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_delegate_take", false], [44, "bittensor.subtensor.get_delegate_take", false]], "get_delegate_take() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_delegate_take", false]], "get_delegated() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor.get_delegated", false]], "get_delegated() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor.get_delegated", false]], "get_delegated() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor.get_delegated", false]], "get_delegated() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_delegated", false], [44, "bittensor.subtensor.get_delegated", false]], "get_delegated() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_delegated", false]], "get_delegates() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor.get_delegates", false]], "get_delegates() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor.get_delegates", false]], "get_delegates() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor.get_delegates", false]], "get_delegates() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_delegates", false], [44, "bittensor.subtensor.get_delegates", false]], "get_delegates() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_delegates", false]], "get_delegates_details() (in module bittensor.commands.utils)": [[24, "bittensor.commands.utils.get_delegates_details", false]], "get_delegates_lite() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_delegates_lite", false], [44, "bittensor.subtensor.get_delegates_lite", false]], "get_delegates_lite() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_delegates_lite", false]], "get_emission_value_by_subnet() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_emission_value_by_subnet", false], [44, "bittensor.subtensor.get_emission_value_by_subnet", false]], "get_emission_value_by_subnet() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_emission_value_by_subnet", false]], "get_error_info_by_index() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_error_info_by_index", false], [44, "bittensor.subtensor.get_error_info_by_index", false]], "get_error_info_by_index() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_error_info_by_index", false]], "get_existential_deposit() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_existential_deposit", false], [44, "bittensor.subtensor.get_existential_deposit", false]], "get_existential_deposit() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_existential_deposit", false]], "get_explorer_root_url_by_network_from_map() (in module bittensor)": [[44, "bittensor.get_explorer_root_url_by_network_from_map", false]], "get_explorer_root_url_by_network_from_map() (in module bittensor.utils)": [[62, "bittensor.utils.get_explorer_root_url_by_network_from_map", false]], "get_explorer_url_for_network() (in module bittensor)": [[44, "bittensor.get_explorer_url_for_network", false]], "get_explorer_url_for_network() (in module bittensor.utils)": [[62, "bittensor.utils.get_explorer_url_for_network", false]], "get_external_ip() (in module bittensor.utils.networking)": [[63, "bittensor.utils.networking.get_external_ip", false]], "get_formatted_ws_endpoint_url() (in module bittensor.utils.networking)": [[63, "bittensor.utils.networking.get_formatted_ws_endpoint_url", false]], "get_hotkey() (bittensor.wallet method)": [[44, "bittensor.wallet.get_hotkey", false]], "get_hotkey() (bittensor.wallet.wallet method)": [[70, "bittensor.wallet.wallet.get_hotkey", false]], "get_hotkey() (in module bittensor.commands.stake)": [[21, "bittensor.commands.stake.get_hotkey", false]], "get_hotkey_owner() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_hotkey_owner", false], [44, "bittensor.subtensor.get_hotkey_owner", false]], "get_hotkey_owner() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_hotkey_owner", false]], "get_hotkey_wallets_for_wallet() (in module bittensor.commands.utils)": [[24, "bittensor.commands.utils.get_hotkey_wallets_for_wallet", false]], "get_human_readable() (in module bittensor.utils.formatting)": [[61, "bittensor.utils.formatting.get_human_readable", false]], "get_keypair() (bittensor.keyfile method)": [[44, "bittensor.keyfile.get_keypair", false]], "get_keypair() (bittensor.keyfile.keyfile method)": [[45, "bittensor.keyfile.keyfile.get_keypair", false]], "get_keypair() (bittensor.keyfile.mockkeyfile method)": [[45, "bittensor.keyfile.Mockkeyfile.get_keypair", false]], "get_keypair() (bittensor.mock.keyfile_mock.mockkeyfile method)": [[48, "bittensor.mock.keyfile_mock.MockKeyfile.get_keypair", false]], "get_keypair() (bittensor.mockkeyfile method)": [[44, "bittensor.MockKeyfile.get_keypair", false], [44, "bittensor.Mockkeyfile.get_keypair", false]], "get_level() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.get_level", false]], "get_level() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.get_level", false]], "get_max_logger_name_length() (in module bittensor.btlogging.helpers)": [[3, "bittensor.btlogging.helpers.get_max_logger_name_length", false]], "get_metadata() (in module bittensor.extrinsics.serving)": [[39, "bittensor.extrinsics.serving.get_metadata", false]], "get_minimum_required_stake() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor.get_minimum_required_stake", false]], "get_minimum_required_stake() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor.get_minimum_required_stake", false]], "get_minimum_required_stake() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor.get_minimum_required_stake", false]], "get_minimum_required_stake() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_minimum_required_stake", false], [44, "bittensor.subtensor.get_minimum_required_stake", false]], "get_minimum_required_stake() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_minimum_required_stake", false]], "get_mock_coldkey() (in module bittensor.mock.wallet_mock)": [[50, "bittensor.mock.wallet_mock.get_mock_coldkey", false]], "get_mock_hotkey() (in module bittensor.mock.wallet_mock)": [[50, "bittensor.mock.wallet_mock.get_mock_hotkey", false]], "get_mock_keypair() (in module bittensor.mock.wallet_mock)": [[50, "bittensor.mock.wallet_mock.get_mock_keypair", false]], "get_mock_wallet() (in module bittensor.mock.wallet_mock)": [[50, "bittensor.mock.wallet_mock.get_mock_wallet", false]], "get_netuid() (in module bittensor.commands.stake)": [[21, "bittensor.commands.stake.get_netuid", false]], "get_netuids_for_hotkey() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_netuids_for_hotkey", false], [44, "bittensor.subtensor.get_netuids_for_hotkey", false]], "get_netuids_for_hotkey() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_netuids_for_hotkey", false]], "get_neuron_for_pubkey_and_subnet() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_neuron_for_pubkey_and_subnet", false], [44, "bittensor.subtensor.get_neuron_for_pubkey_and_subnet", false]], "get_neuron_for_pubkey_and_subnet() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_neuron_for_pubkey_and_subnet", false]], "get_nominators_for_hotkey() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_nominators_for_hotkey", false], [44, "bittensor.subtensor.get_nominators_for_hotkey", false]], "get_nominators_for_hotkey() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_nominators_for_hotkey", false]], "get_null_neuron() (bittensor.chain_data.neuroninfo static method)": [[6, "bittensor.chain_data.NeuronInfo.get_null_neuron", false]], "get_null_neuron() (bittensor.chain_data.neuroninfolite static method)": [[6, "bittensor.chain_data.NeuronInfoLite.get_null_neuron", false]], "get_null_neuron() (bittensor.neuroninfo static method)": [[44, "bittensor.NeuronInfo.get_null_neuron", false]], "get_null_neuron() (bittensor.neuroninfolite static method)": [[44, "bittensor.NeuronInfoLite.get_null_neuron", false]], "get_parent_stake_info() (bittensor.commands.getchildrencommand static method)": [[11, "bittensor.commands.GetChildrenCommand.get_parent_stake_info", false]], "get_parent_stake_info() (bittensor.commands.stake.getchildrencommand static method)": [[21, "bittensor.commands.stake.GetChildrenCommand.get_parent_stake_info", false]], "get_parents() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_parents", false], [44, "bittensor.subtensor.get_parents", false]], "get_parents() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_parents", false]], "get_prometheus_info() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_prometheus_info", false], [44, "bittensor.subtensor.get_prometheus_info", false]], "get_prometheus_info() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_prometheus_info", false]], "get_proposal_call_data() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_proposal_call_data", false], [44, "bittensor.subtensor.get_proposal_call_data", false]], "get_proposal_call_data() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_proposal_call_data", false]], "get_proposal_hashes() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_proposal_hashes", false], [44, "bittensor.subtensor.get_proposal_hashes", false]], "get_proposal_hashes() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_proposal_hashes", false]], "get_proposal_vote_data (bittensor.subtensor attribute)": [[44, "bittensor.Subtensor.get_proposal_vote_data", false], [44, "bittensor.subtensor.get_proposal_vote_data", false]], "get_proposal_vote_data (bittensor.subtensor.subtensor attribute)": [[53, "bittensor.subtensor.Subtensor.get_proposal_vote_data", false]], "get_proposals() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_proposals", false], [44, "bittensor.subtensor.get_proposals", false]], "get_proposals() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_proposals", false]], "get_queue() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.get_queue", false]], "get_queue() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.get_queue", false]], "get_random_unused_port() (in module bittensor.utils.test_utils)": [[66, "bittensor.utils.test_utils.get_random_unused_port", false]], "get_remaining_arbitration_period() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_remaining_arbitration_period", false], [44, "bittensor.subtensor.get_remaining_arbitration_period", false]], "get_remaining_arbitration_period() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_remaining_arbitration_period", false]], "get_required_fields() (bittensor.synapse method)": [[44, "bittensor.Synapse.get_required_fields", false]], "get_required_fields() (bittensor.synapse.synapse method)": [[54, "bittensor.synapse.Synapse.get_required_fields", false]], "get_save_dir() (in module bittensor.metagraph)": [[46, "bittensor.metagraph.get_save_dir", false]], "get_senate_members() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_senate_members", false], [44, "bittensor.subtensor.get_senate_members", false]], "get_senate_members() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_senate_members", false]], "get_size() (in module bittensor.synapse)": [[54, "bittensor.synapse.get_size", false]], "get_ss58_format() (in module bittensor.utils)": [[62, "bittensor.utils.get_ss58_format", false]], "get_ss58_format() (in module bittensor.utils.wallet_utils)": [[68, "bittensor.utils.wallet_utils.get_ss58_format", false]], "get_stake() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_stake", false], [44, "bittensor.subtensor.get_stake", false]], "get_stake() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_stake", false]], "get_stake_for_coldkey_and_hotkey() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_stake_for_coldkey_and_hotkey", false], [44, "bittensor.subtensor.get_stake_for_coldkey_and_hotkey", false]], "get_stake_for_coldkey_and_hotkey() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_stake_for_coldkey_and_hotkey", false]], "get_stake_info_for_coldkey() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_stake_info_for_coldkey", false], [44, "bittensor.subtensor.get_stake_info_for_coldkey", false]], "get_stake_info_for_coldkey() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_stake_info_for_coldkey", false]], "get_stake_info_for_coldkeys() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_stake_info_for_coldkeys", false], [44, "bittensor.subtensor.get_stake_info_for_coldkeys", false]], "get_stake_info_for_coldkeys() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_stake_info_for_coldkeys", false]], "get_status_message() (bittensor.utils.registration.registrationstatisticslogger method)": [[64, "bittensor.utils.registration.RegistrationStatisticsLogger.get_status_message", false]], "get_subnet_burn_cost() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_subnet_burn_cost", false], [44, "bittensor.subtensor.get_subnet_burn_cost", false]], "get_subnet_burn_cost() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_subnet_burn_cost", false]], "get_subnet_connection_requirement() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_subnet_connection_requirement", false], [44, "bittensor.subtensor.get_subnet_connection_requirement", false]], "get_subnet_connection_requirement() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_subnet_connection_requirement", false]], "get_subnet_connection_requirements() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_subnet_connection_requirements", false], [44, "bittensor.subtensor.get_subnet_connection_requirements", false]], "get_subnet_connection_requirements() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_subnet_connection_requirements", false]], "get_subnet_hyperparameters() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_subnet_hyperparameters", false], [44, "bittensor.subtensor.get_subnet_hyperparameters", false]], "get_subnet_hyperparameters() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_subnet_hyperparameters", false]], "get_subnet_info() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor.get_subnet_info", false]], "get_subnet_info() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor.get_subnet_info", false]], "get_subnet_info() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor.get_subnet_info", false]], "get_subnet_info() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_subnet_info", false], [44, "bittensor.subtensor.get_subnet_info", false]], "get_subnet_info() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_subnet_info", false]], "get_subnet_modality() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_subnet_modality", false], [44, "bittensor.subtensor.get_subnet_modality", false]], "get_subnet_modality() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_subnet_modality", false]], "get_subnet_owner() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_subnet_owner", false], [44, "bittensor.subtensor.get_subnet_owner", false]], "get_subnet_owner() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_subnet_owner", false]], "get_subnets() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_subnets", false], [44, "bittensor.subtensor.get_subnets", false]], "get_subnets() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_subnets", false]], "get_subtensor_errors() (in module bittensor.utils.subtensor)": [[65, "bittensor.utils.subtensor.get_subtensor_errors", false]], "get_take() (bittensor.commands.getchildkeytakecommand static method)": [[11, "bittensor.commands.GetChildKeyTakeCommand.get_take", false]], "get_take() (bittensor.commands.stake.getchildkeytakecommand static method)": [[21, "bittensor.commands.stake.GetChildKeyTakeCommand.get_take", false]], "get_total_size() (bittensor.synapse method)": [[44, "bittensor.Synapse.get_total_size", false], [44, "id12", false]], "get_total_size() (bittensor.synapse.synapse method)": [[54, "bittensor.synapse.Synapse.get_total_size", false], [54, "id2", false]], "get_total_stake_for_coldkey() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_total_stake_for_coldkey", false], [44, "bittensor.subtensor.get_total_stake_for_coldkey", false]], "get_total_stake_for_coldkey() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_total_stake_for_coldkey", false]], "get_total_stake_for_hotkey() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_total_stake_for_hotkey", false], [44, "bittensor.subtensor.get_total_stake_for_hotkey", false]], "get_total_stake_for_hotkey() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_total_stake_for_hotkey", false]], "get_total_subnets() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_total_subnets", false], [44, "bittensor.subtensor.get_total_subnets", false]], "get_total_subnets() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_total_subnets", false]], "get_transfer_fee() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor.get_transfer_fee", false]], "get_transfer_fee() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor.get_transfer_fee", false]], "get_transfer_fee() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor.get_transfer_fee", false]], "get_transfer_fee() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_transfer_fee", false], [44, "bittensor.subtensor.get_transfer_fee", false]], "get_transfer_fee() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_transfer_fee", false]], "get_tree() (bittensor.commands.list.listcommand static method)": [[13, "bittensor.commands.list.ListCommand.get_tree", false]], "get_tree() (bittensor.commands.listcommand static method)": [[11, "bittensor.commands.ListCommand.get_tree", false]], "get_uid_for_hotkey_on_subnet() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_uid_for_hotkey_on_subnet", false], [44, "bittensor.subtensor.get_uid_for_hotkey_on_subnet", false]], "get_uid_for_hotkey_on_subnet() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_uid_for_hotkey_on_subnet", false]], "get_vote_data() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.get_vote_data", false], [44, "bittensor.subtensor.get_vote_data", false]], "get_vote_data() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.get_vote_data", false]], "get_wallet_transfers() (in module bittensor.commands.wallets)": [[25, "bittensor.commands.wallets.get_wallet_transfers", false]], "getchildkeytakecommand (class in bittensor.commands)": [[11, "bittensor.commands.GetChildKeyTakeCommand", false]], "getchildkeytakecommand (class in bittensor.commands.stake)": [[21, "bittensor.commands.stake.GetChildKeyTakeCommand", false]], "getchildrencommand (class in bittensor.commands)": [[11, "bittensor.commands.GetChildrenCommand", false]], "getchildrencommand (class in bittensor.commands.stake)": [[21, "bittensor.commands.stake.GetChildrenCommand", false]], "getidentitycommand (class in bittensor.commands)": [[11, "bittensor.commands.GetIdentityCommand", false]], "getidentitycommand (class in bittensor.commands.identity)": [[10, "bittensor.commands.identity.GetIdentityCommand", false]], "getwallethistorycommand (class in bittensor.commands)": [[11, "bittensor.commands.GetWalletHistoryCommand", false]], "getwallethistorycommand (class in bittensor.commands.wallets)": [[25, "bittensor.commands.wallets.GetWalletHistoryCommand", false]], "graphql_query (in module bittensor.commands.wallets)": [[25, "bittensor.commands.wallets.GRAPHQL_QUERY", false]], "hash() (in module bittensor)": [[44, "bittensor.hash", false]], "hash() (in module bittensor.utils)": [[62, "bittensor.utils.hash", false]], "hash_rate (bittensor.utils.registration.registrationstatistics attribute)": [[64, "bittensor.utils.registration.RegistrationStatistics.hash_rate", false]], "hash_rate_perpetual (bittensor.utils.registration.registrationstatistics attribute)": [[64, "bittensor.utils.registration.RegistrationStatistics.hash_rate_perpetual", false]], "header_size (bittensor.synapse attribute)": [[44, "bittensor.Synapse.header_size", false]], "header_size (bittensor.synapse.synapse attribute)": [[54, "bittensor.synapse.Synapse.header_size", false]], "help() (bittensor.axon class method)": [[44, "bittensor.axon.help", false]], "help() (bittensor.axon.axon class method)": [[0, "bittensor.axon.axon.help", false]], "help() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.help", false]], "help() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.help", false]], "help() (bittensor.subtensor class method)": [[44, "bittensor.Subtensor.help", false], [44, "bittensor.subtensor.help", false]], "help() (bittensor.subtensor.subtensor class method)": [[53, "bittensor.subtensor.Subtensor.help", false]], "help() (bittensor.wallet class method)": [[44, "bittensor.wallet.help", false]], "help() (bittensor.wallet.wallet class method)": [[70, "bittensor.wallet.wallet.help", false]], "hotkey (bittensor.axoninfo attribute)": [[44, "bittensor.AxonInfo.hotkey", false]], "hotkey (bittensor.chain_data.axoninfo attribute)": [[6, "bittensor.chain_data.AxonInfo.hotkey", false]], "hotkey (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.hotkey", false]], "hotkey (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.hotkey", false]], "hotkey (bittensor.neuroninfo attribute)": [[44, "bittensor.NeuronInfo.hotkey", false]], "hotkey (bittensor.neuroninfolite attribute)": [[44, "bittensor.NeuronInfoLite.hotkey", false]], "hotkey (bittensor.synapse.terminalinfo attribute)": [[54, "bittensor.synapse.TerminalInfo.hotkey", false]], "hotkey (bittensor.terminalinfo attribute)": [[44, "bittensor.TerminalInfo.hotkey", false]], "hotkey (bittensor.wallet property)": [[44, "bittensor.wallet.hotkey", false]], "hotkey (bittensor.wallet.wallet property)": [[70, "bittensor.wallet.wallet.hotkey", false]], "hotkey_bytes (bittensor.utils.registration._solverbase attribute)": [[64, "bittensor.utils.registration._SolverBase.hotkey_bytes", false]], "hotkey_file (bittensor.mock.wallet_mock.mockwallet property)": [[50, "bittensor.mock.wallet_mock.MockWallet.hotkey_file", false]], "hotkey_file (bittensor.mockwallet property)": [[44, "bittensor.MockWallet.hotkey_file", false]], "hotkey_file (bittensor.wallet property)": [[44, "bittensor.wallet.hotkey_file", false]], "hotkey_file (bittensor.wallet.wallet property)": [[70, "bittensor.wallet.wallet.hotkey_file", false]], "hotkey_ss58 (bittensor.chain_data.delegateinfo attribute)": [[6, "bittensor.chain_data.DelegateInfo.hotkey_ss58", false]], "hotkey_ss58 (bittensor.chain_data.stakeinfo attribute)": [[6, "bittensor.chain_data.StakeInfo.hotkey_ss58", false]], "hotkey_ss58 (bittensor.delegateinfo attribute)": [[44, "bittensor.DelegateInfo.hotkey_ss58", false]], "hotkey_ss58 (bittensor.stakeinfo attribute)": [[44, "bittensor.StakeInfo.hotkey_ss58", false]], "hotkey_str (bittensor.wallet attribute)": [[44, "bittensor.wallet.hotkey_str", false]], "hotkey_str (bittensor.wallet.wallet attribute)": [[70, "bittensor.wallet.wallet.hotkey_str", false]], "hotkeys (bittensor.metagraph.metagraphmixin property)": [[46, "bittensor.metagraph.MetagraphMixin.hotkeys", false]], "hyperparams (in module bittensor.commands.network)": [[16, "bittensor.commands.network.HYPERPARAMS", false]], "i (bittensor.metagraph.metagraphmixin property)": [[46, "bittensor.metagraph.MetagraphMixin.I", false]], "identityerror": [[30, "bittensor.errors.IdentityError", false], [44, "bittensor.IdentityError", false]], "immunity_period (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.immunity_period", false]], "immunity_period (bittensor.chain_data.subnetinfo attribute)": [[6, "bittensor.chain_data.SubnetInfo.immunity_period", false]], "immunity_period (bittensor.subnethyperparameters attribute)": [[44, "bittensor.SubnetHyperparameters.immunity_period", false]], "immunity_period (bittensor.subnetinfo attribute)": [[44, "bittensor.SubnetInfo.immunity_period", false]], "immunity_period() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.immunity_period", false], [44, "bittensor.subtensor.immunity_period", false]], "immunity_period() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.immunity_period", false]], "immunityperiod (bittensor.mock.subtensor_mock.mocksubtensorstate attribute)": [[49, "bittensor.mock.subtensor_mock.MockSubtensorState.ImmunityPeriod", false]], "incentive (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.incentive", false]], "incentive (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.incentive", false]], "incentive (bittensor.metagraph.metagraphmixin attribute)": [[46, "bittensor.metagraph.MetagraphMixin.incentive", false]], "incentive (bittensor.metagraph.nontorchmetagraph attribute)": [[46, "bittensor.metagraph.NonTorchMetagraph.incentive", false]], "incentive (bittensor.metagraph.torchmetagraph attribute)": [[46, "bittensor.metagraph.TorchMetaGraph.incentive", false]], "incentive (bittensor.neuroninfo attribute)": [[44, "bittensor.NeuronInfo.incentive", false]], "incentive (bittensor.neuroninfolite attribute)": [[44, "bittensor.NeuronInfoLite.incentive", false]], "incentive() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.incentive", false], [44, "bittensor.subtensor.incentive", false]], "incentive() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.incentive", false]], "increase_take_extrinsic() (in module bittensor.extrinsics.delegation)": [[32, "bittensor.extrinsics.delegation.increase_take_extrinsic", false]], "index (bittensor.chain_data.proposalvotedata attribute)": [[6, "bittensor.chain_data.ProposalVoteData.index", false]], "index (bittensor.proposalvotedata attribute)": [[44, "bittensor.ProposalVoteData.index", false]], "info() (bittensor.axon method)": [[44, "bittensor.axon.info", false]], "info() (bittensor.axon.axon method)": [[0, "bittensor.axon.axon.info", false]], "info() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.info", false]], "info() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.info", false]], "infodict (class in bittensor.mock.subtensor_mock)": [[49, "bittensor.mock.subtensor_mock.InfoDict", false]], "inspectcommand (class in bittensor.commands)": [[11, "bittensor.commands.InspectCommand", false]], "inspectcommand (class in bittensor.commands.inspect)": [[12, "bittensor.commands.inspect.InspectCommand", false]], "install_signal_handlers() (bittensor.axon.fastapithreadedserver method)": [[0, "bittensor.axon.FastAPIThreadedServer.install_signal_handlers", false]], "int_to_ip() (in module bittensor.utils.networking)": [[63, "bittensor.utils.networking.int_to_ip", false]], "internalservererror": [[30, "bittensor.errors.InternalServerError", false], [44, "bittensor.InternalServerError", false]], "intlistprompt (class in bittensor.commands.utils)": [[24, "bittensor.commands.utils.IntListPrompt", false]], "invalidconfigfile": [[27, "bittensor.config.InvalidConfigFile", false], [44, "bittensor.InvalidConfigFile", false]], "invalidrequestnameerror": [[30, "bittensor.errors.InvalidRequestNameError", false], [44, "bittensor.InvalidRequestNameError", false]], "ip (bittensor.axon attribute)": [[44, "bittensor.axon.ip", false]], "ip (bittensor.axon.axon attribute)": [[0, "bittensor.axon.axon.ip", false]], "ip (bittensor.axoninfo attribute)": [[44, "bittensor.AxonInfo.ip", false]], "ip (bittensor.chain_data.axoninfo attribute)": [[6, "bittensor.chain_data.AxonInfo.ip", false]], "ip (bittensor.chain_data.ipinfo attribute)": [[6, "bittensor.chain_data.IPInfo.ip", false]], "ip (bittensor.chain_data.prometheusinfo attribute)": [[6, "bittensor.chain_data.PrometheusInfo.ip", false]], "ip (bittensor.ipinfo attribute)": [[44, "bittensor.IPInfo.ip", false]], "ip (bittensor.mock.subtensor_mock.axoninfodict attribute)": [[49, "bittensor.mock.subtensor_mock.AxonInfoDict.ip", false]], "ip (bittensor.mock.subtensor_mock.axonservecallparams attribute)": [[49, "bittensor.mock.subtensor_mock.AxonServeCallParams.ip", false]], "ip (bittensor.mock.subtensor_mock.prometheusinfodict attribute)": [[49, "bittensor.mock.subtensor_mock.PrometheusInfoDict.ip", false]], "ip (bittensor.mock.subtensor_mock.prometheusservecallparams attribute)": [[49, "bittensor.mock.subtensor_mock.PrometheusServeCallParams.ip", false]], "ip (bittensor.prometheusinfo attribute)": [[44, "bittensor.PrometheusInfo.ip", false]], "ip (bittensor.synapse.terminalinfo attribute)": [[54, "bittensor.synapse.TerminalInfo.ip", false]], "ip (bittensor.terminalinfo attribute)": [[44, "bittensor.TerminalInfo.ip", false]], "ip (bittensor.types.axonservecallparams attribute)": [[57, "bittensor.types.AxonServeCallParams.ip", false]], "ip (bittensor.types.prometheusservecallparams attribute)": [[57, "bittensor.types.PrometheusServeCallParams.ip", false]], "ip__str__() (in module bittensor.utils.networking)": [[63, "bittensor.utils.networking.ip__str__", false]], "ip_str() (bittensor.axoninfo method)": [[44, "bittensor.AxonInfo.ip_str", false]], "ip_str() (bittensor.chain_data.axoninfo method)": [[6, "bittensor.chain_data.AxonInfo.ip_str", false]], "ip_to_int() (in module bittensor.utils.networking)": [[63, "bittensor.utils.networking.ip_to_int", false]], "ip_type (bittensor.axoninfo attribute)": [[44, "bittensor.AxonInfo.ip_type", false]], "ip_type (bittensor.chain_data.axoninfo attribute)": [[6, "bittensor.chain_data.AxonInfo.ip_type", false]], "ip_type (bittensor.chain_data.ipinfo attribute)": [[6, "bittensor.chain_data.IPInfo.ip_type", false]], "ip_type (bittensor.chain_data.prometheusinfo attribute)": [[6, "bittensor.chain_data.PrometheusInfo.ip_type", false]], "ip_type (bittensor.ipinfo attribute)": [[44, "bittensor.IPInfo.ip_type", false]], "ip_type (bittensor.mock.subtensor_mock.axoninfodict attribute)": [[49, "bittensor.mock.subtensor_mock.AxonInfoDict.ip_type", false]], "ip_type (bittensor.mock.subtensor_mock.axonservecallparams attribute)": [[49, "bittensor.mock.subtensor_mock.AxonServeCallParams.ip_type", false]], "ip_type (bittensor.mock.subtensor_mock.prometheusinfodict attribute)": [[49, "bittensor.mock.subtensor_mock.PrometheusInfoDict.ip_type", false]], "ip_type (bittensor.mock.subtensor_mock.prometheusservecallparams attribute)": [[49, "bittensor.mock.subtensor_mock.PrometheusServeCallParams.ip_type", false]], "ip_type (bittensor.prometheusinfo attribute)": [[44, "bittensor.PrometheusInfo.ip_type", false]], "ip_type (bittensor.types.axonservecallparams attribute)": [[57, "bittensor.types.AxonServeCallParams.ip_type", false]], "ip_type (bittensor.types.prometheusservecallparams attribute)": [[57, "bittensor.types.PrometheusServeCallParams.ip_type", false]], "ip_version() (in module bittensor.utils.networking)": [[63, "bittensor.utils.networking.ip_version", false]], "ipinfo (bittensor.chain_data.chaindatatype attribute)": [[6, "bittensor.chain_data.ChainDataType.IPInfo", false]], "ipinfo (class in bittensor)": [[44, "bittensor.IPInfo", false]], "ipinfo (class in bittensor.chain_data)": [[6, "bittensor.chain_data.IPInfo", false]], "is_blacklist (bittensor.synapse property)": [[44, "bittensor.Synapse.is_blacklist", false]], "is_blacklist (bittensor.synapse.synapse property)": [[54, "bittensor.synapse.Synapse.is_blacklist", false]], "is_empty (bittensor.prioritythreadpoolexecutor property)": [[44, "bittensor.PriorityThreadPoolExecutor.is_empty", false]], "is_empty (bittensor.threadpool.prioritythreadpoolexecutor property)": [[56, "bittensor.threadpool.PriorityThreadPoolExecutor.is_empty", false]], "is_encrypted() (bittensor.keyfile method)": [[44, "bittensor.keyfile.is_encrypted", false]], "is_encrypted() (bittensor.keyfile.keyfile method)": [[45, "bittensor.keyfile.keyfile.is_encrypted", false]], "is_encrypted() (bittensor.keyfile.mockkeyfile method)": [[45, "bittensor.keyfile.Mockkeyfile.is_encrypted", false]], "is_encrypted() (bittensor.mock.keyfile_mock.mockkeyfile method)": [[48, "bittensor.mock.keyfile_mock.MockKeyfile.is_encrypted", false]], "is_encrypted() (bittensor.mockkeyfile method)": [[44, "bittensor.MockKeyfile.is_encrypted", false], [44, "bittensor.Mockkeyfile.is_encrypted", false]], "is_failure (bittensor.synapse property)": [[44, "bittensor.Synapse.is_failure", false]], "is_failure (bittensor.synapse.synapse property)": [[54, "bittensor.synapse.Synapse.is_failure", false]], "is_hotkey_delegate() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.is_hotkey_delegate", false], [44, "bittensor.subtensor.is_hotkey_delegate", false]], "is_hotkey_delegate() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.is_hotkey_delegate", false]], "is_hotkey_registered() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.is_hotkey_registered", false], [44, "bittensor.subtensor.is_hotkey_registered", false]], "is_hotkey_registered() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.is_hotkey_registered", false]], "is_hotkey_registered_any() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.is_hotkey_registered_any", false], [44, "bittensor.subtensor.is_hotkey_registered_any", false]], "is_hotkey_registered_any() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.is_hotkey_registered_any", false]], "is_hotkey_registered_on_subnet() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.is_hotkey_registered_on_subnet", false], [44, "bittensor.subtensor.is_hotkey_registered_on_subnet", false]], "is_hotkey_registered_on_subnet() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.is_hotkey_registered_on_subnet", false]], "is_null (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.is_null", false]], "is_null (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.is_null", false]], "is_null (bittensor.neuroninfo attribute)": [[44, "bittensor.NeuronInfo.is_null", false]], "is_null (bittensor.neuroninfolite attribute)": [[44, "bittensor.NeuronInfoLite.is_null", false]], "is_readable() (bittensor.keyfile method)": [[44, "bittensor.keyfile.is_readable", false]], "is_readable() (bittensor.keyfile.keyfile method)": [[45, "bittensor.keyfile.keyfile.is_readable", false]], "is_readable() (bittensor.keyfile.mockkeyfile method)": [[45, "bittensor.keyfile.Mockkeyfile.is_readable", false]], "is_readable() (bittensor.mock.keyfile_mock.mockkeyfile method)": [[48, "bittensor.mock.keyfile_mock.MockKeyfile.is_readable", false]], "is_readable() (bittensor.mockkeyfile method)": [[44, "bittensor.MockKeyfile.is_readable", false], [44, "bittensor.Mockkeyfile.is_readable", false]], "is_running (bittensor.axon.fastapithreadedserver attribute)": [[0, "bittensor.axon.FastAPIThreadedServer.is_running", false]], "is_senate_member() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.is_senate_member", false], [44, "bittensor.subtensor.is_senate_member", false]], "is_senate_member() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.is_senate_member", false]], "is_serving (bittensor.axoninfo property)": [[44, "bittensor.AxonInfo.is_serving", false]], "is_serving (bittensor.chain_data.axoninfo property)": [[6, "bittensor.chain_data.AxonInfo.is_serving", false]], "is_set() (bittensor.config method)": [[44, "bittensor.config.is_set", false]], "is_set() (bittensor.config.config method)": [[27, "bittensor.config.config.is_set", false]], "is_stale() (bittensor.utils.registration.powsolution method)": [[64, "bittensor.utils.registration.POWSolution.is_stale", false]], "is_success (bittensor.synapse property)": [[44, "bittensor.Synapse.is_success", false]], "is_success (bittensor.synapse.synapse property)": [[54, "bittensor.synapse.Synapse.is_success", false]], "is_timeout (bittensor.synapse property)": [[44, "bittensor.Synapse.is_timeout", false]], "is_timeout (bittensor.synapse.synapse property)": [[54, "bittensor.synapse.Synapse.is_timeout", false]], "is_valid_bittensor_address_or_public_key() (in module bittensor.utils)": [[62, "bittensor.utils.is_valid_bittensor_address_or_public_key", false]], "is_valid_bittensor_address_or_public_key() (in module bittensor.utils.wallet_utils)": [[68, "bittensor.utils.wallet_utils.is_valid_bittensor_address_or_public_key", false]], "is_valid_ed25519_pubkey() (in module bittensor.utils)": [[62, "bittensor.utils.is_valid_ed25519_pubkey", false]], "is_valid_ed25519_pubkey() (in module bittensor.utils.wallet_utils)": [[68, "bittensor.utils.wallet_utils.is_valid_ed25519_pubkey", false]], "is_valid_ss58_address() (in module bittensor.utils)": [[62, "bittensor.utils.is_valid_ss58_address", false]], "is_valid_ss58_address() (in module bittensor.utils.wallet_utils)": [[68, "bittensor.utils.wallet_utils.is_valid_ss58_address", false]], "is_writable() (bittensor.keyfile method)": [[44, "bittensor.keyfile.is_writable", false]], "is_writable() (bittensor.keyfile.keyfile method)": [[45, "bittensor.keyfile.keyfile.is_writable", false]], "is_writable() (bittensor.keyfile.mockkeyfile method)": [[45, "bittensor.keyfile.Mockkeyfile.is_writable", false]], "is_writable() (bittensor.mock.keyfile_mock.mockkeyfile method)": [[48, "bittensor.mock.keyfile_mock.MockKeyfile.is_writable", false]], "is_writable() (bittensor.mockkeyfile method)": [[44, "bittensor.MockKeyfile.is_writable", false], [44, "bittensor.Mockkeyfile.is_writable", false]], "kappa (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.kappa", false]], "kappa (bittensor.chain_data.subnetinfo attribute)": [[6, "bittensor.chain_data.SubnetInfo.kappa", false]], "kappa (bittensor.mock.subtensor_mock.mocksubtensorstate attribute)": [[49, "bittensor.mock.subtensor_mock.MockSubtensorState.Kappa", false]], "kappa (bittensor.subnethyperparameters attribute)": [[44, "bittensor.SubnetHyperparameters.kappa", false]], "kappa (bittensor.subnetinfo attribute)": [[44, "bittensor.SubnetInfo.kappa", false]], "kappa() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.kappa", false], [44, "bittensor.subtensor.kappa", false]], "kappa() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.kappa", false]], "key_nonce (in module bittensor.subtensor)": [[53, "bittensor.subtensor.KEY_NONCE", false]], "keyfile (class in bittensor)": [[44, "bittensor.keyfile", false]], "keyfile (class in bittensor.keyfile)": [[45, "bittensor.keyfile.keyfile", false]], "keyfile_data (bittensor.keyfile property)": [[44, "bittensor.keyfile.keyfile_data", false]], "keyfile_data (bittensor.keyfile.keyfile property)": [[45, "bittensor.keyfile.keyfile.keyfile_data", false]], "keyfile_data (bittensor.mock.keyfile_mock.mockkeyfile property)": [[48, "bittensor.mock.keyfile_mock.MockKeyfile.keyfile_data", false]], "keyfile_data (bittensor.mockkeyfile property)": [[44, "bittensor.MockKeyfile.keyfile_data", false]], "keyfile_data_encryption_method() (in module bittensor)": [[44, "bittensor.keyfile_data_encryption_method", false]], "keyfile_data_encryption_method() (in module bittensor.keyfile)": [[45, "bittensor.keyfile.keyfile_data_encryption_method", false]], "keyfile_data_is_encrypted() (in module bittensor)": [[44, "bittensor.keyfile_data_is_encrypted", false]], "keyfile_data_is_encrypted() (in module bittensor.keyfile)": [[45, "bittensor.keyfile.keyfile_data_is_encrypted", false]], "keyfile_data_is_encrypted_ansible() (in module bittensor)": [[44, "bittensor.keyfile_data_is_encrypted_ansible", false]], "keyfile_data_is_encrypted_ansible() (in module bittensor.keyfile)": [[45, "bittensor.keyfile.keyfile_data_is_encrypted_ansible", false]], "keyfile_data_is_encrypted_legacy() (in module bittensor)": [[44, "bittensor.keyfile_data_is_encrypted_legacy", false]], "keyfile_data_is_encrypted_legacy() (in module bittensor.keyfile)": [[45, "bittensor.keyfile.keyfile_data_is_encrypted_legacy", false]], "keyfile_data_is_encrypted_nacl() (in module bittensor)": [[44, "bittensor.keyfile_data_is_encrypted_nacl", false]], "keyfile_data_is_encrypted_nacl() (in module bittensor.keyfile)": [[45, "bittensor.keyfile.keyfile_data_is_encrypted_nacl", false]], "keyfileerror": [[30, "bittensor.errors.KeyFileError", false], [44, "bittensor.KeyFileError", false]], "keypair (bittensor.dendrite.dendritemixin attribute)": [[29, "bittensor.dendrite.DendriteMixin.keypair", false]], "keypair (bittensor.keyfile property)": [[44, "bittensor.keyfile.keypair", false]], "keypair (bittensor.keyfile.keyfile property)": [[45, "bittensor.keyfile.keyfile.keypair", false]], "keypair (bittensor.keyfile.mockkeyfile property)": [[45, "bittensor.keyfile.Mockkeyfile.keypair", false]], "keypair (bittensor.mock.keyfile_mock.mockkeyfile property)": [[48, "bittensor.mock.keyfile_mock.MockKeyfile.keypair", false]], "keypair (bittensor.mockkeyfile property)": [[44, "bittensor.MockKeyfile.keypair", false], [44, "bittensor.Mockkeyfile.keypair", false]], "kwargs (bittensor.threadpool._workitem attribute)": [[56, "bittensor.threadpool._WorkItem.kwargs", false]], "last_update (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.last_update", false]], "last_update (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.last_update", false]], "last_update (bittensor.metagraph.metagraphmixin attribute)": [[46, "bittensor.metagraph.MetagraphMixin.last_update", false]], "last_update (bittensor.metagraph.nontorchmetagraph attribute)": [[46, "bittensor.metagraph.NonTorchMetagraph.last_update", false]], "last_update (bittensor.metagraph.torchmetagraph attribute)": [[46, "bittensor.metagraph.TorchMetaGraph.last_update", false]], "last_update (bittensor.neuroninfo attribute)": [[44, "bittensor.NeuronInfo.last_update", false]], "last_update (bittensor.neuroninfolite attribute)": [[44, "bittensor.NeuronInfoLite.last_update", false]], "latest_block_path() (in module bittensor.metagraph)": [[46, "bittensor.metagraph.latest_block_path", false]], "lazyloadedtorch (class in bittensor.utils.registration)": [[64, "bittensor.utils.registration.LazyLoadedTorch", false]], "leave_senate() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.leave_senate", false], [44, "bittensor.subtensor.leave_senate", false]], "leave_senate() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.leave_senate", false]], "leave_senate_extrinsic() (in module bittensor.extrinsics.senate)": [[38, "bittensor.extrinsics.senate.leave_senate_extrinsic", false]], "legacy_encrypt_keyfile_data() (in module bittensor)": [[44, "bittensor.legacy_encrypt_keyfile_data", false]], "legacy_encrypt_keyfile_data() (in module bittensor.keyfile)": [[45, "bittensor.keyfile.legacy_encrypt_keyfile_data", false]], "legacy_torch_api_compat() (in module bittensor.utils.registration)": [[64, "bittensor.utils.registration.legacy_torch_api_compat", false]], "limit (bittensor.utils.registration._solverbase attribute)": [[64, "bittensor.utils.registration._SolverBase.limit", false]], "liquid_alpha_enabled (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.liquid_alpha_enabled", false]], "liquid_alpha_enabled (bittensor.subnethyperparameters attribute)": [[44, "bittensor.SubnetHyperparameters.liquid_alpha_enabled", false]], "list_from_vec_u8() (bittensor.chain_data.delegateinfo class method)": [[6, "bittensor.chain_data.DelegateInfo.list_from_vec_u8", false]], "list_from_vec_u8() (bittensor.chain_data.ipinfo class method)": [[6, "bittensor.chain_data.IPInfo.list_from_vec_u8", false]], "list_from_vec_u8() (bittensor.chain_data.neuroninfo class method)": [[6, "bittensor.chain_data.NeuronInfo.list_from_vec_u8", false]], "list_from_vec_u8() (bittensor.chain_data.neuroninfolite class method)": [[6, "bittensor.chain_data.NeuronInfoLite.list_from_vec_u8", false]], "list_from_vec_u8() (bittensor.chain_data.scheduledcoldkeyswapinfo class method)": [[6, "bittensor.chain_data.ScheduledColdkeySwapInfo.list_from_vec_u8", false]], "list_from_vec_u8() (bittensor.chain_data.stakeinfo class method)": [[6, "bittensor.chain_data.StakeInfo.list_from_vec_u8", false]], "list_from_vec_u8() (bittensor.chain_data.subnethyperparameters class method)": [[6, "bittensor.chain_data.SubnetHyperparameters.list_from_vec_u8", false]], "list_from_vec_u8() (bittensor.chain_data.subnetinfo class method)": [[6, "bittensor.chain_data.SubnetInfo.list_from_vec_u8", false]], "list_from_vec_u8() (bittensor.delegateinfo class method)": [[44, "bittensor.DelegateInfo.list_from_vec_u8", false]], "list_from_vec_u8() (bittensor.ipinfo class method)": [[44, "bittensor.IPInfo.list_from_vec_u8", false]], "list_from_vec_u8() (bittensor.neuroninfo class method)": [[44, "bittensor.NeuronInfo.list_from_vec_u8", false]], "list_from_vec_u8() (bittensor.neuroninfolite class method)": [[44, "bittensor.NeuronInfoLite.list_from_vec_u8", false]], "list_from_vec_u8() (bittensor.stakeinfo class method)": [[44, "bittensor.StakeInfo.list_from_vec_u8", false]], "list_from_vec_u8() (bittensor.subnethyperparameters class method)": [[44, "bittensor.SubnetHyperparameters.list_from_vec_u8", false]], "list_from_vec_u8() (bittensor.subnetinfo class method)": [[44, "bittensor.SubnetInfo.list_from_vec_u8", false]], "list_of_tuple_from_vec_u8() (bittensor.chain_data.stakeinfo class method)": [[6, "bittensor.chain_data.StakeInfo.list_of_tuple_from_vec_u8", false]], "list_of_tuple_from_vec_u8() (bittensor.stakeinfo class method)": [[44, "bittensor.StakeInfo.list_of_tuple_from_vec_u8", false]], "listcommand (class in bittensor.commands)": [[11, "bittensor.commands.ListCommand", false]], "listcommand (class in bittensor.commands.list)": [[13, "bittensor.commands.list.ListCommand", false]], "listdelegatescommand (class in bittensor.commands)": [[11, "bittensor.commands.ListDelegatesCommand", false]], "listdelegatescommand (class in bittensor.commands.delegates)": [[9, "bittensor.commands.delegates.ListDelegatesCommand", false]], "load() (bittensor.metagraph.metagraphmixin method)": [[46, "bittensor.metagraph.MetagraphMixin.load", false]], "load_from_path() (bittensor.metagraph.metagraphmixin method)": [[46, "bittensor.metagraph.MetagraphMixin.load_from_path", false]], "load_from_path() (bittensor.metagraph.nontorchmetagraph method)": [[46, "bittensor.metagraph.NonTorchMetagraph.load_from_path", false]], "load_from_path() (bittensor.metagraph.torchmetagraph method)": [[46, "bittensor.metagraph.TorchMetaGraph.load_from_path", false]], "log_and_handle_error() (in module bittensor.axon)": [[0, "bittensor.axon.log_and_handle_error", false]], "log_cuda_errors() (in module bittensor.utils._register_cuda)": [[58, "bittensor.utils._register_cuda.log_cuda_errors", false]], "log_exception() (bittensor.dendrite.dendritemixin method)": [[29, "bittensor.dendrite.DendriteMixin.log_exception", false]], "log_formats (in module bittensor.btlogging.format)": [[2, "bittensor.btlogging.format.LOG_FORMATS", false]], "log_level (bittensor.axon attribute)": [[44, "bittensor.axon.log_level", false]], "log_level (bittensor.axon.axon attribute)": [[0, "bittensor.axon.axon.log_level", false]], "log_level_color_prefix (in module bittensor.btlogging.format)": [[2, "bittensor.btlogging.format.log_level_color_prefix", false]], "log_no_torch_error() (in module bittensor.utils.registration)": [[64, "bittensor.utils.registration.log_no_torch_error", false]], "log_trace_formats (in module bittensor.btlogging.format)": [[2, "bittensor.btlogging.format.LOG_TRACE_FORMATS", false]], "log_verbose (bittensor.subtensor attribute)": [[44, "bittensor.Subtensor.log_verbose", false], [44, "bittensor.subtensor.log_verbose", false]], "log_verbose (bittensor.subtensor.subtensor attribute)": [[53, "bittensor.subtensor.Subtensor.log_verbose", false]], "logger (in module bittensor.extrinsics.delegation)": [[32, "bittensor.extrinsics.delegation.logger", false]], "logger (in module bittensor.extrinsics.root)": [[37, "bittensor.extrinsics.root.logger", false]], "logger (in module bittensor.extrinsics.set_weights)": [[40, "bittensor.extrinsics.set_weights.logger", false]], "logger (in module bittensor.threadpool)": [[56, "bittensor.threadpool.logger", false]], "logging (in module bittensor)": [[44, "bittensor.logging", false]], "logging (in module bittensor.btlogging)": [[4, "bittensor.btlogging.logging", false]], "logging_dir (bittensor.btlogging.loggingmachine.loggingconfig attribute)": [[5, "bittensor.btlogging.loggingmachine.LoggingConfig.logging_dir", false]], "loggingconfig (class in bittensor.btlogging.loggingmachine)": [[5, "bittensor.btlogging.loggingmachine.LoggingConfig", false]], "loggingmachine (class in bittensor.btlogging)": [[4, "bittensor.btlogging.LoggingMachine", false]], "loggingmachine (class in bittensor.btlogging.loggingmachine)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine", false]], "make_dirs() (bittensor.keyfile method)": [[44, "bittensor.keyfile.make_dirs", false]], "make_dirs() (bittensor.keyfile.keyfile method)": [[45, "bittensor.keyfile.keyfile.make_dirs", false]], "make_dirs() (bittensor.keyfile.mockkeyfile method)": [[45, "bittensor.keyfile.Mockkeyfile.make_dirs", false]], "make_dirs() (bittensor.mock.keyfile_mock.mockkeyfile method)": [[48, "bittensor.mock.keyfile_mock.MockKeyfile.make_dirs", false]], "make_dirs() (bittensor.mockkeyfile method)": [[44, "bittensor.MockKeyfile.make_dirs", false], [44, "bittensor.Mockkeyfile.make_dirs", false]], "max_allowed_validators (bittensor.chain_data.subnetinfo attribute)": [[6, "bittensor.chain_data.SubnetInfo.max_allowed_validators", false]], "max_allowed_validators (bittensor.subnetinfo attribute)": [[44, "bittensor.SubnetInfo.max_allowed_validators", false]], "max_allowed_validators() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.max_allowed_validators", false], [44, "bittensor.subtensor.max_allowed_validators", false]], "max_allowed_validators() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.max_allowed_validators", false]], "max_burn (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.max_burn", false]], "max_burn (bittensor.subnethyperparameters attribute)": [[44, "bittensor.SubnetHyperparameters.max_burn", false]], "max_children (in module bittensor.commands.stake)": [[21, "bittensor.commands.stake.MAX_CHILDREN", false]], "max_difficulty (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.max_difficulty", false]], "max_difficulty (bittensor.subnethyperparameters attribute)": [[44, "bittensor.SubnetHyperparameters.max_difficulty", false]], "max_n (bittensor.chain_data.subnetinfo attribute)": [[6, "bittensor.chain_data.SubnetInfo.max_n", false]], "max_n (bittensor.subnetinfo attribute)": [[44, "bittensor.SubnetInfo.max_n", false]], "max_n() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.max_n", false], [44, "bittensor.subtensor.max_n", false]], "max_n() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.max_n", false]], "max_regs_per_block (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.max_regs_per_block", false]], "max_regs_per_block (bittensor.subnethyperparameters attribute)": [[44, "bittensor.SubnetHyperparameters.max_regs_per_block", false]], "max_tries (in module bittensor.utils.test_utils)": [[66, "bittensor.utils.test_utils.max_tries", false]], "max_txn (in module bittensor.commands.wallets)": [[25, "bittensor.commands.wallets.MAX_TXN", false]], "max_validators (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.max_validators", false]], "max_validators (bittensor.subnethyperparameters attribute)": [[44, "bittensor.SubnetHyperparameters.max_validators", false]], "max_weight_limit (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.max_weight_limit", false]], "max_weight_limit (bittensor.chain_data.subnetinfo attribute)": [[6, "bittensor.chain_data.SubnetInfo.max_weight_limit", false]], "max_weight_limit (bittensor.subnethyperparameters attribute)": [[44, "bittensor.SubnetHyperparameters.max_weight_limit", false]], "max_weight_limit (bittensor.subnetinfo attribute)": [[44, "bittensor.SubnetInfo.max_weight_limit", false]], "max_weight_limit() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.max_weight_limit", false], [44, "bittensor.subtensor.max_weight_limit", false]], "max_weight_limit() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.max_weight_limit", false]], "max_workers (bittensor.axon attribute)": [[44, "bittensor.axon.max_workers", false]], "max_workers (bittensor.axon.axon attribute)": [[0, "bittensor.axon.axon.max_workers", false]], "maxattemptsexception": [[36, "bittensor.extrinsics.registration.MaxAttemptsException", false]], "maxsuccessexception": [[36, "bittensor.extrinsics.registration.MaxSuccessException", false]], "merge() (bittensor.config method)": [[44, "bittensor.config.merge", false]], "merge() (bittensor.config.config method)": [[27, "bittensor.config.config.merge", false]], "merge_all() (bittensor.config class method)": [[44, "bittensor.config.merge_all", false]], "merge_all() (bittensor.config.config class method)": [[27, "bittensor.config.config.merge_all", false]], "message (bittensor.errors.synapsedendritenoneexception attribute)": [[30, "bittensor.errors.SynapseDendriteNoneException.message", false]], "message (bittensor.errors.synapseexception attribute)": [[30, "bittensor.errors.SynapseException.message", false]], "message (bittensor.synapsedendritenoneexception attribute)": [[44, "bittensor.SynapseDendriteNoneException.message", false]], "metadata() (bittensor.metagraph.metagraphmixin method)": [[46, "bittensor.metagraph.MetagraphMixin.metadata", false]], "metadataerror": [[30, "bittensor.errors.MetadataError", false], [44, "bittensor.MetadataError", false]], "metagraph (in module bittensor)": [[44, "bittensor.metagraph", false]], "metagraph (in module bittensor.metagraph)": [[46, "bittensor.metagraph.metagraph", false]], "metagraph() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.metagraph", false], [44, "bittensor.subtensor.metagraph", false]], "metagraph() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.metagraph", false]], "metagraph_state_dict_ndarray_keys (in module bittensor.metagraph)": [[46, "bittensor.metagraph.METAGRAPH_STATE_DICT_NDARRAY_KEYS", false]], "metagraphcommand (class in bittensor.commands)": [[11, "bittensor.commands.MetagraphCommand", false]], "metagraphcommand (class in bittensor.commands.metagraph)": [[14, "bittensor.commands.metagraph.MetagraphCommand", false]], "metagraphmixin (class in bittensor.metagraph)": [[46, "bittensor.metagraph.MetagraphMixin", false]], "middleware_cls (bittensor.axon attribute)": [[44, "bittensor.axon.middleware_cls", false]], "middleware_cls (bittensor.axon.axon attribute)": [[0, "bittensor.axon.axon.middleware_cls", false]], "millify() (in module bittensor.utils.formatting)": [[61, "bittensor.utils.formatting.millify", false]], "min_allowed_weights (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.min_allowed_weights", false]], "min_allowed_weights (bittensor.chain_data.subnetinfo attribute)": [[6, "bittensor.chain_data.SubnetInfo.min_allowed_weights", false]], "min_allowed_weights (bittensor.subnethyperparameters attribute)": [[44, "bittensor.SubnetHyperparameters.min_allowed_weights", false]], "min_allowed_weights (bittensor.subnetinfo attribute)": [[44, "bittensor.SubnetInfo.min_allowed_weights", false]], "min_allowed_weights() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.min_allowed_weights", false], [44, "bittensor.subtensor.min_allowed_weights", false]], "min_allowed_weights() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.min_allowed_weights", false]], "min_burn (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.min_burn", false]], "min_burn (bittensor.subnethyperparameters attribute)": [[44, "bittensor.SubnetHyperparameters.min_burn", false]], "min_difficulty (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.min_difficulty", false]], "min_difficulty (bittensor.subnethyperparameters attribute)": [[44, "bittensor.SubnetHyperparameters.min_difficulty", false]], "min_required_stake() (bittensor.mock.mocksubtensor static method)": [[47, "bittensor.mock.MockSubtensor.min_required_stake", false]], "min_required_stake() (bittensor.mock.subtensor_mock.mocksubtensor static method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor.min_required_stake", false]], "min_required_stake() (bittensor.mocksubtensor static method)": [[44, "bittensor.MockSubtensor.min_required_stake", false]], "missing_required_args (bittensor.config attribute)": [[44, "bittensor.config.missing_required_args", false]], "missing_required_args (bittensor.config.config attribute)": [[27, "bittensor.config.config.missing_required_args", false]], "mockchainstate (class in bittensor.mock.subtensor_mock)": [[49, "bittensor.mock.subtensor_mock.MockChainState", false]], "mockkeyfile (class in bittensor)": [[44, "bittensor.MockKeyfile", false], [44, "bittensor.Mockkeyfile", false]], "mockkeyfile (class in bittensor.keyfile)": [[45, "bittensor.keyfile.Mockkeyfile", false]], "mockkeyfile (class in bittensor.mock.keyfile_mock)": [[48, "bittensor.mock.keyfile_mock.MockKeyfile", false]], "mockmapresult (class in bittensor.mock.subtensor_mock)": [[49, "bittensor.mock.subtensor_mock.MockMapResult", false]], "mocksubtensor (class in bittensor)": [[44, "bittensor.MockSubtensor", false]], "mocksubtensor (class in bittensor.mock)": [[47, "bittensor.mock.MockSubtensor", false]], "mocksubtensor (class in bittensor.mock.subtensor_mock)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor", false]], "mocksubtensorstate (class in bittensor.mock.subtensor_mock)": [[49, "bittensor.mock.subtensor_mock.MockSubtensorState", false]], "mocksubtensorvalue (class in bittensor.mock.subtensor_mock)": [[49, "bittensor.mock.subtensor_mock.MockSubtensorValue", false]], "mocksystemstate (class in bittensor.mock.subtensor_mock)": [[49, "bittensor.mock.subtensor_mock.MockSystemState", false]], "mockwallet (class in bittensor)": [[44, "bittensor.MockWallet", false]], "mockwallet (class in bittensor.mock.wallet_mock)": [[50, "bittensor.mock.wallet_mock.MockWallet", false]], "modality (bittensor.chain_data.subnetinfo attribute)": [[6, "bittensor.chain_data.SubnetInfo.modality", false]], "modality (bittensor.subnetinfo attribute)": [[44, "bittensor.SubnetInfo.modality", false]], "model_config (bittensor.stream.streamingsynapse attribute)": [[51, "bittensor.stream.StreamingSynapse.model_config", false]], "model_config (bittensor.streamingsynapse attribute)": [[44, "bittensor.StreamingSynapse.model_config", false]], "model_config (bittensor.synapse attribute)": [[44, "bittensor.Synapse.model_config", false]], "model_config (bittensor.synapse.synapse attribute)": [[54, "bittensor.synapse.Synapse.model_config", false]], "model_config (bittensor.synapse.terminalinfo attribute)": [[54, "bittensor.synapse.TerminalInfo.model_config", false]], "model_config (bittensor.tensor attribute)": [[44, "bittensor.Tensor.model_config", false]], "model_config (bittensor.tensor.tensor attribute)": [[55, "bittensor.tensor.Tensor.model_config", false]], "model_config (bittensor.terminalinfo attribute)": [[44, "bittensor.TerminalInfo.model_config", false]], "module": [[0, "module-bittensor.axon", false], [1, "module-bittensor.btlogging.defines", false], [2, "module-bittensor.btlogging.format", false], [3, "module-bittensor.btlogging.helpers", false], [4, "module-bittensor.btlogging", false], [5, "module-bittensor.btlogging.loggingmachine", false], [6, "module-bittensor.chain_data", false], [7, "module-bittensor.cli", false], [8, "module-bittensor.commands.check_coldkey_swap", false], [9, "module-bittensor.commands.delegates", false], [10, "module-bittensor.commands.identity", false], [11, "module-bittensor.commands", false], [12, "module-bittensor.commands.inspect", false], [13, "module-bittensor.commands.list", false], [14, "module-bittensor.commands.metagraph", false], [15, "module-bittensor.commands.misc", false], [16, "module-bittensor.commands.network", false], [17, "module-bittensor.commands.overview", false], [18, "module-bittensor.commands.register", false], [19, "module-bittensor.commands.root", false], [20, "module-bittensor.commands.senate", false], [21, "module-bittensor.commands.stake", false], [22, "module-bittensor.commands.transfer", false], [23, "module-bittensor.commands.unstake", false], [24, "module-bittensor.commands.utils", false], [25, "module-bittensor.commands.wallets", false], [26, "module-bittensor.commands.weights", false], [27, "module-bittensor.config", false], [28, "module-bittensor.constants", false], [29, "module-bittensor.dendrite", false], [30, "module-bittensor.errors", false], [31, "module-bittensor.extrinsics.commit_weights", false], [32, "module-bittensor.extrinsics.delegation", false], [33, "module-bittensor.extrinsics", false], [34, "module-bittensor.extrinsics.network", false], [35, "module-bittensor.extrinsics.prometheus", false], [36, "module-bittensor.extrinsics.registration", false], [37, "module-bittensor.extrinsics.root", false], [38, "module-bittensor.extrinsics.senate", false], [39, "module-bittensor.extrinsics.serving", false], [40, "module-bittensor.extrinsics.set_weights", false], [41, "module-bittensor.extrinsics.staking", false], [42, "module-bittensor.extrinsics.transfer", false], [43, "module-bittensor.extrinsics.unstaking", false], [44, "module-bittensor", false], [45, "module-bittensor.keyfile", false], [46, "module-bittensor.metagraph", false], [47, "module-bittensor.mock", false], [48, "module-bittensor.mock.keyfile_mock", false], [49, "module-bittensor.mock.subtensor_mock", false], [50, "module-bittensor.mock.wallet_mock", false], [51, "module-bittensor.stream", false], [52, "module-bittensor.subnets", false], [53, "module-bittensor.subtensor", false], [54, "module-bittensor.synapse", false], [55, "module-bittensor.tensor", false], [56, "module-bittensor.threadpool", false], [57, "module-bittensor.types", false], [58, "module-bittensor.utils._register_cuda", false], [59, "module-bittensor.utils.axon_utils", false], [60, "module-bittensor.utils.balance", false], [61, "module-bittensor.utils.formatting", false], [62, "module-bittensor.utils", false], [63, "module-bittensor.utils.networking", false], [64, "module-bittensor.utils.registration", false], [65, "module-bittensor.utils.subtensor", false], [66, "module-bittensor.utils.test_utils", false], [67, "module-bittensor.utils.version", false], [68, "module-bittensor.utils.wallet_utils", false], [69, "module-bittensor.utils.weight_utils", false], [70, "module-bittensor.wallet", false]], "mydelegatescommand (class in bittensor.commands)": [[11, "bittensor.commands.MyDelegatesCommand", false]], "mydelegatescommand (class in bittensor.commands.delegates)": [[9, "bittensor.commands.delegates.MyDelegatesCommand", false]], "n (bittensor.metagraph.metagraphmixin attribute)": [[46, "bittensor.metagraph.MetagraphMixin.n", false]], "n (bittensor.metagraph.nontorchmetagraph attribute)": [[46, "bittensor.metagraph.NonTorchMetagraph.n", false]], "n (bittensor.metagraph.torchmetagraph attribute)": [[46, "bittensor.metagraph.TorchMetaGraph.n", false]], "nacl_salt (in module bittensor.keyfile)": [[45, "bittensor.keyfile.NACL_SALT", false]], "name (bittensor.commands.utils.delegatesdetails attribute)": [[24, "bittensor.commands.utils.DelegatesDetails.name", false]], "name (bittensor.keyfile attribute)": [[44, "bittensor.keyfile.name", false]], "name (bittensor.keyfile.keyfile attribute)": [[45, "bittensor.keyfile.keyfile.name", false]], "name (bittensor.subtensor.paramwithtypes attribute)": [[53, "bittensor.subtensor.ParamWithTypes.name", false]], "name (bittensor.synapse attribute)": [[44, "bittensor.Synapse.name", false]], "name (bittensor.synapse.synapse attribute)": [[54, "bittensor.synapse.Synapse.name", false]], "name (bittensor.wallet attribute)": [[44, "bittensor.wallet.name", false]], "name (bittensor.wallet.wallet attribute)": [[70, "bittensor.wallet.wallet.name", false]], "nanoseconds_in_second (in module bittensor.constants)": [[28, "bittensor.constants.NANOSECONDS_IN_SECOND", false]], "nays (bittensor.chain_data.proposalvotedata attribute)": [[6, "bittensor.chain_data.ProposalVoteData.nays", false]], "nays (bittensor.proposalvotedata attribute)": [[44, "bittensor.ProposalVoteData.nays", false]], "netuid (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.netuid", false]], "netuid (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.netuid", false]], "netuid (bittensor.chain_data.subnetinfo attribute)": [[6, "bittensor.chain_data.SubnetInfo.netuid", false]], "netuid (bittensor.metagraph.metagraphmixin attribute)": [[46, "bittensor.metagraph.MetagraphMixin.netuid", false]], "netuid (bittensor.metagraph.nontorchmetagraph attribute)": [[46, "bittensor.metagraph.NonTorchMetagraph.netuid", false]], "netuid (bittensor.metagraph.torchmetagraph attribute)": [[46, "bittensor.metagraph.TorchMetaGraph.netuid", false]], "netuid (bittensor.mock.subtensor_mock.axonservecallparams attribute)": [[49, "bittensor.mock.subtensor_mock.AxonServeCallParams.netuid", false]], "netuid (bittensor.mock.subtensor_mock.prometheusservecallparams attribute)": [[49, "bittensor.mock.subtensor_mock.PrometheusServeCallParams.netuid", false]], "netuid (bittensor.neuroninfo attribute)": [[44, "bittensor.NeuronInfo.netuid", false]], "netuid (bittensor.neuroninfolite attribute)": [[44, "bittensor.NeuronInfoLite.netuid", false]], "netuid (bittensor.subnetinfo attribute)": [[44, "bittensor.SubnetInfo.netuid", false]], "netuid (bittensor.types.axonservecallparams attribute)": [[57, "bittensor.types.AxonServeCallParams.netuid", false]], "netuid (bittensor.types.prometheusservecallparams attribute)": [[57, "bittensor.types.PrometheusServeCallParams.netuid", false]], "network (bittensor.metagraph.metagraphmixin attribute)": [[46, "bittensor.metagraph.MetagraphMixin.network", false]], "network (bittensor.metagraph.nontorchmetagraph attribute)": [[46, "bittensor.metagraph.NonTorchMetagraph.network", false]], "network (bittensor.metagraph.torchmetagraph attribute)": [[46, "bittensor.metagraph.TorchMetaGraph.network", false]], "networksadded (bittensor.mock.subtensor_mock.mocksubtensorstate attribute)": [[49, "bittensor.mock.subtensor_mock.MockSubtensorState.NetworksAdded", false]], "neuron_for_uid() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor.neuron_for_uid", false]], "neuron_for_uid() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor.neuron_for_uid", false]], "neuron_for_uid() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor.neuron_for_uid", false]], "neuron_for_uid() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.neuron_for_uid", false], [44, "bittensor.subtensor.neuron_for_uid", false]], "neuron_for_uid() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.neuron_for_uid", false]], "neuron_for_uid_lite() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor.neuron_for_uid_lite", false]], "neuron_for_uid_lite() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor.neuron_for_uid_lite", false]], "neuron_for_uid_lite() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor.neuron_for_uid_lite", false]], "neuron_for_uid_lite() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.neuron_for_uid_lite", false], [44, "bittensor.subtensor.neuron_for_uid_lite", false]], "neuron_for_uid_lite() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.neuron_for_uid_lite", false]], "neuron_for_wallet() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.neuron_for_wallet", false], [44, "bittensor.subtensor.neuron_for_wallet", false]], "neuron_for_wallet() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.neuron_for_wallet", false]], "neuron_has_validator_permit() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.neuron_has_validator_permit", false], [44, "bittensor.subtensor.neuron_has_validator_permit", false]], "neuron_has_validator_permit() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.neuron_has_validator_permit", false]], "neuroninfo (bittensor.chain_data.chaindatatype attribute)": [[6, "bittensor.chain_data.ChainDataType.NeuronInfo", false]], "neuroninfo (class in bittensor)": [[44, "bittensor.NeuronInfo", false]], "neuroninfo (class in bittensor.chain_data)": [[6, "bittensor.chain_data.NeuronInfo", false]], "neuroninfolite (bittensor.chain_data.chaindatatype attribute)": [[6, "bittensor.chain_data.ChainDataType.NeuronInfoLite", false]], "neuroninfolite (class in bittensor)": [[44, "bittensor.NeuronInfoLite", false]], "neuroninfolite (class in bittensor.chain_data)": [[6, "bittensor.chain_data.NeuronInfoLite", false]], "neurons() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor.neurons", false]], "neurons() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor.neurons", false]], "neurons() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor.neurons", false]], "neurons() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.neurons", false], [44, "bittensor.subtensor.neurons", false]], "neurons() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.neurons", false]], "neurons_lite() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor.neurons_lite", false]], "neurons_lite() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor.neurons_lite", false]], "neurons_lite() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor.neurons_lite", false]], "neurons_lite() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.neurons_lite", false], [44, "bittensor.subtensor.neurons_lite", false]], "neurons_lite() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.neurons_lite", false]], "new_coldkey (bittensor.chain_data.scheduledcoldkeyswapinfo attribute)": [[6, "bittensor.chain_data.ScheduledColdkeySwapInfo.new_coldkey", false]], "new_coldkey() (bittensor.wallet method)": [[44, "bittensor.wallet.new_coldkey", false]], "new_coldkey() (bittensor.wallet.wallet method)": [[70, "bittensor.wallet.wallet.new_coldkey", false]], "new_hotkey() (bittensor.wallet method)": [[44, "bittensor.wallet.new_hotkey", false]], "new_hotkey() (bittensor.wallet.wallet method)": [[70, "bittensor.wallet.wallet.new_hotkey", false]], "newblockevent (bittensor.utils.registration._solverbase attribute)": [[64, "bittensor.utils.registration._SolverBase.newBlockEvent", false]], "newcoldkeycommand (class in bittensor.commands)": [[11, "bittensor.commands.NewColdkeyCommand", false]], "newcoldkeycommand (class in bittensor.commands.wallets)": [[25, "bittensor.commands.wallets.NewColdkeyCommand", false]], "newhotkeycommand (class in bittensor.commands)": [[11, "bittensor.commands.NewHotkeyCommand", false]], "newhotkeycommand (class in bittensor.commands.wallets)": [[25, "bittensor.commands.wallets.NewHotkeyCommand", false]], "nominate() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.nominate", false], [44, "bittensor.subtensor.nominate", false]], "nominate() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.nominate", false]], "nominate_extrinsic() (in module bittensor.extrinsics.delegation)": [[32, "bittensor.extrinsics.delegation.nominate_extrinsic", false]], "nominatecommand (class in bittensor.commands)": [[11, "bittensor.commands.NominateCommand", false]], "nominatecommand (class in bittensor.commands.delegates)": [[9, "bittensor.commands.delegates.NominateCommand", false]], "nominationerror": [[30, "bittensor.errors.NominationError", false], [44, "bittensor.NominationError", false]], "nominators (bittensor.chain_data.delegateinfo attribute)": [[6, "bittensor.chain_data.DelegateInfo.nominators", false]], "nominators (bittensor.chain_data.delegateinfolite attribute)": [[6, "bittensor.chain_data.DelegateInfoLite.nominators", false]], "nominators (bittensor.delegateinfo attribute)": [[44, "bittensor.DelegateInfo.nominators", false]], "nonce (bittensor.synapse.terminalinfo attribute)": [[54, "bittensor.synapse.TerminalInfo.nonce", false]], "nonce (bittensor.terminalinfo attribute)": [[44, "bittensor.TerminalInfo.nonce", false]], "nonce (bittensor.utils.registration.powsolution attribute)": [[64, "bittensor.utils.registration.POWSolution.nonce", false]], "nonces (bittensor.axon attribute)": [[44, "bittensor.axon.nonces", false]], "nonces (bittensor.axon.axon attribute)": [[0, "bittensor.axon.axon.nonces", false]], "nontorchmetagraph (class in bittensor.metagraph)": [[46, "bittensor.metagraph.NonTorchMetagraph", false]], "normalize_hyperparameters() (in module bittensor.commands.utils)": [[24, "bittensor.commands.utils.normalize_hyperparameters", false]], "normalize_max_weight() (in module bittensor.utils.weight_utils)": [[69, "bittensor.utils.weight_utils.normalize_max_weight", false]], "normalize_u64_values() (in module bittensor.utils.formatting)": [[61, "bittensor.utils.formatting.normalize_u64_values", false]], "notdelegateerror": [[30, "bittensor.errors.NotDelegateError", false], [44, "bittensor.NotDelegateError", false]], "notregisterederror": [[30, "bittensor.errors.NotRegisteredError", false], [44, "bittensor.NotRegisteredError", false]], "notverifiedexception": [[30, "bittensor.errors.NotVerifiedException", false], [44, "bittensor.NotVerifiedException", false]], "null_entry (in module bittensor.threadpool)": [[56, "bittensor.threadpool.NULL_ENTRY", false]], "num_proc (bittensor.utils.registration._solverbase attribute)": [[64, "bittensor.utils.registration._SolverBase.num_proc", false]], "numpy() (bittensor.tensor method)": [[44, "bittensor.Tensor.numpy", false]], "numpy() (bittensor.tensor.tensor method)": [[55, "bittensor.tensor.Tensor.numpy", false]], "off() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.off", false]], "off() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.off", false]], "old_coldkey (bittensor.chain_data.scheduledcoldkeyswapinfo attribute)": [[6, "bittensor.chain_data.ScheduledColdkeySwapInfo.old_coldkey", false]], "on() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.on", false]], "on() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.on", false]], "overviewcommand (class in bittensor.commands)": [[11, "bittensor.commands.OverviewCommand", false]], "overviewcommand (class in bittensor.commands.overview)": [[17, "bittensor.commands.overview.OverviewCommand", false]], "owner_ss58 (bittensor.chain_data.delegateinfo attribute)": [[6, "bittensor.chain_data.DelegateInfo.owner_ss58", false]], "owner_ss58 (bittensor.chain_data.delegateinfolite attribute)": [[6, "bittensor.chain_data.DelegateInfoLite.owner_ss58", false]], "owner_ss58 (bittensor.chain_data.subnetinfo attribute)": [[6, "bittensor.chain_data.SubnetInfo.owner_ss58", false]], "owner_ss58 (bittensor.delegateinfo attribute)": [[44, "bittensor.DelegateInfo.owner_ss58", false]], "owner_ss58 (bittensor.subnetinfo attribute)": [[44, "bittensor.SubnetInfo.owner_ss58", false]], "params (bittensor.config attribute)": [[44, "bittensor.config.params", false]], "params (bittensor.config.config attribute)": [[27, "bittensor.config.config.params", false]], "params_no_defaults (bittensor.config attribute)": [[44, "bittensor.config.params_no_defaults", false]], "params_no_defaults (bittensor.config.config attribute)": [[27, "bittensor.config.config.params_no_defaults", false]], "paramwithtypes (class in bittensor.subtensor)": [[53, "bittensor.subtensor.ParamWithTypes", false]], "parse_headers_to_inputs() (bittensor.synapse class method)": [[44, "id15", false]], "parse_headers_to_inputs() (bittensor.synapse method)": [[44, "bittensor.Synapse.parse_headers_to_inputs", false]], "parse_headers_to_inputs() (bittensor.synapse.synapse class method)": [[54, "id5", false]], "parse_headers_to_inputs() (bittensor.synapse.synapse method)": [[54, "bittensor.synapse.Synapse.parse_headers_to_inputs", false]], "parser_no_defaults (bittensor.config attribute)": [[44, "bittensor.config.parser_no_defaults", false]], "parser_no_defaults (bittensor.config.config attribute)": [[27, "bittensor.config.config.parser_no_defaults", false]], "path (bittensor.keyfile attribute)": [[44, "bittensor.keyfile.path", false]], "path (bittensor.keyfile.keyfile attribute)": [[45, "bittensor.keyfile.keyfile.path", false]], "path (bittensor.keyfile.mockkeyfile attribute)": [[45, "bittensor.keyfile.Mockkeyfile.path", false]], "path (bittensor.mockkeyfile attribute)": [[44, "bittensor.Mockkeyfile.path", false]], "path (bittensor.wallet attribute)": [[44, "bittensor.wallet.path", false]], "path (bittensor.wallet.wallet attribute)": [[70, "bittensor.wallet.wallet.path", false]], "placeholder1 (bittensor.axoninfo attribute)": [[44, "bittensor.AxonInfo.placeholder1", false]], "placeholder1 (bittensor.chain_data.axoninfo attribute)": [[6, "bittensor.chain_data.AxonInfo.placeholder1", false]], "placeholder1 (bittensor.mock.subtensor_mock.axoninfodict attribute)": [[49, "bittensor.mock.subtensor_mock.AxonInfoDict.placeholder1", false]], "placeholder2 (bittensor.axoninfo attribute)": [[44, "bittensor.AxonInfo.placeholder2", false]], "placeholder2 (bittensor.chain_data.axoninfo attribute)": [[6, "bittensor.chain_data.AxonInfo.placeholder2", false]], "placeholder2 (bittensor.mock.subtensor_mock.axoninfodict attribute)": [[49, "bittensor.mock.subtensor_mock.AxonInfoDict.placeholder2", false]], "port (bittensor.axon attribute)": [[44, "bittensor.axon.port", false]], "port (bittensor.axon.axon attribute)": [[0, "bittensor.axon.axon.port", false]], "port (bittensor.axoninfo attribute)": [[44, "bittensor.AxonInfo.port", false]], "port (bittensor.chain_data.axoninfo attribute)": [[6, "bittensor.chain_data.AxonInfo.port", false]], "port (bittensor.chain_data.prometheusinfo attribute)": [[6, "bittensor.chain_data.PrometheusInfo.port", false]], "port (bittensor.mock.subtensor_mock.axoninfodict attribute)": [[49, "bittensor.mock.subtensor_mock.AxonInfoDict.port", false]], "port (bittensor.mock.subtensor_mock.axonservecallparams attribute)": [[49, "bittensor.mock.subtensor_mock.AxonServeCallParams.port", false]], "port (bittensor.mock.subtensor_mock.prometheusinfodict attribute)": [[49, "bittensor.mock.subtensor_mock.PrometheusInfoDict.port", false]], "port (bittensor.mock.subtensor_mock.prometheusservecallparams attribute)": [[49, "bittensor.mock.subtensor_mock.PrometheusServeCallParams.port", false]], "port (bittensor.prometheusinfo attribute)": [[44, "bittensor.PrometheusInfo.port", false]], "port (bittensor.synapse.terminalinfo attribute)": [[54, "bittensor.synapse.TerminalInfo.port", false]], "port (bittensor.terminalinfo attribute)": [[44, "bittensor.TerminalInfo.port", false]], "port (bittensor.types.axonservecallparams attribute)": [[57, "bittensor.types.AxonServeCallParams.port", false]], "port (bittensor.types.prometheusservecallparams attribute)": [[57, "bittensor.types.PrometheusServeCallParams.port", false]], "postprocessexception": [[30, "bittensor.errors.PostProcessException", false], [44, "bittensor.PostProcessException", false]], "powregistercommand (class in bittensor.commands)": [[11, "bittensor.commands.PowRegisterCommand", false]], "powregistercommand (class in bittensor.commands.register)": [[18, "bittensor.commands.register.PowRegisterCommand", false]], "powsolution (class in bittensor.utils.registration)": [[64, "bittensor.utils.registration.POWSolution", false]], "prepare_child_proportions() (in module bittensor.extrinsics.staking)": [[41, "bittensor.extrinsics.staking.prepare_child_proportions", false]], "prepare_synapse() (bittensor.subnets.subnetsapi method)": [[52, "bittensor.subnets.SubnetsAPI.prepare_synapse", false]], "prepare_synapse() (bittensor.subnetsapi method)": [[44, "bittensor.SubnetsAPI.prepare_synapse", false]], "preprocess() (bittensor.axon.axonmiddleware method)": [[0, "bittensor.axon.AxonMiddleware.preprocess", false]], "preprocess_synapse_for_request() (bittensor.dendrite method)": [[44, "bittensor.dendrite.preprocess_synapse_for_request", false]], "preprocess_synapse_for_request() (bittensor.dendrite.dendrite method)": [[29, "bittensor.dendrite.dendrite.preprocess_synapse_for_request", false]], "preprocess_synapse_for_request() (bittensor.dendrite.dendritemixin method)": [[29, "bittensor.dendrite.DendriteMixin.preprocess_synapse_for_request", false], [29, "id10", false]], "print_current_stake() (bittensor.commands.setchildrencommand static method)": [[11, "bittensor.commands.SetChildrenCommand.print_current_stake", false]], "print_current_stake() (bittensor.commands.stake.setchildrencommand static method)": [[21, "bittensor.commands.stake.SetChildrenCommand.print_current_stake", false]], "priority() (bittensor.axon.axonmiddleware method)": [[0, "bittensor.axon.AxonMiddleware.priority", false]], "priority_fns (bittensor.axon attribute)": [[44, "bittensor.axon.priority_fns", false]], "priority_fns (bittensor.axon.axon attribute)": [[0, "bittensor.axon.axon.priority_fns", false]], "priorityexception": [[30, "bittensor.errors.PriorityException", false], [44, "bittensor.PriorityException", false]], "prioritythreadpoolexecutor (class in bittensor)": [[44, "bittensor.PriorityThreadPoolExecutor", false]], "prioritythreadpoolexecutor (class in bittensor.threadpool)": [[56, "bittensor.threadpool.PriorityThreadPoolExecutor", false]], "proc_num (bittensor.utils.registration._solverbase attribute)": [[64, "bittensor.utils.registration._SolverBase.proc_num", false]], "process_error_message() (bittensor.dendrite.dendritemixin method)": [[29, "bittensor.dendrite.DendriteMixin.process_error_message", false]], "process_responses() (bittensor.subnets.subnetsapi method)": [[52, "bittensor.subnets.SubnetsAPI.process_responses", false]], "process_responses() (bittensor.subnetsapi method)": [[44, "bittensor.SubnetsAPI.process_responses", false]], "process_server_response() (bittensor.dendrite method)": [[44, "bittensor.dendrite.process_server_response", false]], "process_server_response() (bittensor.dendrite.dendrite method)": [[29, "bittensor.dendrite.dendrite.process_server_response", false]], "process_server_response() (bittensor.dendrite.dendritemixin method)": [[29, "bittensor.dendrite.DendriteMixin.process_server_response", false], [29, "id11", false]], "process_streaming_response() (bittensor.stream.streamingsynapse method)": [[51, "bittensor.stream.StreamingSynapse.process_streaming_response", false]], "process_streaming_response() (bittensor.streamingsynapse method)": [[44, "bittensor.StreamingSynapse.process_streaming_response", false]], "process_time (bittensor.synapse.terminalinfo attribute)": [[54, "bittensor.synapse.TerminalInfo.process_time", false]], "process_time (bittensor.terminalinfo attribute)": [[44, "bittensor.TerminalInfo.process_time", false]], "process_weights_for_netuid() (in module bittensor.utils.weight_utils)": [[69, "bittensor.utils.weight_utils.process_weights_for_netuid", false]], "prometheus_extrinsic() (in module bittensor.extrinsics.prometheus)": [[35, "bittensor.extrinsics.prometheus.prometheus_extrinsic", false]], "prometheus_info (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.prometheus_info", false]], "prometheus_info (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.prometheus_info", false]], "prometheus_info (bittensor.neuroninfo attribute)": [[44, "bittensor.NeuronInfo.prometheus_info", false]], "prometheus_info (bittensor.neuroninfolite attribute)": [[44, "bittensor.NeuronInfoLite.prometheus_info", false]], "prometheusinfo (class in bittensor)": [[44, "bittensor.PrometheusInfo", false]], "prometheusinfo (class in bittensor.chain_data)": [[6, "bittensor.chain_data.PrometheusInfo", false]], "prometheusinfodict (class in bittensor.mock.subtensor_mock)": [[49, "bittensor.mock.subtensor_mock.PrometheusInfoDict", false]], "prometheusservecallparams (class in bittensor.mock.subtensor_mock)": [[49, "bittensor.mock.subtensor_mock.PrometheusServeCallParams", false]], "prometheusservecallparams (class in bittensor.types)": [[57, "bittensor.types.PrometheusServeCallParams", false]], "proposalcalldata (in module bittensor)": [[44, "bittensor.ProposalCallData", false]], "proposalcalldata (in module bittensor.chain_data)": [[6, "bittensor.chain_data.ProposalCallData", false]], "proposalscommand (class in bittensor.commands)": [[11, "bittensor.commands.ProposalsCommand", false]], "proposalscommand (class in bittensor.commands.senate)": [[20, "bittensor.commands.senate.ProposalsCommand", false]], "proposalvotedata (class in bittensor)": [[44, "bittensor.ProposalVoteData", false]], "proposalvotedata (class in bittensor.chain_data)": [[6, "bittensor.chain_data.ProposalVoteData", false]], "protocol (bittensor.axoninfo attribute)": [[44, "bittensor.AxonInfo.protocol", false]], "protocol (bittensor.chain_data.axoninfo attribute)": [[6, "bittensor.chain_data.AxonInfo.protocol", false]], "protocol (bittensor.chain_data.ipinfo attribute)": [[6, "bittensor.chain_data.IPInfo.protocol", false]], "protocol (bittensor.ipinfo attribute)": [[44, "bittensor.IPInfo.protocol", false]], "protocol (bittensor.mock.subtensor_mock.axoninfodict attribute)": [[49, "bittensor.mock.subtensor_mock.AxonInfoDict.protocol", false]], "pruning_score (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.pruning_score", false]], "pruning_score (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.pruning_score", false]], "pruning_score (bittensor.neuroninfo attribute)": [[44, "bittensor.NeuronInfo.pruning_score", false]], "pruning_score (bittensor.neuroninfolite attribute)": [[44, "bittensor.NeuronInfoLite.pruning_score", false]], "publish_metadata() (in module bittensor.extrinsics.serving)": [[39, "bittensor.extrinsics.serving.publish_metadata", false]], "query() (bittensor.dendrite method)": [[44, "bittensor.dendrite.query", false]], "query() (bittensor.dendrite.dendrite method)": [[29, "bittensor.dendrite.dendrite.query", false]], "query() (bittensor.dendrite.dendritemixin method)": [[29, "bittensor.dendrite.DendriteMixin.query", false], [29, "id6", false]], "query_api() (bittensor.subnets.subnetsapi method)": [[52, "bittensor.subnets.SubnetsAPI.query_api", false]], "query_api() (bittensor.subnetsapi method)": [[44, "bittensor.SubnetsAPI.query_api", false]], "query_constant() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor.query_constant", false]], "query_constant() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor.query_constant", false]], "query_constant() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor.query_constant", false]], "query_constant() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.query_constant", false], [44, "bittensor.subtensor.query_constant", false]], "query_constant() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.query_constant", false]], "query_identity() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.query_identity", false], [44, "bittensor.subtensor.query_identity", false]], "query_identity() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.query_identity", false]], "query_map() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.query_map", false], [44, "bittensor.subtensor.query_map", false]], "query_map() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.query_map", false]], "query_map_subtensor() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor.query_map_subtensor", false]], "query_map_subtensor() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor.query_map_subtensor", false]], "query_map_subtensor() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor.query_map_subtensor", false]], "query_map_subtensor() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.query_map_subtensor", false], [44, "bittensor.subtensor.query_map_subtensor", false]], "query_map_subtensor() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.query_map_subtensor", false]], "query_module() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.query_module", false], [44, "bittensor.subtensor.query_module", false]], "query_module() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.query_module", false]], "query_runtime_api() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.query_runtime_api", false], [44, "bittensor.subtensor.query_runtime_api", false]], "query_runtime_api() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.query_runtime_api", false]], "query_subtensor() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor.query_subtensor", false]], "query_subtensor() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor.query_subtensor", false]], "query_subtensor() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor.query_subtensor", false]], "query_subtensor() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.query_subtensor", false], [44, "bittensor.subtensor.query_subtensor", false]], "query_subtensor() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.query_subtensor", false]], "r (bittensor.metagraph.metagraphmixin property)": [[46, "bittensor.metagraph.MetagraphMixin.R", false]], "rank (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.rank", false]], "rank (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.rank", false]], "rank (bittensor.neuroninfo attribute)": [[44, "bittensor.NeuronInfo.rank", false]], "rank (bittensor.neuroninfolite attribute)": [[44, "bittensor.NeuronInfoLite.rank", false]], "ranks (bittensor.metagraph.metagraphmixin attribute)": [[46, "bittensor.metagraph.MetagraphMixin.ranks", false]], "ranks (bittensor.metagraph.nontorchmetagraph attribute)": [[46, "bittensor.metagraph.NonTorchMetagraph.ranks", false]], "ranks (bittensor.metagraph.torchmetagraph attribute)": [[46, "bittensor.metagraph.TorchMetaGraph.ranks", false]], "rao (bittensor.balance attribute)": [[44, "bittensor.Balance.rao", false]], "rao (bittensor.utils.balance.balance attribute)": [[60, "bittensor.utils.balance.Balance.rao", false]], "rao_unit (bittensor.balance attribute)": [[44, "bittensor.Balance.rao_unit", false]], "rao_unit (bittensor.utils.balance.balance attribute)": [[60, "bittensor.utils.balance.Balance.rao_unit", false]], "raopertao (in module bittensor.utils)": [[62, "bittensor.utils.RAOPERTAO", false]], "record_log (bittensor.btlogging.loggingmachine.loggingconfig attribute)": [[5, "bittensor.btlogging.loggingmachine.LoggingConfig.record_log", false]], "records (bittensor.mock.subtensor_mock.mockmapresult attribute)": [[49, "bittensor.mock.subtensor_mock.MockMapResult.records", false]], "recreate() (bittensor.wallet method)": [[44, "bittensor.wallet.recreate", false]], "recreate() (bittensor.wallet.wallet method)": [[70, "bittensor.wallet.wallet.recreate", false]], "recycle() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.recycle", false], [44, "bittensor.subtensor.recycle", false]], "recycle() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.recycle", false]], "regen_coldkey (bittensor.wallet attribute)": [[44, "bittensor.wallet.regen_coldkey", false]], "regen_coldkey (bittensor.wallet.wallet attribute)": [[70, "bittensor.wallet.wallet.regen_coldkey", false]], "regen_coldkeypub (bittensor.wallet attribute)": [[44, "bittensor.wallet.regen_coldkeypub", false]], "regen_coldkeypub (bittensor.wallet.wallet attribute)": [[70, "bittensor.wallet.wallet.regen_coldkeypub", false]], "regen_hotkey (bittensor.wallet attribute)": [[44, "bittensor.wallet.regen_hotkey", false]], "regen_hotkey (bittensor.wallet.wallet attribute)": [[70, "bittensor.wallet.wallet.regen_hotkey", false]], "regencoldkeycommand (class in bittensor.commands)": [[11, "bittensor.commands.RegenColdkeyCommand", false]], "regencoldkeycommand (class in bittensor.commands.wallets)": [[25, "bittensor.commands.wallets.RegenColdkeyCommand", false]], "regencoldkeypubcommand (class in bittensor.commands)": [[11, "bittensor.commands.RegenColdkeypubCommand", false]], "regencoldkeypubcommand (class in bittensor.commands.wallets)": [[25, "bittensor.commands.wallets.RegenColdkeypubCommand", false]], "regenerate_coldkey() (bittensor.wallet method)": [[44, "bittensor.wallet.regenerate_coldkey", false]], "regenerate_coldkey() (bittensor.wallet.wallet method)": [[70, "bittensor.wallet.wallet.regenerate_coldkey", false]], "regenerate_coldkeypub() (bittensor.wallet method)": [[44, "bittensor.wallet.regenerate_coldkeypub", false]], "regenerate_coldkeypub() (bittensor.wallet.wallet method)": [[70, "bittensor.wallet.wallet.regenerate_coldkeypub", false]], "regenerate_hotkey() (bittensor.wallet method)": [[44, "bittensor.wallet.regenerate_hotkey", false]], "regenerate_hotkey() (bittensor.wallet.wallet method)": [[70, "bittensor.wallet.wallet.regenerate_hotkey", false]], "regenhotkeycommand (class in bittensor.commands)": [[11, "bittensor.commands.RegenHotkeyCommand", false]], "regenhotkeycommand (class in bittensor.commands.wallets)": [[25, "bittensor.commands.wallets.RegenHotkeyCommand", false]], "register() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.register", false], [44, "bittensor.subtensor.register", false]], "register() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.register", false]], "register_extrinsic() (in module bittensor.extrinsics.registration)": [[36, "bittensor.extrinsics.registration.register_extrinsic", false]], "register_primary_logger() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.register_primary_logger", false]], "register_primary_logger() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.register_primary_logger", false]], "register_senate() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.register_senate", false], [44, "bittensor.subtensor.register_senate", false]], "register_senate() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.register_senate", false]], "register_senate_extrinsic() (in module bittensor.extrinsics.senate)": [[38, "bittensor.extrinsics.senate.register_senate_extrinsic", false]], "register_subnetwork() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.register_subnetwork", false], [44, "bittensor.subtensor.register_subnetwork", false]], "register_subnetwork() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.register_subnetwork", false]], "register_subnetwork_extrinsic() (in module bittensor.extrinsics.network)": [[34, "bittensor.extrinsics.network.register_subnetwork_extrinsic", false]], "registercommand (class in bittensor.commands)": [[11, "bittensor.commands.RegisterCommand", false]], "registercommand (class in bittensor.commands.register)": [[18, "bittensor.commands.register.RegisterCommand", false]], "registersubnetworkcommand (class in bittensor.commands.network)": [[16, "bittensor.commands.network.RegisterSubnetworkCommand", false]], "registration_allowed (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.registration_allowed", false]], "registration_allowed (bittensor.subnethyperparameters attribute)": [[44, "bittensor.SubnetHyperparameters.registration_allowed", false]], "registrationerror": [[30, "bittensor.errors.RegistrationError", false], [44, "bittensor.RegistrationError", false]], "registrations (bittensor.chain_data.delegateinfo attribute)": [[6, "bittensor.chain_data.DelegateInfo.registrations", false]], "registrations (bittensor.chain_data.delegateinfolite attribute)": [[6, "bittensor.chain_data.DelegateInfoLite.registrations", false]], "registrations (bittensor.delegateinfo attribute)": [[44, "bittensor.DelegateInfo.registrations", false]], "registrationstatistics (class in bittensor.utils.registration)": [[64, "bittensor.utils.registration.RegistrationStatistics", false]], "registrationstatisticslogger (class in bittensor.utils.registration)": [[64, "bittensor.utils.registration.RegistrationStatisticsLogger", false]], "render_table() (bittensor.commands.getchildrencommand static method)": [[11, "bittensor.commands.GetChildrenCommand.render_table", false]], "render_table() (bittensor.commands.stake.getchildrencommand static method)": [[21, "bittensor.commands.stake.GetChildrenCommand.render_table", false]], "required_hash_fields (bittensor.synapse attribute)": [[44, "bittensor.Synapse.required_hash_fields", false]], "required_hash_fields (bittensor.synapse.synapse attribute)": [[54, "bittensor.synapse.Synapse.required_hash_fields", false]], "reset() (bittensor.mock.mocksubtensor class method)": [[47, "bittensor.mock.MockSubtensor.reset", false]], "reset() (bittensor.mock.subtensor_mock.mocksubtensor class method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor.reset", false]], "reset() (bittensor.mocksubtensor class method)": [[44, "bittensor.MockSubtensor.reset", false]], "reset_cuda() (in module bittensor.utils._register_cuda)": [[58, "bittensor.utils._register_cuda.reset_cuda", false]], "retrieve_children() (bittensor.commands.getchildrencommand static method)": [[11, "bittensor.commands.GetChildrenCommand.retrieve_children", false]], "retrieve_children() (bittensor.commands.stake.getchildrencommand static method)": [[21, "bittensor.commands.stake.GetChildrenCommand.retrieve_children", false]], "return_per_1000 (bittensor.chain_data.delegateinfo attribute)": [[6, "bittensor.chain_data.DelegateInfo.return_per_1000", false]], "return_per_1000 (bittensor.chain_data.delegateinfolite attribute)": [[6, "bittensor.chain_data.DelegateInfoLite.return_per_1000", false]], "return_per_1000 (bittensor.delegateinfo attribute)": [[44, "bittensor.DelegateInfo.return_per_1000", false]], "reveal_weights() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.reveal_weights", false], [44, "bittensor.subtensor.reveal_weights", false]], "reveal_weights() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.reveal_weights", false]], "reveal_weights_extrinsic() (in module bittensor.extrinsics.commit_weights)": [[31, "bittensor.extrinsics.commit_weights.reveal_weights_extrinsic", false]], "revealweightcommand (class in bittensor.commands)": [[11, "bittensor.commands.RevealWeightCommand", false]], "revealweightcommand (class in bittensor.commands.weights)": [[26, "bittensor.commands.weights.RevealWeightCommand", false]], "revokechildrencommand (class in bittensor.commands)": [[11, "bittensor.commands.RevokeChildrenCommand", false]], "revokechildrencommand (class in bittensor.commands.unstake)": [[23, "bittensor.commands.unstake.RevokeChildrenCommand", false]], "rho (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.rho", false]], "rho (bittensor.chain_data.subnetinfo attribute)": [[6, "bittensor.chain_data.SubnetInfo.rho", false]], "rho (bittensor.mock.subtensor_mock.mocksubtensorstate attribute)": [[49, "bittensor.mock.subtensor_mock.MockSubtensorState.Rho", false]], "rho (bittensor.subnethyperparameters attribute)": [[44, "bittensor.SubnetHyperparameters.rho", false]], "rho (bittensor.subnetinfo attribute)": [[44, "bittensor.SubnetInfo.rho", false]], "rho() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.rho", false], [44, "bittensor.subtensor.rho", false]], "rho() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.rho", false]], "root_register() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.root_register", false], [44, "bittensor.subtensor.root_register", false]], "root_register() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.root_register", false]], "root_register_extrinsic() (in module bittensor.extrinsics.root)": [[37, "bittensor.extrinsics.root.root_register_extrinsic", false]], "root_set_weights() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.root_set_weights", false], [44, "bittensor.subtensor.root_set_weights", false]], "root_set_weights() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.root_set_weights", false]], "rootgetweightscommand (class in bittensor.commands)": [[11, "bittensor.commands.RootGetWeightsCommand", false]], "rootgetweightscommand (class in bittensor.commands.root)": [[19, "bittensor.commands.root.RootGetWeightsCommand", false]], "rootlist (class in bittensor.commands)": [[11, "bittensor.commands.RootList", false]], "rootlist (class in bittensor.commands.root)": [[19, "bittensor.commands.root.RootList", false]], "rootregistercommand (class in bittensor.commands)": [[11, "bittensor.commands.RootRegisterCommand", false]], "rootregistercommand (class in bittensor.commands.root)": [[19, "bittensor.commands.root.RootRegisterCommand", false]], "rootsetboostcommand (class in bittensor.commands)": [[11, "bittensor.commands.RootSetBoostCommand", false]], "rootsetboostcommand (class in bittensor.commands.root)": [[19, "bittensor.commands.root.RootSetBoostCommand", false]], "rootsetslashcommand (class in bittensor.commands)": [[11, "bittensor.commands.RootSetSlashCommand", false]], "rootsetslashcommand (class in bittensor.commands.root)": [[19, "bittensor.commands.root.RootSetSlashCommand", false]], "rootsetweightscommand (class in bittensor.commands)": [[11, "bittensor.commands.RootSetWeightsCommand", false]], "rootsetweightscommand (class in bittensor.commands.root)": [[19, "bittensor.commands.root.RootSetWeightsCommand", false]], "rounds_total (bittensor.utils.registration.registrationstatistics attribute)": [[64, "bittensor.utils.registration.RegistrationStatistics.rounds_total", false]], "router (bittensor.axon attribute)": [[44, "bittensor.axon.router", false]], "router (bittensor.axon.axon attribute)": [[0, "bittensor.axon.axon.router", false]], "run() (bittensor.axon.axonmiddleware method)": [[0, "bittensor.axon.AxonMiddleware.run", false]], "run() (bittensor.cli method)": [[44, "bittensor.cli.run", false]], "run() (bittensor.cli.cli method)": [[7, "bittensor.cli.cli.run", false]], "run() (bittensor.commands.autocompletecommand static method)": [[11, "bittensor.commands.AutocompleteCommand.run", false]], "run() (bittensor.commands.check_coldkey_swap.checkcoldkeyswapcommand static method)": [[8, "bittensor.commands.check_coldkey_swap.CheckColdKeySwapCommand.run", false]], "run() (bittensor.commands.checkcoldkeyswapcommand static method)": [[11, "bittensor.commands.CheckColdKeySwapCommand.run", false]], "run() (bittensor.commands.commitweightcommand static method)": [[11, "bittensor.commands.CommitWeightCommand.run", false]], "run() (bittensor.commands.delegates.delegatestakecommand static method)": [[9, "bittensor.commands.delegates.DelegateStakeCommand.run", false]], "run() (bittensor.commands.delegates.delegateunstakecommand static method)": [[9, "bittensor.commands.delegates.DelegateUnstakeCommand.run", false]], "run() (bittensor.commands.delegates.listdelegatescommand static method)": [[9, "bittensor.commands.delegates.ListDelegatesCommand.run", false]], "run() (bittensor.commands.delegates.mydelegatescommand static method)": [[9, "bittensor.commands.delegates.MyDelegatesCommand.run", false]], "run() (bittensor.commands.delegates.nominatecommand static method)": [[9, "bittensor.commands.delegates.NominateCommand.run", false]], "run() (bittensor.commands.delegates.settakecommand static method)": [[9, "bittensor.commands.delegates.SetTakeCommand.run", false]], "run() (bittensor.commands.delegatestakecommand static method)": [[11, "bittensor.commands.DelegateStakeCommand.run", false]], "run() (bittensor.commands.delegateunstakecommand static method)": [[11, "bittensor.commands.DelegateUnstakeCommand.run", false]], "run() (bittensor.commands.getchildkeytakecommand static method)": [[11, "bittensor.commands.GetChildKeyTakeCommand.run", false]], "run() (bittensor.commands.getchildrencommand static method)": [[11, "bittensor.commands.GetChildrenCommand.run", false]], "run() (bittensor.commands.getidentitycommand method)": [[11, "bittensor.commands.GetIdentityCommand.run", false]], "run() (bittensor.commands.getwallethistorycommand static method)": [[11, "bittensor.commands.GetWalletHistoryCommand.run", false]], "run() (bittensor.commands.identity.getidentitycommand method)": [[10, "bittensor.commands.identity.GetIdentityCommand.run", false]], "run() (bittensor.commands.identity.setidentitycommand method)": [[10, "bittensor.commands.identity.SetIdentityCommand.run", false]], "run() (bittensor.commands.inspect.inspectcommand static method)": [[12, "bittensor.commands.inspect.InspectCommand.run", false]], "run() (bittensor.commands.inspectcommand static method)": [[11, "bittensor.commands.InspectCommand.run", false]], "run() (bittensor.commands.list.listcommand static method)": [[13, "bittensor.commands.list.ListCommand.run", false]], "run() (bittensor.commands.listcommand static method)": [[11, "bittensor.commands.ListCommand.run", false]], "run() (bittensor.commands.listdelegatescommand static method)": [[11, "bittensor.commands.ListDelegatesCommand.run", false]], "run() (bittensor.commands.metagraph.metagraphcommand static method)": [[14, "bittensor.commands.metagraph.MetagraphCommand.run", false]], "run() (bittensor.commands.metagraphcommand static method)": [[11, "bittensor.commands.MetagraphCommand.run", false]], "run() (bittensor.commands.misc.autocompletecommand static method)": [[15, "bittensor.commands.misc.AutocompleteCommand.run", false]], "run() (bittensor.commands.misc.updatecommand static method)": [[15, "bittensor.commands.misc.UpdateCommand.run", false]], "run() (bittensor.commands.mydelegatescommand static method)": [[11, "bittensor.commands.MyDelegatesCommand.run", false]], "run() (bittensor.commands.network.registersubnetworkcommand static method)": [[16, "bittensor.commands.network.RegisterSubnetworkCommand.run", false]], "run() (bittensor.commands.network.subnetgethyperparamscommand static method)": [[16, "bittensor.commands.network.SubnetGetHyperparamsCommand.run", false]], "run() (bittensor.commands.network.subnethyperparamscommand static method)": [[16, "bittensor.commands.network.SubnetHyperparamsCommand.run", false]], "run() (bittensor.commands.network.subnetlistcommand static method)": [[16, "bittensor.commands.network.SubnetListCommand.run", false]], "run() (bittensor.commands.network.subnetlockcostcommand static method)": [[16, "bittensor.commands.network.SubnetLockCostCommand.run", false]], "run() (bittensor.commands.network.subnetsudocommand static method)": [[16, "bittensor.commands.network.SubnetSudoCommand.run", false]], "run() (bittensor.commands.newcoldkeycommand method)": [[11, "bittensor.commands.NewColdkeyCommand.run", false]], "run() (bittensor.commands.newhotkeycommand method)": [[11, "bittensor.commands.NewHotkeyCommand.run", false]], "run() (bittensor.commands.nominatecommand static method)": [[11, "bittensor.commands.NominateCommand.run", false]], "run() (bittensor.commands.overview.overviewcommand static method)": [[17, "bittensor.commands.overview.OverviewCommand.run", false]], "run() (bittensor.commands.overviewcommand static method)": [[11, "bittensor.commands.OverviewCommand.run", false]], "run() (bittensor.commands.powregistercommand static method)": [[11, "bittensor.commands.PowRegisterCommand.run", false]], "run() (bittensor.commands.proposalscommand static method)": [[11, "bittensor.commands.ProposalsCommand.run", false]], "run() (bittensor.commands.regencoldkeycommand method)": [[11, "bittensor.commands.RegenColdkeyCommand.run", false]], "run() (bittensor.commands.regencoldkeypubcommand method)": [[11, "bittensor.commands.RegenColdkeypubCommand.run", false]], "run() (bittensor.commands.regenhotkeycommand method)": [[11, "bittensor.commands.RegenHotkeyCommand.run", false]], "run() (bittensor.commands.register.powregistercommand static method)": [[18, "bittensor.commands.register.PowRegisterCommand.run", false]], "run() (bittensor.commands.register.registercommand static method)": [[18, "bittensor.commands.register.RegisterCommand.run", false]], "run() (bittensor.commands.register.runfaucetcommand static method)": [[18, "bittensor.commands.register.RunFaucetCommand.run", false]], "run() (bittensor.commands.register.swaphotkeycommand static method)": [[18, "bittensor.commands.register.SwapHotkeyCommand.run", false]], "run() (bittensor.commands.registercommand static method)": [[11, "bittensor.commands.RegisterCommand.run", false]], "run() (bittensor.commands.revealweightcommand static method)": [[11, "bittensor.commands.RevealWeightCommand.run", false]], "run() (bittensor.commands.revokechildrencommand static method)": [[11, "bittensor.commands.RevokeChildrenCommand.run", false]], "run() (bittensor.commands.root.rootgetweightscommand static method)": [[19, "bittensor.commands.root.RootGetWeightsCommand.run", false]], "run() (bittensor.commands.root.rootlist static method)": [[19, "bittensor.commands.root.RootList.run", false]], "run() (bittensor.commands.root.rootregistercommand static method)": [[19, "bittensor.commands.root.RootRegisterCommand.run", false]], "run() (bittensor.commands.root.rootsetboostcommand static method)": [[19, "bittensor.commands.root.RootSetBoostCommand.run", false]], "run() (bittensor.commands.root.rootsetslashcommand static method)": [[19, "bittensor.commands.root.RootSetSlashCommand.run", false]], "run() (bittensor.commands.root.rootsetweightscommand static method)": [[19, "bittensor.commands.root.RootSetWeightsCommand.run", false]], "run() (bittensor.commands.rootgetweightscommand static method)": [[11, "bittensor.commands.RootGetWeightsCommand.run", false]], "run() (bittensor.commands.rootlist static method)": [[11, "bittensor.commands.RootList.run", false]], "run() (bittensor.commands.rootregistercommand static method)": [[11, "bittensor.commands.RootRegisterCommand.run", false]], "run() (bittensor.commands.rootsetboostcommand static method)": [[11, "bittensor.commands.RootSetBoostCommand.run", false]], "run() (bittensor.commands.rootsetslashcommand static method)": [[11, "bittensor.commands.RootSetSlashCommand.run", false]], "run() (bittensor.commands.rootsetweightscommand static method)": [[11, "bittensor.commands.RootSetWeightsCommand.run", false]], "run() (bittensor.commands.runfaucetcommand static method)": [[11, "bittensor.commands.RunFaucetCommand.run", false]], "run() (bittensor.commands.senate.proposalscommand static method)": [[20, "bittensor.commands.senate.ProposalsCommand.run", false]], "run() (bittensor.commands.senate.senatecommand static method)": [[20, "bittensor.commands.senate.SenateCommand.run", false]], "run() (bittensor.commands.senate.senateleavecommand static method)": [[20, "bittensor.commands.senate.SenateLeaveCommand.run", false]], "run() (bittensor.commands.senate.senateregistercommand static method)": [[20, "bittensor.commands.senate.SenateRegisterCommand.run", false]], "run() (bittensor.commands.senate.showvotescommand static method)": [[20, "bittensor.commands.senate.ShowVotesCommand.run", false]], "run() (bittensor.commands.senate.votecommand static method)": [[20, "bittensor.commands.senate.VoteCommand.run", false]], "run() (bittensor.commands.senatecommand static method)": [[11, "bittensor.commands.SenateCommand.run", false]], "run() (bittensor.commands.senateleavecommand static method)": [[11, "bittensor.commands.SenateLeaveCommand.run", false]], "run() (bittensor.commands.senateregistercommand static method)": [[11, "bittensor.commands.SenateRegisterCommand.run", false]], "run() (bittensor.commands.setchildkeytakecommand static method)": [[11, "bittensor.commands.SetChildKeyTakeCommand.run", false]], "run() (bittensor.commands.setchildrencommand static method)": [[11, "bittensor.commands.SetChildrenCommand.run", false]], "run() (bittensor.commands.setidentitycommand method)": [[11, "bittensor.commands.SetIdentityCommand.run", false]], "run() (bittensor.commands.settakecommand static method)": [[11, "bittensor.commands.SetTakeCommand.run", false]], "run() (bittensor.commands.showvotescommand static method)": [[11, "bittensor.commands.ShowVotesCommand.run", false]], "run() (bittensor.commands.stake.getchildkeytakecommand static method)": [[21, "bittensor.commands.stake.GetChildKeyTakeCommand.run", false]], "run() (bittensor.commands.stake.getchildrencommand static method)": [[21, "bittensor.commands.stake.GetChildrenCommand.run", false]], "run() (bittensor.commands.stake.setchildkeytakecommand static method)": [[21, "bittensor.commands.stake.SetChildKeyTakeCommand.run", false]], "run() (bittensor.commands.stake.setchildrencommand static method)": [[21, "bittensor.commands.stake.SetChildrenCommand.run", false]], "run() (bittensor.commands.stake.stakecommand static method)": [[21, "bittensor.commands.stake.StakeCommand.run", false]], "run() (bittensor.commands.stake.stakeshow static method)": [[21, "bittensor.commands.stake.StakeShow.run", false]], "run() (bittensor.commands.stakecommand static method)": [[11, "bittensor.commands.StakeCommand.run", false]], "run() (bittensor.commands.stakeshow static method)": [[11, "bittensor.commands.StakeShow.run", false]], "run() (bittensor.commands.swaphotkeycommand static method)": [[11, "bittensor.commands.SwapHotkeyCommand.run", false]], "run() (bittensor.commands.transfer.transfercommand static method)": [[22, "bittensor.commands.transfer.TransferCommand.run", false]], "run() (bittensor.commands.transfercommand static method)": [[11, "bittensor.commands.TransferCommand.run", false]], "run() (bittensor.commands.unstake.revokechildrencommand static method)": [[23, "bittensor.commands.unstake.RevokeChildrenCommand.run", false]], "run() (bittensor.commands.unstake.unstakecommand static method)": [[23, "bittensor.commands.unstake.UnStakeCommand.run", false]], "run() (bittensor.commands.unstakecommand static method)": [[11, "bittensor.commands.UnStakeCommand.run", false]], "run() (bittensor.commands.updatecommand static method)": [[11, "bittensor.commands.UpdateCommand.run", false]], "run() (bittensor.commands.updatewalletcommand static method)": [[11, "bittensor.commands.UpdateWalletCommand.run", false]], "run() (bittensor.commands.votecommand static method)": [[11, "bittensor.commands.VoteCommand.run", false]], "run() (bittensor.commands.walletbalancecommand static method)": [[11, "bittensor.commands.WalletBalanceCommand.run", false]], "run() (bittensor.commands.walletcreatecommand method)": [[11, "bittensor.commands.WalletCreateCommand.run", false]], "run() (bittensor.commands.wallets.getwallethistorycommand static method)": [[25, "bittensor.commands.wallets.GetWalletHistoryCommand.run", false]], "run() (bittensor.commands.wallets.newcoldkeycommand method)": [[25, "bittensor.commands.wallets.NewColdkeyCommand.run", false]], "run() (bittensor.commands.wallets.newhotkeycommand method)": [[25, "bittensor.commands.wallets.NewHotkeyCommand.run", false]], "run() (bittensor.commands.wallets.regencoldkeycommand method)": [[25, "bittensor.commands.wallets.RegenColdkeyCommand.run", false]], "run() (bittensor.commands.wallets.regencoldkeypubcommand method)": [[25, "bittensor.commands.wallets.RegenColdkeypubCommand.run", false]], "run() (bittensor.commands.wallets.regenhotkeycommand method)": [[25, "bittensor.commands.wallets.RegenHotkeyCommand.run", false]], "run() (bittensor.commands.wallets.updatewalletcommand static method)": [[25, "bittensor.commands.wallets.UpdateWalletCommand.run", false]], "run() (bittensor.commands.wallets.walletbalancecommand static method)": [[25, "bittensor.commands.wallets.WalletBalanceCommand.run", false]], "run() (bittensor.commands.wallets.walletcreatecommand method)": [[25, "bittensor.commands.wallets.WalletCreateCommand.run", false]], "run() (bittensor.commands.weights.commitweightcommand static method)": [[26, "bittensor.commands.weights.CommitWeightCommand.run", false]], "run() (bittensor.commands.weights.revealweightcommand static method)": [[26, "bittensor.commands.weights.RevealWeightCommand.run", false]], "run() (bittensor.threadpool._workitem method)": [[56, "bittensor.threadpool._WorkItem.run", false]], "run() (bittensor.utils.registration._cudasolver method)": [[64, "bittensor.utils.registration._CUDASolver.run", false]], "run() (bittensor.utils.registration._solver method)": [[64, "bittensor.utils.registration._Solver.run", false]], "run() (bittensor.utils.registration._solverbase method)": [[64, "bittensor.utils.registration._SolverBase.run", false]], "run_faucet() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.run_faucet", false], [44, "bittensor.subtensor.run_faucet", false]], "run_faucet() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.run_faucet", false]], "run_faucet_extrinsic() (in module bittensor.extrinsics.registration)": [[36, "bittensor.extrinsics.registration.run_faucet_extrinsic", false]], "run_in_thread() (bittensor.axon.fastapithreadedserver method)": [[0, "bittensor.axon.FastAPIThreadedServer.run_in_thread", false]], "runexception": [[30, "bittensor.errors.RunException", false], [44, "bittensor.RunException", false]], "runfaucetcommand (class in bittensor.commands)": [[11, "bittensor.commands.RunFaucetCommand", false]], "runfaucetcommand (class in bittensor.commands.register)": [[18, "bittensor.commands.register.RunFaucetCommand", false]], "s (bittensor.metagraph.metagraphmixin property)": [[46, "bittensor.metagraph.MetagraphMixin.S", false]], "save() (bittensor.metagraph.metagraphmixin method)": [[46, "bittensor.metagraph.MetagraphMixin.save", false]], "scaling_law_power (bittensor.chain_data.subnetinfo attribute)": [[6, "bittensor.chain_data.SubnetInfo.scaling_law_power", false]], "scaling_law_power (bittensor.subnetinfo attribute)": [[44, "bittensor.SubnetInfo.scaling_law_power", false]], "scaling_law_power() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.scaling_law_power", false], [44, "bittensor.subtensor.scaling_law_power", false]], "scaling_law_power() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.scaling_law_power", false]], "scheduledcoldkeyswapinfo (bittensor.chain_data.chaindatatype attribute)": [[6, "bittensor.chain_data.ChainDataType.ScheduledColdkeySwapInfo", false]], "scheduledcoldkeyswapinfo (class in bittensor.chain_data)": [[6, "bittensor.chain_data.ScheduledColdkeySwapInfo", false]], "seal (bittensor.utils.registration.powsolution attribute)": [[64, "bittensor.utils.registration.POWSolution.seal", false]], "senatecommand (class in bittensor.commands)": [[11, "bittensor.commands.SenateCommand", false]], "senatecommand (class in bittensor.commands.senate)": [[20, "bittensor.commands.senate.SenateCommand", false]], "senateleavecommand (class in bittensor.commands)": [[11, "bittensor.commands.SenateLeaveCommand", false]], "senateleavecommand (class in bittensor.commands.senate)": [[20, "bittensor.commands.senate.SenateLeaveCommand", false]], "senateregistercommand (class in bittensor.commands)": [[11, "bittensor.commands.SenateRegisterCommand", false]], "senateregistercommand (class in bittensor.commands.senate)": [[20, "bittensor.commands.senate.SenateRegisterCommand", false]], "send_extrinsic() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.send_extrinsic", false], [44, "bittensor.subtensor.send_extrinsic", false]], "send_extrinsic() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.send_extrinsic", false]], "serialize() (bittensor.tensor static method)": [[44, "bittensor.Tensor.serialize", false]], "serialize() (bittensor.tensor.tensor static method)": [[55, "bittensor.tensor.Tensor.serialize", false]], "serialized_keypair_to_keyfile_data() (in module bittensor)": [[44, "bittensor.serialized_keypair_to_keyfile_data", false]], "serialized_keypair_to_keyfile_data() (in module bittensor.keyfile)": [[45, "bittensor.keyfile.serialized_keypair_to_keyfile_data", false]], "serve() (bittensor.axon method)": [[44, "bittensor.axon.serve", false]], "serve() (bittensor.axon.axon method)": [[0, "bittensor.axon.axon.serve", false]], "serve() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.serve", false], [44, "bittensor.subtensor.serve", false]], "serve() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.serve", false]], "serve_axon() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.serve_axon", false], [44, "bittensor.subtensor.serve_axon", false]], "serve_axon() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.serve_axon", false]], "serve_axon_extrinsic() (in module bittensor.extrinsics.serving)": [[39, "bittensor.extrinsics.serving.serve_axon_extrinsic", false]], "serve_extrinsic() (in module bittensor.extrinsics.serving)": [[39, "bittensor.extrinsics.serving.serve_extrinsic", false]], "serve_prometheus() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.serve_prometheus", false], [44, "bittensor.subtensor.serve_prometheus", false]], "serve_prometheus() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.serve_prometheus", false]], "serving_rate_limit (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.serving_rate_limit", false]], "serving_rate_limit (bittensor.subnethyperparameters attribute)": [[44, "bittensor.SubnetHyperparameters.serving_rate_limit", false]], "serving_rate_limit() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.serving_rate_limit", false], [44, "bittensor.subtensor.serving_rate_limit", false]], "serving_rate_limit() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.serving_rate_limit", false]], "session (bittensor.dendrite.dendritemixin property)": [[29, "bittensor.dendrite.DendriteMixin.session", false]], "set_childkey_take() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.set_childkey_take", false], [44, "bittensor.subtensor.set_childkey_take", false]], "set_childkey_take() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.set_childkey_take", false]], "set_childkey_take_extrinsic() (in module bittensor.extrinsics.staking)": [[41, "bittensor.extrinsics.staking.set_childkey_take_extrinsic", false]], "set_children() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.set_children", false], [44, "bittensor.subtensor.set_children", false]], "set_children() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.set_children", false]], "set_children_extrinsic() (in module bittensor.extrinsics.staking)": [[41, "bittensor.extrinsics.staking.set_children_extrinsic", false]], "set_coldkey() (bittensor.wallet method)": [[44, "bittensor.wallet.set_coldkey", false]], "set_coldkey() (bittensor.wallet.wallet method)": [[70, "bittensor.wallet.wallet.set_coldkey", false]], "set_coldkeypub() (bittensor.wallet method)": [[44, "bittensor.wallet.set_coldkeypub", false]], "set_coldkeypub() (bittensor.wallet.wallet method)": [[70, "bittensor.wallet.wallet.set_coldkeypub", false]], "set_config() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.set_config", false]], "set_config() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.set_config", false]], "set_debug() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.set_debug", false]], "set_debug() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.set_debug", false]], "set_difficulty() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor.set_difficulty", false]], "set_difficulty() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor.set_difficulty", false]], "set_difficulty() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor.set_difficulty", false]], "set_hotkey() (bittensor.wallet method)": [[44, "bittensor.wallet.set_hotkey", false]], "set_hotkey() (bittensor.wallet.wallet method)": [[70, "bittensor.wallet.wallet.set_hotkey", false]], "set_hyperparameter() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.set_hyperparameter", false], [44, "bittensor.subtensor.set_hyperparameter", false]], "set_hyperparameter() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.set_hyperparameter", false]], "set_hyperparameter_extrinsic() (in module bittensor.extrinsics.network)": [[34, "bittensor.extrinsics.network.set_hyperparameter_extrinsic", false]], "set_keypair() (bittensor.keyfile method)": [[44, "bittensor.keyfile.set_keypair", false]], "set_keypair() (bittensor.keyfile.keyfile method)": [[45, "bittensor.keyfile.keyfile.set_keypair", false]], "set_keypair() (bittensor.keyfile.mockkeyfile method)": [[45, "bittensor.keyfile.Mockkeyfile.set_keypair", false]], "set_keypair() (bittensor.mock.keyfile_mock.mockkeyfile method)": [[48, "bittensor.mock.keyfile_mock.MockKeyfile.set_keypair", false]], "set_keypair() (bittensor.mockkeyfile method)": [[44, "bittensor.MockKeyfile.set_keypair", false], [44, "bittensor.Mockkeyfile.set_keypair", false]], "set_name_type() (bittensor.synapse method)": [[44, "bittensor.Synapse.set_name_type", false]], "set_name_type() (bittensor.synapse.synapse method)": [[54, "bittensor.synapse.Synapse.set_name_type", false]], "set_root_weights_extrinsic() (in module bittensor.extrinsics.root)": [[37, "bittensor.extrinsics.root.set_root_weights_extrinsic", false]], "set_take() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.set_take", false], [44, "bittensor.subtensor.set_take", false]], "set_take() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.set_take", false]], "set_trace() (bittensor.btlogging.format.btstreamformatter method)": [[2, "bittensor.btlogging.format.BtStreamFormatter.set_trace", false]], "set_trace() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.set_trace", false]], "set_trace() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.set_trace", false]], "set_weights() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.set_weights", false], [44, "bittensor.subtensor.set_weights", false]], "set_weights() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.set_weights", false]], "set_weights_extrinsic() (in module bittensor.extrinsics.set_weights)": [[40, "bittensor.extrinsics.set_weights.set_weights_extrinsic", false]], "setchildkeytakecommand (class in bittensor.commands)": [[11, "bittensor.commands.SetChildKeyTakeCommand", false]], "setchildkeytakecommand (class in bittensor.commands.stake)": [[21, "bittensor.commands.stake.SetChildKeyTakeCommand", false]], "setchildrencommand (class in bittensor.commands)": [[11, "bittensor.commands.SetChildrenCommand", false]], "setchildrencommand (class in bittensor.commands.stake)": [[21, "bittensor.commands.stake.SetChildrenCommand", false]], "setidentitycommand (class in bittensor.commands)": [[11, "bittensor.commands.SetIdentityCommand", false]], "setidentitycommand (class in bittensor.commands.identity)": [[10, "bittensor.commands.identity.SetIdentityCommand", false]], "settakecommand (class in bittensor.commands)": [[11, "bittensor.commands.SetTakeCommand", false]], "settakecommand (class in bittensor.commands.delegates)": [[9, "bittensor.commands.delegates.SetTakeCommand", false]], "setup() (bittensor.mock.mocksubtensor method)": [[47, "bittensor.mock.MockSubtensor.setup", false]], "setup() (bittensor.mock.subtensor_mock.mocksubtensor method)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor.setup", false]], "setup() (bittensor.mocksubtensor method)": [[44, "bittensor.MockSubtensor.setup", false]], "setup_config() (bittensor.subtensor static method)": [[44, "bittensor.Subtensor.setup_config", false], [44, "bittensor.subtensor.setup_config", false]], "setup_config() (bittensor.subtensor.subtensor static method)": [[53, "bittensor.subtensor.Subtensor.setup_config", false]], "shape (bittensor.tensor attribute)": [[44, "bittensor.Tensor.shape", false]], "shape (bittensor.tensor.tensor attribute)": [[55, "bittensor.tensor.Tensor.shape", false]], "should_exit (bittensor.axon.fastapithreadedserver attribute)": [[0, "bittensor.axon.FastAPIThreadedServer.should_exit", false]], "show_delegates() (in module bittensor.commands.delegates)": [[9, "bittensor.commands.delegates.show_delegates", false]], "show_delegates_lite() (in module bittensor.commands.delegates)": [[9, "bittensor.commands.delegates.show_delegates_lite", false]], "showvotescommand (class in bittensor.commands)": [[11, "bittensor.commands.ShowVotesCommand", false]], "showvotescommand (class in bittensor.commands.senate)": [[20, "bittensor.commands.senate.ShowVotesCommand", false]], "shutdown() (bittensor.prioritythreadpoolexecutor method)": [[44, "bittensor.PriorityThreadPoolExecutor.shutdown", false]], "shutdown() (bittensor.threadpool.prioritythreadpoolexecutor method)": [[56, "bittensor.threadpool.PriorityThreadPoolExecutor.shutdown", false]], "signature (bittensor.commands.utils.delegatesdetails attribute)": [[24, "bittensor.commands.utils.DelegatesDetails.signature", false]], "signature (bittensor.synapse.terminalinfo attribute)": [[54, "bittensor.synapse.TerminalInfo.signature", false]], "signature (bittensor.terminalinfo attribute)": [[44, "bittensor.TerminalInfo.signature", false]], "solution_queue (bittensor.utils.registration._solverbase attribute)": [[64, "bittensor.utils.registration._SolverBase.solution_queue", false]], "solve_cuda() (in module bittensor.utils._register_cuda)": [[58, "bittensor.utils._register_cuda.solve_cuda", false]], "ss58_address_to_bytes() (in module bittensor)": [[44, "bittensor.ss58_address_to_bytes", false]], "ss58_address_to_bytes() (in module bittensor.utils)": [[62, "bittensor.utils.ss58_address_to_bytes", false]], "ss58_to_vec_u8() (in module bittensor)": [[44, "bittensor.ss58_to_vec_u8", false]], "ss58_to_vec_u8() (in module bittensor.utils)": [[62, "bittensor.utils.ss58_to_vec_u8", false]], "stake (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.stake", false]], "stake (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.stake", false]], "stake (bittensor.chain_data.stakeinfo attribute)": [[6, "bittensor.chain_data.StakeInfo.stake", false]], "stake (bittensor.metagraph.metagraphmixin attribute)": [[46, "bittensor.metagraph.MetagraphMixin.stake", false]], "stake (bittensor.metagraph.nontorchmetagraph attribute)": [[46, "bittensor.metagraph.NonTorchMetagraph.stake", false]], "stake (bittensor.metagraph.torchmetagraph attribute)": [[46, "bittensor.metagraph.TorchMetaGraph.stake", false]], "stake (bittensor.mock.subtensor_mock.mocksubtensorstate attribute)": [[49, "bittensor.mock.subtensor_mock.MockSubtensorState.Stake", false]], "stake (bittensor.neuroninfo attribute)": [[44, "bittensor.NeuronInfo.stake", false]], "stake (bittensor.neuroninfolite attribute)": [[44, "bittensor.NeuronInfoLite.stake", false]], "stake (bittensor.stakeinfo attribute)": [[44, "bittensor.StakeInfo.stake", false]], "stake_dict (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.stake_dict", false]], "stake_dict (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.stake_dict", false]], "stake_dict (bittensor.neuroninfo attribute)": [[44, "bittensor.NeuronInfo.stake_dict", false]], "stake_dict (bittensor.neuroninfolite attribute)": [[44, "bittensor.NeuronInfoLite.stake_dict", false]], "stakecommand (class in bittensor.commands)": [[11, "bittensor.commands.StakeCommand", false]], "stakecommand (class in bittensor.commands.stake)": [[21, "bittensor.commands.stake.StakeCommand", false]], "stakeerror": [[30, "bittensor.errors.StakeError", false], [44, "bittensor.StakeError", false]], "stakeinfo (bittensor.chain_data.chaindatatype attribute)": [[6, "bittensor.chain_data.ChainDataType.StakeInfo", false]], "stakeinfo (class in bittensor)": [[44, "bittensor.StakeInfo", false]], "stakeinfo (class in bittensor.chain_data)": [[6, "bittensor.chain_data.StakeInfo", false]], "stakeshow (class in bittensor.commands)": [[11, "bittensor.commands.StakeShow", false]], "stakeshow (class in bittensor.commands.stake)": [[21, "bittensor.commands.stake.StakeShow", false]], "start() (bittensor.axon method)": [[44, "bittensor.axon.start", false]], "start() (bittensor.axon.axon method)": [[0, "bittensor.axon.axon.start", false]], "start() (bittensor.axon.fastapithreadedserver method)": [[0, "bittensor.axon.FastAPIThreadedServer.start", false]], "start() (bittensor.utils.registration.registrationstatisticslogger method)": [[64, "bittensor.utils.registration.RegistrationStatisticsLogger.start", false]], "start_time (bittensor.threadpool._workitem attribute)": [[56, "bittensor.threadpool._WorkItem.start_time", false]], "started (bittensor.axon attribute)": [[44, "bittensor.axon.started", false]], "started (bittensor.axon.axon attribute)": [[0, "bittensor.axon.axon.started", false]], "state_call() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.state_call", false], [44, "bittensor.subtensor.state_call", false]], "state_call() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.state_call", false]], "state_dict() (bittensor.metagraph.metagraphmixin method)": [[46, "bittensor.metagraph.MetagraphMixin.state_dict", false]], "status (bittensor.utils.registration.registrationstatisticslogger attribute)": [[64, "bittensor.utils.registration.RegistrationStatisticsLogger.status", false]], "status_code (bittensor.synapse.terminalinfo attribute)": [[54, "bittensor.synapse.TerminalInfo.status_code", false]], "status_code (bittensor.terminalinfo attribute)": [[44, "bittensor.TerminalInfo.status_code", false]], "status_message (bittensor.synapse.terminalinfo attribute)": [[54, "bittensor.synapse.TerminalInfo.status_message", false]], "status_message (bittensor.terminalinfo attribute)": [[44, "bittensor.TerminalInfo.status_message", false]], "stop() (bittensor.axon method)": [[44, "bittensor.axon.stop", false]], "stop() (bittensor.axon.axon method)": [[0, "bittensor.axon.axon.stop", false]], "stop() (bittensor.axon.fastapithreadedserver method)": [[0, "bittensor.axon.FastAPIThreadedServer.stop", false]], "stop() (bittensor.utils.registration.registrationstatisticslogger method)": [[64, "bittensor.utils.registration.RegistrationStatisticsLogger.stop", false]], "stopevent (bittensor.utils.registration._solverbase attribute)": [[64, "bittensor.utils.registration._SolverBase.stopEvent", false]], "stream_response() (bittensor.stream.streamingsynapse.btstreamingresponse method)": [[51, "bittensor.stream.StreamingSynapse.BTStreamingResponse.stream_response", false]], "stream_response() (bittensor.streamingsynapse.btstreamingresponse method)": [[44, "bittensor.StreamingSynapse.BTStreamingResponse.stream_response", false]], "streamingsynapse (class in bittensor)": [[44, "bittensor.StreamingSynapse", false]], "streamingsynapse (class in bittensor.stream)": [[51, "bittensor.stream.StreamingSynapse", false]], "streamingsynapse.btstreamingresponse (class in bittensor)": [[44, "bittensor.StreamingSynapse.BTStreamingResponse", false]], "streamingsynapse.btstreamingresponse (class in bittensor.stream)": [[51, "bittensor.stream.StreamingSynapse.BTStreamingResponse", false]], "strict (bittensor.config attribute)": [[44, "bittensor.config.strict", false]], "strict (bittensor.config.config attribute)": [[27, "bittensor.config.config.strict", false]], "strtobool() (in module bittensor)": [[44, "bittensor.strtobool", false]], "strtobool() (in module bittensor.utils)": [[62, "bittensor.utils.strtobool", false]], "strtobool_with_default() (in module bittensor)": [[44, "bittensor.strtobool_with_default", false]], "strtobool_with_default() (in module bittensor.utils)": [[62, "bittensor.utils.strtobool_with_default", false]], "submit() (bittensor.prioritythreadpoolexecutor method)": [[44, "bittensor.PriorityThreadPoolExecutor.submit", false]], "submit() (bittensor.threadpool.prioritythreadpoolexecutor method)": [[56, "bittensor.threadpool.PriorityThreadPoolExecutor.submit", false]], "subnet_exists() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.subnet_exists", false], [44, "bittensor.subtensor.subnet_exists", false]], "subnet_exists() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.subnet_exists", false]], "subnetgethyperparamscommand (class in bittensor.commands.network)": [[16, "bittensor.commands.network.SubnetGetHyperparamsCommand", false]], "subnethyperparameters (bittensor.chain_data.chaindatatype attribute)": [[6, "bittensor.chain_data.ChainDataType.SubnetHyperparameters", false]], "subnethyperparameters (class in bittensor)": [[44, "bittensor.SubnetHyperparameters", false]], "subnethyperparameters (class in bittensor.chain_data)": [[6, "bittensor.chain_data.SubnetHyperparameters", false]], "subnethyperparamscommand (class in bittensor.commands.network)": [[16, "bittensor.commands.network.SubnetHyperparamsCommand", false]], "subnetinfo (bittensor.chain_data.chaindatatype attribute)": [[6, "bittensor.chain_data.ChainDataType.SubnetInfo", false]], "subnetinfo (class in bittensor)": [[44, "bittensor.SubnetInfo", false]], "subnetinfo (class in bittensor.chain_data)": [[6, "bittensor.chain_data.SubnetInfo", false]], "subnetlistcommand (class in bittensor.commands.network)": [[16, "bittensor.commands.network.SubnetListCommand", false]], "subnetlockcostcommand (class in bittensor.commands.network)": [[16, "bittensor.commands.network.SubnetLockCostCommand", false]], "subnetsapi (class in bittensor)": [[44, "bittensor.SubnetsAPI", false]], "subnetsapi (class in bittensor.subnets)": [[52, "bittensor.subnets.SubnetsAPI", false]], "subnetsudocommand (class in bittensor.commands.network)": [[16, "bittensor.commands.network.SubnetSudoCommand", false]], "subnetwork_n (bittensor.chain_data.subnetinfo attribute)": [[6, "bittensor.chain_data.SubnetInfo.subnetwork_n", false]], "subnetwork_n (bittensor.subnetinfo attribute)": [[44, "bittensor.SubnetInfo.subnetwork_n", false]], "subnetwork_n() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.subnetwork_n", false], [44, "bittensor.subtensor.subnetwork_n", false]], "subnetwork_n() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.subnetwork_n", false]], "subtensor (class in bittensor)": [[44, "bittensor.Subtensor", false], [44, "bittensor.subtensor", false]], "subtensor (class in bittensor.subtensor)": [[53, "bittensor.subtensor.Subtensor", false]], "subtensor (in module bittensor.subtensor)": [[53, "bittensor.subtensor.subtensor", false]], "subtensormodule (bittensor.mock.subtensor_mock.mockchainstate attribute)": [[49, "bittensor.mock.subtensor_mock.MockChainState.SubtensorModule", false]], "success() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.success", false]], "success() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.success", false]], "success_level_num (in module bittensor.btlogging.format)": [[2, "bittensor.btlogging.format.SUCCESS_LEVEL_NUM", false]], "sudo_force_set_balance (bittensor.mock.mocksubtensor attribute)": [[47, "bittensor.mock.MockSubtensor.sudo_force_set_balance", false]], "sudo_force_set_balance (bittensor.mock.subtensor_mock.mocksubtensor attribute)": [[49, "bittensor.mock.subtensor_mock.MockSubtensor.sudo_force_set_balance", false]], "sudo_force_set_balance (bittensor.mocksubtensor attribute)": [[44, "bittensor.MockSubtensor.sudo_force_set_balance", false]], "swap_hotkey() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.swap_hotkey", false], [44, "bittensor.subtensor.swap_hotkey", false]], "swap_hotkey() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.swap_hotkey", false]], "swap_hotkey_extrinsic() (in module bittensor.extrinsics.registration)": [[36, "bittensor.extrinsics.registration.swap_hotkey_extrinsic", false]], "swaphotkeycommand (class in bittensor.commands)": [[11, "bittensor.commands.SwapHotkeyCommand", false]], "swaphotkeycommand (class in bittensor.commands.register)": [[18, "bittensor.commands.register.SwapHotkeyCommand", false]], "synapse (bittensor.errors.synapseexception attribute)": [[30, "bittensor.errors.SynapseException.synapse", false]], "synapse (bittensor.stream.streamingsynapse.btstreamingresponse attribute)": [[51, "bittensor.stream.StreamingSynapse.BTStreamingResponse.synapse", false]], "synapse (bittensor.streamingsynapse.btstreamingresponse attribute)": [[44, "bittensor.StreamingSynapse.BTStreamingResponse.synapse", false]], "synapse (class in bittensor)": [[44, "bittensor.Synapse", false]], "synapse (class in bittensor.synapse)": [[54, "bittensor.synapse.Synapse", false]], "synapse_history (bittensor.dendrite.dendritemixin attribute)": [[29, "bittensor.dendrite.DendriteMixin.synapse_history", false]], "synapse_to_response() (bittensor.axon.axonmiddleware class method)": [[0, "bittensor.axon.AxonMiddleware.synapse_to_response", false]], "synapsedendritenoneexception": [[30, "bittensor.errors.SynapseDendriteNoneException", false], [44, "bittensor.SynapseDendriteNoneException", false]], "synapseexception": [[30, "bittensor.errors.SynapseException", false]], "synapseparsingerror": [[30, "bittensor.errors.SynapseParsingError", false], [44, "bittensor.SynapseParsingError", false]], "sync() (bittensor.metagraph.metagraphmixin method)": [[46, "bittensor.metagraph.MetagraphMixin.sync", false]], "synergy_scaling_law_power() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.synergy_scaling_law_power", false], [44, "bittensor.subtensor.synergy_scaling_law_power", false]], "synergy_scaling_law_power() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.synergy_scaling_law_power", false]], "system (bittensor.mock.subtensor_mock.mockchainstate attribute)": [[49, "bittensor.mock.subtensor_mock.MockChainState.System", false]], "t (bittensor.metagraph.metagraphmixin property)": [[46, "bittensor.metagraph.MetagraphMixin.T", false]], "t (in module bittensor)": [[44, "bittensor.T", false]], "t (in module bittensor.config)": [[27, "bittensor.config.T", false]], "take (bittensor.chain_data.delegateinfo attribute)": [[6, "bittensor.chain_data.DelegateInfo.take", false]], "take (bittensor.chain_data.delegateinfolite attribute)": [[6, "bittensor.chain_data.DelegateInfoLite.take", false]], "take (bittensor.delegateinfo attribute)": [[44, "bittensor.DelegateInfo.take", false]], "takeerror": [[30, "bittensor.errors.TakeError", false]], "tao (bittensor.balance property)": [[44, "bittensor.Balance.tao", false]], "tao (bittensor.utils.balance.balance property)": [[60, "bittensor.utils.balance.Balance.tao", false]], "target_regs_per_interval (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.target_regs_per_interval", false]], "target_regs_per_interval (bittensor.subnethyperparameters attribute)": [[44, "bittensor.SubnetHyperparameters.target_regs_per_interval", false]], "tempo (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.tempo", false]], "tempo (bittensor.chain_data.subnetinfo attribute)": [[6, "bittensor.chain_data.SubnetInfo.tempo", false]], "tempo (bittensor.subnethyperparameters attribute)": [[44, "bittensor.SubnetHyperparameters.tempo", false]], "tempo (bittensor.subnetinfo attribute)": [[44, "bittensor.SubnetInfo.tempo", false]], "tempo() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.tempo", false], [44, "bittensor.subtensor.tempo", false]], "tempo() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.tempo", false]], "tensor (class in bittensor)": [[44, "bittensor.Tensor", false], [44, "bittensor.tensor", false]], "tensor (class in bittensor.tensor)": [[55, "bittensor.tensor.Tensor", false], [55, "bittensor.tensor.tensor", false]], "tensor() (bittensor.tensor method)": [[44, "bittensor.Tensor.tensor", false]], "tensor() (bittensor.tensor.tensor method)": [[55, "bittensor.tensor.Tensor.tensor", false]], "terminalinfo (class in bittensor)": [[44, "bittensor.TerminalInfo", false]], "terminalinfo (class in bittensor.synapse)": [[54, "bittensor.synapse.TerminalInfo", false]], "thread_pool (bittensor.axon attribute)": [[44, "bittensor.axon.thread_pool", false]], "thread_pool (bittensor.axon.axon attribute)": [[0, "bittensor.axon.axon.thread_pool", false]], "threshold (bittensor.chain_data.proposalvotedata attribute)": [[6, "bittensor.chain_data.ProposalVoteData.threshold", false]], "threshold (bittensor.proposalvotedata attribute)": [[44, "bittensor.ProposalVoteData.threshold", false]], "time_average (bittensor.utils.registration.registrationstatistics attribute)": [[64, "bittensor.utils.registration.RegistrationStatistics.time_average", false]], "time_spent (bittensor.utils.registration.registrationstatistics attribute)": [[64, "bittensor.utils.registration.RegistrationStatistics.time_spent", false]], "time_spent_total (bittensor.utils.registration.registrationstatistics attribute)": [[64, "bittensor.utils.registration.RegistrationStatistics.time_spent_total", false]], "timeout (bittensor.synapse attribute)": [[44, "bittensor.Synapse.timeout", false]], "timeout (bittensor.synapse.synapse attribute)": [[54, "bittensor.synapse.Synapse.timeout", false]], "to_headers() (bittensor.synapse method)": [[44, "bittensor.Synapse.to_headers", false], [44, "id13", false]], "to_headers() (bittensor.synapse.synapse method)": [[54, "bittensor.synapse.Synapse.to_headers", false], [54, "id3", false]], "to_parameter_dict() (bittensor.axoninfo method)": [[44, "bittensor.AxonInfo.to_parameter_dict", false]], "to_parameter_dict() (bittensor.chain_data.axoninfo method)": [[6, "bittensor.chain_data.AxonInfo.to_parameter_dict", false]], "to_parameter_dict() (bittensor.chain_data.ipinfo method)": [[6, "bittensor.chain_data.IPInfo.to_parameter_dict", false]], "to_parameter_dict() (bittensor.chain_data.subnethyperparameters method)": [[6, "bittensor.chain_data.SubnetHyperparameters.to_parameter_dict", false]], "to_parameter_dict() (bittensor.chain_data.subnetinfo method)": [[6, "bittensor.chain_data.SubnetInfo.to_parameter_dict", false]], "to_parameter_dict() (bittensor.ipinfo method)": [[44, "bittensor.IPInfo.to_parameter_dict", false]], "to_parameter_dict() (bittensor.subnethyperparameters method)": [[44, "bittensor.SubnetHyperparameters.to_parameter_dict", false]], "to_parameter_dict() (bittensor.subnetinfo method)": [[44, "bittensor.SubnetInfo.to_parameter_dict", false]], "to_string() (bittensor.axon method)": [[44, "bittensor.axon.to_string", false]], "to_string() (bittensor.axon.axon method)": [[0, "bittensor.axon.axon.to_string", false]], "to_string() (bittensor.axoninfo method)": [[44, "bittensor.AxonInfo.to_string", false]], "to_string() (bittensor.chain_data.axoninfo method)": [[6, "bittensor.chain_data.AxonInfo.to_string", false]], "to_string() (bittensor.config method)": [[44, "bittensor.config.to_string", false]], "to_string() (bittensor.config.config method)": [[27, "bittensor.config.config.to_string", false]], "token_streamer (bittensor.stream.btstreamingresponsemodel attribute)": [[51, "bittensor.stream.BTStreamingResponseModel.token_streamer", false]], "token_streamer (bittensor.stream.streamingsynapse.btstreamingresponse attribute)": [[51, "bittensor.stream.StreamingSynapse.BTStreamingResponse.token_streamer", false]], "token_streamer (bittensor.streamingsynapse.btstreamingresponse attribute)": [[44, "bittensor.StreamingSynapse.BTStreamingResponse.token_streamer", false]], "tolist() (bittensor.tensor method)": [[44, "bittensor.Tensor.tolist", false]], "tolist() (bittensor.tensor.tensor method)": [[55, "bittensor.tensor.Tensor.tolist", false]], "torch (bittensor.tensor.dtypes attribute)": [[55, "bittensor.tensor.DTypes.torch", false]], "torch (in module bittensor.utils)": [[62, "bittensor.utils.torch", false]], "torch (in module bittensor.utils.registration)": [[64, "bittensor.utils.registration.torch", false]], "torchmetagraph (class in bittensor.metagraph)": [[46, "bittensor.metagraph.TorchMetaGraph", false]], "total_daily_return (bittensor.chain_data.delegateinfo attribute)": [[6, "bittensor.chain_data.DelegateInfo.total_daily_return", false]], "total_daily_return (bittensor.chain_data.delegateinfolite attribute)": [[6, "bittensor.chain_data.DelegateInfoLite.total_daily_return", false]], "total_daily_return (bittensor.delegateinfo attribute)": [[44, "bittensor.DelegateInfo.total_daily_return", false]], "total_issuance() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.total_issuance", false], [44, "bittensor.subtensor.total_issuance", false]], "total_issuance() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.total_issuance", false]], "total_size (bittensor.synapse attribute)": [[44, "bittensor.Synapse.total_size", false]], "total_size (bittensor.synapse.synapse attribute)": [[54, "bittensor.synapse.Synapse.total_size", false]], "total_stake (bittensor.chain_data.delegateinfo attribute)": [[6, "bittensor.chain_data.DelegateInfo.total_stake", false]], "total_stake (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.total_stake", false]], "total_stake (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.total_stake", false]], "total_stake (bittensor.delegateinfo attribute)": [[44, "bittensor.DelegateInfo.total_stake", false]], "total_stake (bittensor.metagraph.metagraphmixin attribute)": [[46, "bittensor.metagraph.MetagraphMixin.total_stake", false]], "total_stake (bittensor.metagraph.nontorchmetagraph attribute)": [[46, "bittensor.metagraph.NonTorchMetagraph.total_stake", false]], "total_stake (bittensor.metagraph.torchmetagraph attribute)": [[46, "bittensor.metagraph.TorchMetaGraph.total_stake", false]], "total_stake (bittensor.neuroninfo attribute)": [[44, "bittensor.NeuronInfo.total_stake", false]], "total_stake (bittensor.neuroninfolite attribute)": [[44, "bittensor.NeuronInfoLite.total_stake", false]], "total_stake() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.total_stake", false], [44, "bittensor.subtensor.total_stake", false]], "total_stake() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.total_stake", false]], "tpb (bittensor.utils.registration._cudasolver attribute)": [[64, "bittensor.utils.registration._CUDASolver.tpb", false]], "trace (bittensor.btlogging.format.btstreamformatter attribute)": [[2, "bittensor.btlogging.format.BtStreamFormatter.trace", false]], "trace (bittensor.btlogging.loggingmachine attribute)": [[4, "bittensor.btlogging.LoggingMachine.Trace", false]], "trace (bittensor.btlogging.loggingmachine.loggingconfig attribute)": [[5, "bittensor.btlogging.loggingmachine.LoggingConfig.trace", false]], "trace (bittensor.btlogging.loggingmachine.loggingmachine attribute)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.Trace", false]], "trace() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.trace", false]], "trace() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.trace", false]], "trace() (in module bittensor)": [[44, "bittensor.trace", false]], "trace_level_num (in module bittensor.btlogging.format)": [[2, "bittensor.btlogging.format.TRACE_LEVEL_NUM", false]], "trace_log_format (in module bittensor.btlogging.defines)": [[1, "bittensor.btlogging.defines.TRACE_LOG_FORMAT", false]], "transfer() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.transfer", false], [44, "bittensor.subtensor.transfer", false]], "transfer() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.transfer", false]], "transfer_extrinsic() (in module bittensor.extrinsics.transfer)": [[42, "bittensor.extrinsics.transfer.transfer_extrinsic", false]], "transfercommand (class in bittensor.commands)": [[11, "bittensor.commands.TransferCommand", false]], "transfercommand (class in bittensor.commands.transfer)": [[22, "bittensor.commands.transfer.TransferCommand", false]], "transfererror": [[30, "bittensor.errors.TransferError", false], [44, "bittensor.TransferError", false]], "trust (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.trust", false]], "trust (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.trust", false]], "trust (bittensor.metagraph.metagraphmixin attribute)": [[46, "bittensor.metagraph.MetagraphMixin.trust", false]], "trust (bittensor.metagraph.nontorchmetagraph attribute)": [[46, "bittensor.metagraph.NonTorchMetagraph.trust", false]], "trust (bittensor.metagraph.torchmetagraph attribute)": [[46, "bittensor.metagraph.TorchMetaGraph.trust", false]], "trust (bittensor.neuroninfo attribute)": [[44, "bittensor.NeuronInfo.trust", false]], "trust (bittensor.neuroninfolite attribute)": [[44, "bittensor.NeuronInfoLite.trust", false]], "turn_console_off() (in module bittensor)": [[44, "bittensor.turn_console_off", false]], "turn_console_on() (in module bittensor)": [[44, "bittensor.turn_console_on", false]], "tv (bittensor.metagraph.metagraphmixin property)": [[46, "bittensor.metagraph.MetagraphMixin.Tv", false]], "tx_rate_limit() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.tx_rate_limit", false], [44, "bittensor.subtensor.tx_rate_limit", false]], "tx_rate_limit() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.tx_rate_limit", false]], "type (bittensor.subtensor.paramwithtypes attribute)": [[53, "bittensor.subtensor.ParamWithTypes.type", false]], "u16_max (in module bittensor.utils)": [[62, "bittensor.utils.U16_MAX", false]], "u16_max (in module bittensor.utils.weight_utils)": [[69, "bittensor.utils.weight_utils.U16_MAX", false]], "u16_normalized_float() (in module bittensor)": [[44, "bittensor.U16_NORMALIZED_FLOAT", false]], "u16_normalized_float() (in module bittensor.utils)": [[62, "bittensor.utils.U16_NORMALIZED_FLOAT", false]], "u16_to_float() (in module bittensor.utils.formatting)": [[61, "bittensor.utils.formatting.u16_to_float", false]], "u32_max (in module bittensor.utils.weight_utils)": [[69, "bittensor.utils.weight_utils.U32_MAX", false]], "u64_max (in module bittensor.utils)": [[62, "bittensor.utils.U64_MAX", false]], "u64_normalized_float() (in module bittensor)": [[44, "bittensor.U64_NORMALIZED_FLOAT", false]], "u64_normalized_float() (in module bittensor.utils)": [[62, "bittensor.utils.U64_NORMALIZED_FLOAT", false]], "u64_to_float() (in module bittensor.utils.formatting)": [[61, "bittensor.utils.formatting.u64_to_float", false]], "u8_key_to_ss58() (in module bittensor)": [[44, "bittensor.u8_key_to_ss58", false]], "u8_key_to_ss58() (in module bittensor.utils)": [[62, "bittensor.utils.u8_key_to_ss58", false]], "uid (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.uid", false]], "uid (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.uid", false]], "uid (bittensor.neuroninfo attribute)": [[44, "bittensor.NeuronInfo.uid", false]], "uid (bittensor.neuroninfolite attribute)": [[44, "bittensor.NeuronInfoLite.uid", false]], "uids (bittensor.metagraph.metagraphmixin attribute)": [[46, "bittensor.metagraph.MetagraphMixin.uids", false]], "uids (bittensor.metagraph.nontorchmetagraph attribute)": [[46, "bittensor.metagraph.NonTorchMetagraph.uids", false]], "uids (bittensor.metagraph.torchmetagraph attribute)": [[46, "bittensor.metagraph.TorchMetaGraph.uids", false]], "unbiased_topk() (in module bittensor)": [[44, "bittensor.unbiased_topk", false]], "unbiased_topk() (in module bittensor.utils)": [[62, "bittensor.utils.unbiased_topk", false]], "undelegate() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.undelegate", false], [44, "bittensor.subtensor.undelegate", false]], "undelegate() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.undelegate", false]], "undelegate_extrinsic() (in module bittensor.extrinsics.delegation)": [[32, "bittensor.extrinsics.delegation.undelegate_extrinsic", false]], "unit (bittensor.balance attribute)": [[44, "bittensor.Balance.unit", false]], "unit (bittensor.utils.balance.balance attribute)": [[60, "bittensor.utils.balance.Balance.unit", false]], "unknownsynapseerror": [[30, "bittensor.errors.UnknownSynapseError", false], [44, "bittensor.UnknownSynapseError", false]], "unstake() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.unstake", false], [44, "bittensor.subtensor.unstake", false]], "unstake() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.unstake", false]], "unstake_extrinsic() (in module bittensor.extrinsics.unstaking)": [[43, "bittensor.extrinsics.unstaking.unstake_extrinsic", false]], "unstake_multiple() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.unstake_multiple", false], [44, "bittensor.subtensor.unstake_multiple", false]], "unstake_multiple() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.unstake_multiple", false]], "unstake_multiple_extrinsic() (in module bittensor.extrinsics.unstaking)": [[43, "bittensor.extrinsics.unstaking.unstake_multiple_extrinsic", false]], "unstakecommand (class in bittensor.commands)": [[11, "bittensor.commands.UnStakeCommand", false]], "unstakecommand (class in bittensor.commands.unstake)": [[23, "bittensor.commands.unstake.UnStakeCommand", false]], "unstakeerror": [[30, "bittensor.errors.UnstakeError", false], [44, "bittensor.UnstakeError", false]], "update() (bittensor.utils.registration.registrationstatisticslogger method)": [[64, "bittensor.utils.registration.RegistrationStatisticsLogger.update", false]], "update_identity() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.update_identity", false], [44, "bittensor.subtensor.update_identity", false]], "update_identity() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.update_identity", false]], "update_interval (bittensor.utils.registration._solverbase attribute)": [[64, "bittensor.utils.registration._SolverBase.update_interval", false]], "update_with_kwargs() (bittensor.config method)": [[44, "bittensor.config.update_with_kwargs", false]], "update_with_kwargs() (bittensor.config.config method)": [[27, "bittensor.config.config.update_with_kwargs", false]], "updatecommand (class in bittensor.commands)": [[11, "bittensor.commands.UpdateCommand", false]], "updatecommand (class in bittensor.commands.misc)": [[15, "bittensor.commands.misc.UpdateCommand", false]], "updatewalletcommand (class in bittensor.commands)": [[11, "bittensor.commands.UpdateWalletCommand", false]], "updatewalletcommand (class in bittensor.commands.wallets)": [[25, "bittensor.commands.wallets.UpdateWalletCommand", false]], "url (bittensor.commands.utils.delegatesdetails attribute)": [[24, "bittensor.commands.utils.DelegatesDetails.url", false]], "use_torch() (in module bittensor.utils)": [[62, "bittensor.utils.use_torch", false]], "use_torch() (in module bittensor.utils.registration)": [[64, "bittensor.utils.registration.use_torch", false]], "uuid (bittensor.axon attribute)": [[44, "bittensor.axon.uuid", false]], "uuid (bittensor.axon.axon attribute)": [[0, "bittensor.axon.axon.uuid", false]], "uuid (bittensor.dendrite.dendritemixin attribute)": [[29, "bittensor.dendrite.DendriteMixin.uuid", false]], "uuid (bittensor.synapse.terminalinfo attribute)": [[54, "bittensor.synapse.TerminalInfo.uuid", false]], "uuid (bittensor.terminalinfo attribute)": [[44, "bittensor.TerminalInfo.uuid", false]], "v_7_2_0 (in module bittensor.constants)": [[28, "bittensor.constants.V_7_2_0", false]], "validate_password() (in module bittensor)": [[44, "bittensor.validate_password", false]], "validate_password() (in module bittensor.keyfile)": [[45, "bittensor.keyfile.validate_password", false]], "validator_batch_size() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.validator_batch_size", false], [44, "bittensor.subtensor.validator_batch_size", false]], "validator_batch_size() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.validator_batch_size", false]], "validator_epoch_length() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.validator_epoch_length", false], [44, "bittensor.subtensor.validator_epoch_length", false]], "validator_epoch_length() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.validator_epoch_length", false]], "validator_epochs_per_reset() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.validator_epochs_per_reset", false], [44, "bittensor.subtensor.validator_epochs_per_reset", false]], "validator_epochs_per_reset() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.validator_epochs_per_reset", false]], "validator_exclude_quantile() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.validator_exclude_quantile", false], [44, "bittensor.subtensor.validator_exclude_quantile", false]], "validator_exclude_quantile() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.validator_exclude_quantile", false]], "validator_logits_divergence() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.validator_logits_divergence", false], [44, "bittensor.subtensor.validator_logits_divergence", false]], "validator_logits_divergence() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.validator_logits_divergence", false]], "validator_permit (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.validator_permit", false]], "validator_permit (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.validator_permit", false]], "validator_permit (bittensor.metagraph.metagraphmixin attribute)": [[46, "bittensor.metagraph.MetagraphMixin.validator_permit", false]], "validator_permit (bittensor.metagraph.nontorchmetagraph attribute)": [[46, "bittensor.metagraph.NonTorchMetagraph.validator_permit", false]], "validator_permit (bittensor.metagraph.torchmetagraph attribute)": [[46, "bittensor.metagraph.TorchMetaGraph.validator_permit", false]], "validator_permit (bittensor.neuroninfo attribute)": [[44, "bittensor.NeuronInfo.validator_permit", false]], "validator_permit (bittensor.neuroninfolite attribute)": [[44, "bittensor.NeuronInfoLite.validator_permit", false]], "validator_permits (bittensor.chain_data.delegateinfo attribute)": [[6, "bittensor.chain_data.DelegateInfo.validator_permits", false]], "validator_permits (bittensor.chain_data.delegateinfolite attribute)": [[6, "bittensor.chain_data.DelegateInfoLite.validator_permits", false]], "validator_permits (bittensor.delegateinfo attribute)": [[44, "bittensor.DelegateInfo.validator_permits", false]], "validator_prune_len() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.validator_prune_len", false], [44, "bittensor.subtensor.validator_prune_len", false]], "validator_prune_len() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.validator_prune_len", false]], "validator_sequence_length() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.validator_sequence_length", false], [44, "bittensor.subtensor.validator_sequence_length", false]], "validator_sequence_length() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.validator_sequence_length", false]], "validator_trust (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.validator_trust", false]], "validator_trust (bittensor.chain_data.neuroninfolite attribute)": [[6, "bittensor.chain_data.NeuronInfoLite.validator_trust", false]], "validator_trust (bittensor.metagraph.metagraphmixin attribute)": [[46, "bittensor.metagraph.MetagraphMixin.validator_trust", false]], "validator_trust (bittensor.metagraph.nontorchmetagraph attribute)": [[46, "bittensor.metagraph.NonTorchMetagraph.validator_trust", false]], "validator_trust (bittensor.metagraph.torchmetagraph attribute)": [[46, "bittensor.metagraph.TorchMetaGraph.validator_trust", false]], "validator_trust (bittensor.neuroninfo attribute)": [[44, "bittensor.NeuronInfo.validator_trust", false]], "validator_trust (bittensor.neuroninfolite attribute)": [[44, "bittensor.NeuronInfoLite.validator_trust", false]], "validatorbatchsize (bittensor.mock.subtensor_mock.mocksubtensorstate attribute)": [[49, "bittensor.mock.subtensor_mock.MockSubtensorState.ValidatorBatchSize", false]], "value (bittensor.mock.subtensor_mock.mocksubtensorvalue attribute)": [[49, "bittensor.mock.subtensor_mock.MockSubtensorValue.value", false]], "verify() (bittensor.axon.axonmiddleware method)": [[0, "bittensor.axon.AxonMiddleware.verify", false]], "verify_body_integrity() (bittensor.axon method)": [[44, "bittensor.axon.verify_body_integrity", false]], "verify_body_integrity() (bittensor.axon.axon method)": [[0, "bittensor.axon.axon.verify_body_integrity", false]], "verify_fns (bittensor.axon attribute)": [[44, "bittensor.axon.verify_fns", false]], "verify_fns (bittensor.axon.axon attribute)": [[0, "bittensor.axon.axon.verify_fns", false]], "version (bittensor.axoninfo attribute)": [[44, "bittensor.AxonInfo.version", false]], "version (bittensor.chain_data.axoninfo attribute)": [[6, "bittensor.chain_data.AxonInfo.version", false]], "version (bittensor.chain_data.prometheusinfo attribute)": [[6, "bittensor.chain_data.PrometheusInfo.version", false]], "version (bittensor.metagraph.metagraphmixin attribute)": [[46, "bittensor.metagraph.MetagraphMixin.version", false]], "version (bittensor.metagraph.nontorchmetagraph attribute)": [[46, "bittensor.metagraph.NonTorchMetagraph.version", false]], "version (bittensor.metagraph.torchmetagraph attribute)": [[46, "bittensor.metagraph.TorchMetaGraph.version", false]], "version (bittensor.mock.subtensor_mock.axoninfodict attribute)": [[49, "bittensor.mock.subtensor_mock.AxonInfoDict.version", false]], "version (bittensor.mock.subtensor_mock.axonservecallparams attribute)": [[49, "bittensor.mock.subtensor_mock.AxonServeCallParams.version", false]], "version (bittensor.mock.subtensor_mock.prometheusinfodict attribute)": [[49, "bittensor.mock.subtensor_mock.PrometheusInfoDict.version", false]], "version (bittensor.mock.subtensor_mock.prometheusservecallparams attribute)": [[49, "bittensor.mock.subtensor_mock.PrometheusServeCallParams.version", false]], "version (bittensor.prometheusinfo attribute)": [[44, "bittensor.PrometheusInfo.version", false]], "version (bittensor.synapse.terminalinfo attribute)": [[54, "bittensor.synapse.TerminalInfo.version", false]], "version (bittensor.terminalinfo attribute)": [[44, "bittensor.TerminalInfo.version", false]], "version (bittensor.types.axonservecallparams attribute)": [[57, "bittensor.types.AxonServeCallParams.version", false]], "version (bittensor.types.prometheusservecallparams attribute)": [[57, "bittensor.types.PrometheusServeCallParams.version", false]], "version_check_threshold (in module bittensor.utils.version)": [[67, "bittensor.utils.version.VERSION_CHECK_THRESHOLD", false]], "version_checking() (in module bittensor)": [[44, "bittensor.version_checking", false]], "version_checking() (in module bittensor.utils)": [[62, "bittensor.utils.version_checking", false]], "version_checking() (in module bittensor.utils.version)": [[67, "bittensor.utils.version.version_checking", false]], "versioncheckerror": [[62, "bittensor.utils.VersionCheckError", false], [67, "bittensor.utils.version.VersionCheckError", false]], "vote_senate() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.vote_senate", false], [44, "bittensor.subtensor.vote_senate", false]], "vote_senate() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.vote_senate", false]], "vote_senate_extrinsic() (in module bittensor.extrinsics.senate)": [[38, "bittensor.extrinsics.senate.vote_senate_extrinsic", false]], "votecommand (class in bittensor.commands)": [[11, "bittensor.commands.VoteCommand", false]], "votecommand (class in bittensor.commands.senate)": [[20, "bittensor.commands.senate.VoteCommand", false]], "w (bittensor.metagraph.metagraphmixin property)": [[46, "bittensor.metagraph.MetagraphMixin.W", false]], "wallet (bittensor.axon attribute)": [[44, "bittensor.axon.wallet", false]], "wallet (bittensor.axon.axon attribute)": [[0, "bittensor.axon.axon.wallet", false]], "wallet (bittensor.subnets.subnetsapi attribute)": [[52, "bittensor.subnets.SubnetsAPI.wallet", false]], "wallet (bittensor.subnetsapi attribute)": [[44, "bittensor.SubnetsAPI.wallet", false]], "wallet (class in bittensor)": [[44, "bittensor.wallet", false]], "wallet (class in bittensor.wallet)": [[70, "bittensor.wallet.wallet", false]], "walletbalancecommand (class in bittensor.commands)": [[11, "bittensor.commands.WalletBalanceCommand", false]], "walletbalancecommand (class in bittensor.commands.wallets)": [[25, "bittensor.commands.wallets.WalletBalanceCommand", false]], "walletcreatecommand (class in bittensor.commands)": [[11, "bittensor.commands.WalletCreateCommand", false]], "walletcreatecommand (class in bittensor.commands.wallets)": [[25, "bittensor.commands.wallets.WalletCreateCommand", false]], "warning() (bittensor.btlogging.loggingmachine method)": [[4, "bittensor.btlogging.LoggingMachine.warning", false]], "warning() (bittensor.btlogging.loggingmachine.loggingmachine method)": [[5, "bittensor.btlogging.loggingmachine.LoggingMachine.warning", false]], "weights (bittensor.chain_data.neuroninfo attribute)": [[6, "bittensor.chain_data.NeuronInfo.weights", false]], "weights (bittensor.metagraph.metagraphmixin attribute)": [[46, "bittensor.metagraph.MetagraphMixin.weights", false]], "weights (bittensor.metagraph.nontorchmetagraph attribute)": [[46, "bittensor.metagraph.NonTorchMetagraph.weights", false]], "weights (bittensor.metagraph.torchmetagraph attribute)": [[46, "bittensor.metagraph.TorchMetaGraph.weights", false]], "weights (bittensor.neuroninfo attribute)": [[44, "bittensor.NeuronInfo.weights", false]], "weights() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.weights", false], [44, "bittensor.subtensor.weights", false]], "weights() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.weights", false]], "weights_rate_limit (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.weights_rate_limit", false]], "weights_rate_limit (bittensor.subnethyperparameters attribute)": [[44, "bittensor.SubnetHyperparameters.weights_rate_limit", false]], "weights_rate_limit() (bittensor.subtensor method)": [[44, "bittensor.Subtensor.weights_rate_limit", false], [44, "bittensor.subtensor.weights_rate_limit", false]], "weights_rate_limit() (bittensor.subtensor.subtensor method)": [[53, "bittensor.subtensor.Subtensor.weights_rate_limit", false]], "weights_version (bittensor.chain_data.subnethyperparameters attribute)": [[6, "bittensor.chain_data.SubnetHyperparameters.weights_version", false]], "weights_version (bittensor.subnethyperparameters attribute)": [[44, "bittensor.SubnetHyperparameters.weights_version", false]]}, "objects": {"": [[44, 0, 0, "-", "bittensor"]], "bittensor": [[44, 1, 1, "", "ALL_COMMANDS"], [44, 2, 1, "", "AxonInfo"], [44, 2, 1, "", "Balance"], [44, 6, 1, "", "BlacklistedException"], [44, 6, 1, "", "ChainConnectionError"], [44, 6, 1, "", "ChainError"], [44, 6, 1, "", "ChainQueryError"], [44, 6, 1, "", "ChainTransactionError"], [44, 2, 1, "", "DefaultConfig"], [44, 2, 1, "", "DelegateInfo"], [44, 2, 1, "", "IPInfo"], [44, 6, 1, "", "IdentityError"], [44, 6, 1, "", "InternalServerError"], [44, 6, 1, "", "InvalidConfigFile"], [44, 6, 1, "", "InvalidRequestNameError"], [44, 6, 1, "", "KeyFileError"], [44, 6, 1, "", "MetadataError"], [44, 2, 1, "", "MockKeyfile"], [44, 2, 1, "", "MockSubtensor"], [44, 2, 1, "", "MockWallet"], [44, 2, 1, "", "Mockkeyfile"], [44, 2, 1, "", "NeuronInfo"], [44, 2, 1, "", "NeuronInfoLite"], [44, 6, 1, "", "NominationError"], [44, 6, 1, "", "NotDelegateError"], [44, 6, 1, "", "NotRegisteredError"], [44, 6, 1, "", "NotVerifiedException"], [44, 6, 1, "", "PostProcessException"], [44, 6, 1, "", "PriorityException"], [44, 2, 1, "", "PriorityThreadPoolExecutor"], [44, 2, 1, "", "PrometheusInfo"], [44, 1, 1, "", "ProposalCallData"], [44, 2, 1, "", "ProposalVoteData"], [44, 6, 1, "", "RegistrationError"], [44, 6, 1, "", "RunException"], [44, 6, 1, "", "StakeError"], [44, 2, 1, "", "StakeInfo"], [44, 2, 1, "", "StreamingSynapse"], [44, 2, 1, "", "SubnetHyperparameters"], [44, 2, 1, "", "SubnetInfo"], [44, 2, 1, "", "SubnetsAPI"], [44, 2, 1, "", "Subtensor"], [44, 2, 1, "", "Synapse"], [44, 6, 1, "", "SynapseDendriteNoneException"], [44, 6, 1, "", "SynapseParsingError"], [44, 1, 1, "", "T"], [44, 2, 1, "", "Tensor"], [44, 2, 1, "", "TerminalInfo"], [44, 6, 1, "", "TransferError"], [44, 7, 1, "", "U16_NORMALIZED_FLOAT"], [44, 7, 1, "", "U64_NORMALIZED_FLOAT"], [44, 6, 1, "", "UnknownSynapseError"], [44, 6, 1, "", "UnstakeError"], [44, 1, 1, "", "__archive_entrypoint__"], [44, 1, 1, "", "__bellagene_entrypoint__"], [44, 1, 1, "", "__blocktime__"], [44, 1, 1, "", "__console__"], [44, 1, 1, "", "__delegates_details_url__"], [44, 1, 1, "", "__finney_entrypoint__"], [44, 1, 1, "", "__finney_test_entrypoint__"], [44, 7, 1, "", "__getattr__"], [44, 1, 1, "", "__local_entrypoint__"], [44, 1, 1, "", "__network_explorer_map__"], [44, 1, 1, "", "__networks__"], [44, 1, 1, "", "__new_signature_version__"], [44, 1, 1, "", "__pipaddress__"], [44, 1, 1, "", "__rao_symbol__"], [44, 1, 1, "", "__ss58_address_length__"], [44, 1, 1, "", "__ss58_format__"], [44, 1, 1, "", "__tao_symbol__"], [44, 1, 1, "", "__type_registry__"], [44, 1, 1, "", "__use_console__"], [44, 1, 1, "", "__version__"], [44, 1, 1, "", "__version_as_int__"], [44, 1, 1, "", "__version_info__"], [44, 1, 1, "", "_version_int_base"], [44, 1, 1, "", "_version_split"], [44, 7, 1, "", "ask_password_to_encrypt"], [44, 2, 1, "", "axon"], [0, 0, 0, "-", "axon"], [4, 0, 0, "-", "btlogging"], [6, 0, 0, "-", "chain_data"], [44, 2, 1, "", "cli"], [7, 0, 0, "-", "cli"], [11, 0, 0, "-", "commands"], [44, 2, 1, "", "config"], [27, 0, 0, "-", "config"], [44, 1, 1, "", "configs"], [28, 0, 0, "-", "constants"], [44, 7, 1, "", "debug"], [44, 7, 1, "", "decrypt_keyfile_data"], [44, 1, 1, "", "defaults"], [44, 2, 1, "", "dendrite"], [29, 0, 0, "-", "dendrite"], [44, 7, 1, "", "deserialize_keypair_from_keyfile_data"], [44, 7, 1, "", "display_mnemonic_msg"], [44, 7, 1, "", "encrypt_keyfile_data"], [30, 0, 0, "-", "errors"], [33, 0, 0, "-", "extrinsics"], [44, 7, 1, "", "get_coldkey_password_from_environment"], [44, 7, 1, "", "get_explorer_root_url_by_network_from_map"], [44, 7, 1, "", "get_explorer_url_for_network"], [44, 7, 1, "", "hash"], [45, 0, 0, "-", "keyfile"], [44, 7, 1, "", "keyfile_data_encryption_method"], [44, 7, 1, "", "keyfile_data_is_encrypted"], [44, 7, 1, "", "keyfile_data_is_encrypted_ansible"], [44, 7, 1, "", "keyfile_data_is_encrypted_legacy"], [44, 7, 1, "", "keyfile_data_is_encrypted_nacl"], [44, 7, 1, "", "legacy_encrypt_keyfile_data"], [44, 1, 1, "", "logging"], [46, 0, 0, "-", "metagraph"], [47, 0, 0, "-", "mock"], [44, 7, 1, "", "serialized_keypair_to_keyfile_data"], [44, 7, 1, "", "ss58_address_to_bytes"], [44, 7, 1, "", "ss58_to_vec_u8"], [51, 0, 0, "-", "stream"], [44, 7, 1, "", "strtobool"], [44, 7, 1, "", "strtobool_with_default"], [52, 0, 0, "-", "subnets"], [53, 0, 0, "-", "subtensor"], [54, 0, 0, "-", "synapse"], [55, 0, 0, "-", "tensor"], [56, 0, 0, "-", "threadpool"], [44, 7, 1, "", "trace"], [44, 7, 1, "", "turn_console_off"], [44, 7, 1, "", "turn_console_on"], [57, 0, 0, "-", "types"], [44, 7, 1, "", "u8_key_to_ss58"], [44, 7, 1, "", "unbiased_topk"], [62, 0, 0, "-", "utils"], [44, 7, 1, "", "validate_password"], [44, 7, 1, "", "version_checking"], [70, 0, 0, "-", "wallet"]], "bittensor.AxonInfo": [[44, 3, 1, "", "__eq__"], [44, 3, 1, "", "__repr__"], [44, 3, 1, "", "__str__"], [44, 4, 1, "", "coldkey"], [44, 3, 1, "", "from_neuron_info"], [44, 3, 1, "", "from_parameter_dict"], [44, 3, 1, "", "from_string"], [44, 4, 1, "", "hotkey"], [44, 4, 1, "", "ip"], [44, 3, 1, "", "ip_str"], [44, 4, 1, "", "ip_type"], [44, 5, 1, "", "is_serving"], [44, 4, 1, "", "placeholder1"], [44, 4, 1, "", "placeholder2"], [44, 4, 1, "", "port"], [44, 4, 1, "", "protocol"], [44, 3, 1, "", "to_parameter_dict"], [44, 3, 1, "", "to_string"], [44, 4, 1, "", "version"]], "bittensor.Balance": [[44, 3, 1, "", "__abs__"], [44, 3, 1, "", "__add__"], [44, 3, 1, "", "__eq__"], [44, 3, 1, "", "__float__"], [44, 3, 1, "", "__floordiv__"], [44, 3, 1, "", "__ge__"], [44, 3, 1, "", "__gt__"], [44, 3, 1, "", "__int__"], [44, 3, 1, "", "__le__"], [44, 3, 1, "", "__lt__"], [44, 3, 1, "", "__mul__"], [44, 3, 1, "", "__ne__"], [44, 3, 1, "", "__neg__"], [44, 3, 1, "", "__nonzero__"], [44, 3, 1, "", "__pos__"], [44, 3, 1, "", "__radd__"], [44, 3, 1, "", "__repr__"], [44, 3, 1, "", "__rfloordiv__"], [44, 3, 1, "", "__rich__"], [44, 3, 1, "", "__rich_rao__"], [44, 3, 1, "", "__rmul__"], [44, 3, 1, "", "__rsub__"], [44, 3, 1, "", "__rtruediv__"], [44, 3, 1, "", "__str__"], [44, 3, 1, "", "__str_rao__"], [44, 3, 1, "", "__sub__"], [44, 3, 1, "", "__truediv__"], [44, 3, 1, "", "from_float"], [44, 3, 1, "", "from_rao"], [44, 3, 1, "", "from_tao"], [44, 4, 1, "", "rao"], [44, 4, 1, "", "rao_unit"], [44, 5, 1, "", "tao"], [44, 4, 1, "", "unit"]], "bittensor.DefaultConfig": [[44, 3, 1, "", "default"]], "bittensor.DelegateInfo": [[44, 3, 1, "", "delegated_list_from_vec_u8"], [44, 3, 1, "", "fix_decoded_values"], [44, 3, 1, "", "from_vec_u8"], [44, 4, 1, "", "hotkey_ss58"], [44, 3, 1, "", "list_from_vec_u8"], [44, 4, 1, "", "nominators"], [44, 4, 1, "", "owner_ss58"], [44, 4, 1, "", "registrations"], [44, 4, 1, "", "return_per_1000"], [44, 4, 1, "", "take"], [44, 4, 1, "", "total_daily_return"], [44, 4, 1, "", "total_stake"], [44, 4, 1, "", "validator_permits"]], "bittensor.IPInfo": [[44, 3, 1, "", "encode"], [44, 3, 1, "", "fix_decoded_values"], [44, 3, 1, "", "from_parameter_dict"], [44, 3, 1, "", "from_vec_u8"], [44, 4, 1, "", "ip"], [44, 4, 1, "", "ip_type"], [44, 3, 1, "", "list_from_vec_u8"], [44, 4, 1, "", "protocol"], [44, 3, 1, "", "to_parameter_dict"]], "bittensor.MockKeyfile": [[44, 3, 1, "", "__repr__"], [44, 3, 1, "", "__str__"], [44, 4, 1, "", "_mock_data"], [44, 4, 1, "", "_mock_keypair"], [44, 5, 1, "", "data"], [44, 3, 1, "", "decrypt"], [44, 3, 1, "", "encrypt"], [44, 3, 1, "", "exists_on_device"], [44, 3, 1, "", "get_keypair"], [44, 3, 1, "", "is_encrypted"], [44, 3, 1, "", "is_readable"], [44, 3, 1, "", "is_writable"], [44, 5, 1, "", "keyfile_data"], [44, 5, 1, "", "keypair"], [44, 3, 1, "", "make_dirs"], [44, 3, 1, "", "set_keypair"]], "bittensor.MockSubtensor": [[44, 4, 1, "", "__dict__"], [44, 3, 1, "", "_convert_to_balance"], [44, 3, 1, "", "_do_burned_register"], [44, 3, 1, "", "_do_delegation"], [44, 3, 1, "", "_do_nominate"], [44, 3, 1, "", "_do_pow_register"], [44, 3, 1, "", "_do_serve_axon"], [44, 3, 1, "", "_do_serve_prometheus"], [44, 3, 1, "", "_do_set_weights"], [44, 3, 1, "", "_do_stake"], [44, 3, 1, "", "_do_transfer"], [44, 3, 1, "", "_do_undelegation"], [44, 3, 1, "", "_do_unstake"], [44, 3, 1, "", "_get_axon_info"], [44, 3, 1, "", "_get_most_recent_storage"], [44, 3, 1, "", "_get_prometheus_info"], [44, 3, 1, "", "_handle_type_default"], [44, 3, 1, "", "_neuron_subnet_exists"], [44, 3, 1, "", "_register_neuron"], [44, 4, 1, "", "block_number"], [44, 4, 1, "", "chain_state"], [44, 3, 1, "", "commit"], [44, 3, 1, "", "create_subnet"], [44, 3, 1, "", "do_block_step"], [44, 3, 1, "", "force_register_neuron"], [44, 3, 1, "", "force_set_balance"], [44, 3, 1, "", "get_all_subnets_info"], [44, 3, 1, "", "get_balance"], [44, 3, 1, "", "get_balances"], [44, 3, 1, "", "get_block_hash"], [44, 3, 1, "", "get_commitment"], [44, 3, 1, "", "get_current_block"], [44, 3, 1, "", "get_delegate_by_hotkey"], [44, 3, 1, "", "get_delegated"], [44, 3, 1, "", "get_delegates"], [44, 3, 1, "", "get_minimum_required_stake"], [44, 3, 1, "", "get_subnet_info"], [44, 3, 1, "", "get_transfer_fee"], [44, 3, 1, "", "min_required_stake"], [44, 3, 1, "", "neuron_for_uid"], [44, 3, 1, "", "neuron_for_uid_lite"], [44, 3, 1, "", "neurons"], [44, 3, 1, "", "neurons_lite"], [44, 3, 1, "", "query_constant"], [44, 3, 1, "", "query_map_subtensor"], [44, 3, 1, "", "query_subtensor"], [44, 3, 1, "", "reset"], [44, 3, 1, "", "set_difficulty"], [44, 3, 1, "", "setup"], [44, 4, 1, "", "sudo_force_set_balance"]], "bittensor.MockWallet": [[44, 4, 1, "", "_is_mock"], [44, 4, 1, "", "_mocked_coldkey_keyfile"], [44, 4, 1, "", "_mocked_hotkey_keyfile"], [44, 5, 1, "", "coldkey_file"], [44, 5, 1, "", "coldkeypub_file"], [44, 5, 1, "", "hotkey_file"]], "bittensor.Mockkeyfile": [[44, 3, 1, "", "__repr__"], [44, 3, 1, "", "__str__"], [44, 4, 1, "", "_mock_data"], [44, 4, 1, "", "_mock_keypair"], [44, 3, 1, "", "check_and_update_encryption"], [44, 5, 1, "", "data"], [44, 3, 1, "", "decrypt"], [44, 3, 1, "", "encrypt"], [44, 3, 1, "", "exists_on_device"], [44, 3, 1, "", "get_keypair"], [44, 3, 1, "", "is_encrypted"], [44, 3, 1, "", "is_readable"], [44, 3, 1, "", "is_writable"], [44, 5, 1, "", "keypair"], [44, 3, 1, "", "make_dirs"], [44, 4, 1, "", "path"], [44, 3, 1, "", "set_keypair"]], "bittensor.NeuronInfo": [[44, 4, 1, "", "active"], [44, 4, 1, "", "axon_info"], [44, 4, 1, "", "bonds"], [44, 4, 1, "", "coldkey"], [44, 4, 1, "", "consensus"], [44, 4, 1, "", "dividends"], [44, 4, 1, "", "emission"], [44, 3, 1, "", "fix_decoded_values"], [44, 3, 1, "", "from_vec_u8"], [44, 3, 1, "", "from_weights_bonds_and_neuron_lite"], [44, 3, 1, "", "get_null_neuron"], [44, 4, 1, "", "hotkey"], [44, 4, 1, "", "incentive"], [44, 4, 1, "", "is_null"], [44, 4, 1, "", "last_update"], [44, 3, 1, "", "list_from_vec_u8"], [44, 4, 1, "", "netuid"], [44, 4, 1, "", "prometheus_info"], [44, 4, 1, "", "pruning_score"], [44, 4, 1, "", "rank"], [44, 4, 1, "", "stake"], [44, 4, 1, "", "stake_dict"], [44, 4, 1, "", "total_stake"], [44, 4, 1, "", "trust"], [44, 4, 1, "", "uid"], [44, 4, 1, "", "validator_permit"], [44, 4, 1, "", "validator_trust"], [44, 4, 1, "", "weights"]], "bittensor.NeuronInfoLite": [[44, 4, 1, "", "active"], [44, 4, 1, "", "axon_info"], [44, 4, 1, "", "coldkey"], [44, 4, 1, "", "consensus"], [44, 4, 1, "", "dividends"], [44, 4, 1, "", "emission"], [44, 3, 1, "", "fix_decoded_values"], [44, 3, 1, "", "from_vec_u8"], [44, 3, 1, "", "get_null_neuron"], [44, 4, 1, "", "hotkey"], [44, 4, 1, "", "incentive"], [44, 4, 1, "", "is_null"], [44, 4, 1, "", "last_update"], [44, 3, 1, "", "list_from_vec_u8"], [44, 4, 1, "", "netuid"], [44, 4, 1, "", "prometheus_info"], [44, 4, 1, "", "pruning_score"], [44, 4, 1, "", "rank"], [44, 4, 1, "", "stake"], [44, 4, 1, "", "stake_dict"], [44, 4, 1, "", "total_stake"], [44, 4, 1, "", "trust"], [44, 4, 1, "", "uid"], [44, 4, 1, "", "validator_permit"], [44, 4, 1, "", "validator_trust"]], "bittensor.PriorityThreadPoolExecutor": [[44, 3, 1, "", "_adjust_thread_count"], [44, 4, 1, "", "_broken"], [44, 4, 1, "", "_counter"], [44, 4, 1, "", "_idle_semaphore"], [44, 4, 1, "", "_initargs"], [44, 4, 1, "", "_initializer"], [44, 3, 1, "", "_initializer_failed"], [44, 4, 1, "", "_max_workers"], [44, 4, 1, "", "_shutdown"], [44, 4, 1, "", "_shutdown_lock"], [44, 4, 1, "", "_thread_name_prefix"], [44, 4, 1, "", "_threads"], [44, 4, 1, "", "_work_queue"], [44, 3, 1, "", "add_args"], [44, 3, 1, "", "config"], [44, 5, 1, "", "is_empty"], [44, 3, 1, "", "shutdown"], [44, 3, 1, "", "submit"]], "bittensor.PrometheusInfo": [[44, 4, 1, "", "block"], [44, 3, 1, "", "fix_decoded_values"], [44, 4, 1, "", "ip"], [44, 4, 1, "", "ip_type"], [44, 4, 1, "", "port"], [44, 4, 1, "", "version"]], "bittensor.ProposalVoteData": [[44, 4, 1, "", "ayes"], [44, 4, 1, "", "end"], [44, 4, 1, "", "index"], [44, 4, 1, "", "nays"], [44, 4, 1, "", "threshold"]], "bittensor.StakeInfo": [[44, 4, 1, "", "coldkey_ss58"], [44, 3, 1, "", "fix_decoded_values"], [44, 3, 1, "", "from_vec_u8"], [44, 4, 1, "", "hotkey_ss58"], [44, 3, 1, "", "list_from_vec_u8"], [44, 3, 1, "", "list_of_tuple_from_vec_u8"], [44, 4, 1, "", "stake"]], "bittensor.StreamingSynapse": [[44, 2, 1, "", "BTStreamingResponse"], [44, 3, 1, "", "create_streaming_response"], [44, 3, 1, "", "extract_response_json"], [44, 4, 1, "", "model_config"], [44, 3, 1, "", "process_streaming_response"]], "bittensor.StreamingSynapse.BTStreamingResponse": [[44, 3, 1, "", "__call__"], [44, 3, 1, "", "stream_response"], [44, 4, 1, "", "synapse"], [44, 4, 1, "", "token_streamer"]], "bittensor.SubnetHyperparameters": [[44, 4, 1, "", "activity_cutoff"], [44, 4, 1, "", "adjustment_alpha"], [44, 4, 1, "", "adjustment_interval"], [44, 4, 1, "", "alpha_high"], [44, 4, 1, "", "alpha_low"], [44, 4, 1, "", "bonds_moving_avg"], [44, 4, 1, "", "commit_reveal_weights_enabled"], [44, 4, 1, "", "commit_reveal_weights_interval"], [44, 4, 1, "", "difficulty"], [44, 3, 1, "", "fix_decoded_values"], [44, 3, 1, "", "from_parameter_dict"], [44, 3, 1, "", "from_vec_u8"], [44, 4, 1, "", "immunity_period"], [44, 4, 1, "", "kappa"], [44, 4, 1, "", "liquid_alpha_enabled"], [44, 3, 1, "", "list_from_vec_u8"], [44, 4, 1, "", "max_burn"], [44, 4, 1, "", "max_difficulty"], [44, 4, 1, "", "max_regs_per_block"], [44, 4, 1, "", "max_validators"], [44, 4, 1, "", "max_weight_limit"], [44, 4, 1, "", "min_allowed_weights"], [44, 4, 1, "", "min_burn"], [44, 4, 1, "", "min_difficulty"], [44, 4, 1, "", "registration_allowed"], [44, 4, 1, "", "rho"], [44, 4, 1, "", "serving_rate_limit"], [44, 4, 1, "", "target_regs_per_interval"], [44, 4, 1, "", "tempo"], [44, 3, 1, "", "to_parameter_dict"], [44, 4, 1, "", "weights_rate_limit"], [44, 4, 1, "", "weights_version"]], "bittensor.SubnetInfo": [[44, 4, 1, "", "blocks_since_epoch"], [44, 4, 1, "", "burn"], [44, 4, 1, "", "connection_requirements"], [44, 4, 1, "", "difficulty"], [44, 4, 1, "", "emission_value"], [44, 3, 1, "", "fix_decoded_values"], [44, 3, 1, "", "from_parameter_dict"], [44, 3, 1, "", "from_vec_u8"], [44, 4, 1, "", "immunity_period"], [44, 4, 1, "", "kappa"], [44, 3, 1, "", "list_from_vec_u8"], [44, 4, 1, "", "max_allowed_validators"], [44, 4, 1, "", "max_n"], [44, 4, 1, "", "max_weight_limit"], [44, 4, 1, "", "min_allowed_weights"], [44, 4, 1, "", "modality"], [44, 4, 1, "", "netuid"], [44, 4, 1, "", "owner_ss58"], [44, 4, 1, "", "rho"], [44, 4, 1, "", "scaling_law_power"], [44, 4, 1, "", "subnetwork_n"], [44, 4, 1, "", "tempo"], [44, 3, 1, "", "to_parameter_dict"]], "bittensor.SubnetsAPI": [[44, 3, 1, "", "__call__"], [44, 4, 1, "", "dendrite"], [44, 3, 1, "", "prepare_synapse"], [44, 3, 1, "", "process_responses"], [44, 3, 1, "", "query_api"], [44, 4, 1, "", "wallet"]], "bittensor.Subtensor": [[44, 3, 1, "", "__repr__"], [44, 3, 1, "", "__str__"], [44, 4, 1, "", "_connection_timeout"], [44, 3, 1, "", "_do_associate_ips"], [44, 3, 1, "", "_do_burned_register"], [44, 3, 1, "", "_do_commit_weights"], [44, 3, 1, "", "_do_decrease_take"], [44, 3, 1, "", "_do_delegation"], [44, 3, 1, "", "_do_increase_take"], [44, 3, 1, "", "_do_nominate"], [44, 3, 1, "", "_do_pow_register"], [44, 3, 1, "", "_do_reveal_weights"], [44, 3, 1, "", "_do_root_register"], [44, 3, 1, "", "_do_serve_axon"], [44, 3, 1, "", "_do_serve_prometheus"], [44, 3, 1, "", "_do_set_childkey_take"], [44, 3, 1, "", "_do_set_children"], [44, 3, 1, "", "_do_set_root_weights"], [44, 3, 1, "", "_do_set_weights"], [44, 3, 1, "", "_do_stake"], [44, 3, 1, "", "_do_swap_hotkey"], [44, 3, 1, "", "_do_transfer"], [44, 3, 1, "", "_do_undelegation"], [44, 3, 1, "", "_do_unstake"], [44, 3, 1, "", "_encode_params"], [44, 3, 1, "", "_get_hyperparameter"], [44, 3, 1, "", "_get_substrate"], [44, 3, 1, "", "_null_neuron"], [44, 4, 1, "", "_subtensor_errors"], [44, 3, 1, "", "add_args"], [44, 3, 1, "", "add_stake"], [44, 3, 1, "", "add_stake_multiple"], [44, 3, 1, "", "adjustment_alpha"], [44, 5, 1, "", "block"], [44, 3, 1, "", "blocks_since_epoch"], [44, 3, 1, "", "blocks_since_last_update"], [44, 3, 1, "", "bonds"], [44, 3, 1, "", "bonds_moving_avg"], [44, 3, 1, "", "burned_register"], [44, 3, 1, "", "check_in_arbitration"], [44, 3, 1, "", "close"], [44, 3, 1, "", "commit"], [44, 3, 1, "", "commit_weights"], [44, 4, 1, "", "config"], [44, 3, 1, "", "delegate"], [44, 3, 1, "", "determine_chain_endpoint_and_network"], [44, 3, 1, "", "difficulty"], [44, 3, 1, "", "does_hotkey_exist"], [44, 3, 1, "", "get_all_neurons_for_pubkey"], [44, 3, 1, "", "get_all_subnet_netuids"], [44, 3, 1, "", "get_all_subnets_info"], [44, 3, 1, "", "get_all_uids_for_hotkey"], [44, 3, 1, "", "get_axon_info"], [44, 3, 1, "", "get_balance"], [44, 3, 1, "", "get_balances"], [44, 3, 1, "", "get_block_hash"], [44, 3, 1, "", "get_childkey_take"], [44, 3, 1, "", "get_children"], [44, 3, 1, "", "get_commitment"], [44, 3, 1, "", "get_current_block"], [44, 3, 1, "", "get_delegate_by_hotkey"], [44, 3, 1, "", "get_delegate_take"], [44, 3, 1, "", "get_delegated"], [44, 3, 1, "", "get_delegates"], [44, 3, 1, "", "get_delegates_lite"], [44, 3, 1, "", "get_emission_value_by_subnet"], [44, 3, 1, "", "get_error_info_by_index"], [44, 3, 1, "", "get_existential_deposit"], [44, 3, 1, "", "get_hotkey_owner"], [44, 3, 1, "", "get_minimum_required_stake"], [44, 3, 1, "", "get_netuids_for_hotkey"], [44, 3, 1, "", "get_neuron_for_pubkey_and_subnet"], [44, 3, 1, "", "get_nominators_for_hotkey"], [44, 3, 1, "", "get_parents"], [44, 3, 1, "", "get_prometheus_info"], [44, 3, 1, "", "get_proposal_call_data"], [44, 3, 1, "", "get_proposal_hashes"], [44, 4, 1, "", "get_proposal_vote_data"], [44, 3, 1, "", "get_proposals"], [44, 3, 1, "", "get_remaining_arbitration_period"], [44, 3, 1, "", "get_senate_members"], [44, 3, 1, "", "get_stake"], [44, 3, 1, "", "get_stake_for_coldkey_and_hotkey"], [44, 3, 1, "", "get_stake_info_for_coldkey"], [44, 3, 1, "", "get_stake_info_for_coldkeys"], [44, 3, 1, "", "get_subnet_burn_cost"], [44, 3, 1, "", "get_subnet_connection_requirement"], [44, 3, 1, "", "get_subnet_connection_requirements"], [44, 3, 1, "", "get_subnet_hyperparameters"], [44, 3, 1, "", "get_subnet_info"], [44, 3, 1, "", "get_subnet_modality"], [44, 3, 1, "", "get_subnet_owner"], [44, 3, 1, "", "get_subnets"], [44, 3, 1, "", "get_total_stake_for_coldkey"], [44, 3, 1, "", "get_total_stake_for_hotkey"], [44, 3, 1, "", "get_total_subnets"], [44, 3, 1, "", "get_transfer_fee"], [44, 3, 1, "", "get_uid_for_hotkey_on_subnet"], [44, 3, 1, "", "get_vote_data"], [44, 3, 1, "", "help"], [44, 3, 1, "", "immunity_period"], [44, 3, 1, "", "incentive"], [44, 3, 1, "", "is_hotkey_delegate"], [44, 3, 1, "", "is_hotkey_registered"], [44, 3, 1, "", "is_hotkey_registered_any"], [44, 3, 1, "", "is_hotkey_registered_on_subnet"], [44, 3, 1, "", "is_senate_member"], [44, 3, 1, "", "kappa"], [44, 3, 1, "", "leave_senate"], [44, 4, 1, "", "log_verbose"], [44, 3, 1, "", "max_allowed_validators"], [44, 3, 1, "", "max_n"], [44, 3, 1, "", "max_weight_limit"], [44, 3, 1, "", "metagraph"], [44, 3, 1, "", "min_allowed_weights"], [44, 3, 1, "", "neuron_for_uid"], [44, 3, 1, "", "neuron_for_uid_lite"], [44, 3, 1, "", "neuron_for_wallet"], [44, 3, 1, "", "neuron_has_validator_permit"], [44, 3, 1, "", "neurons"], [44, 3, 1, "", "neurons_lite"], [44, 3, 1, "", "nominate"], [44, 3, 1, "", "query_constant"], [44, 3, 1, "", "query_identity"], [44, 3, 1, "", "query_map"], [44, 3, 1, "", "query_map_subtensor"], [44, 3, 1, "", "query_module"], [44, 3, 1, "", "query_runtime_api"], [44, 3, 1, "", "query_subtensor"], [44, 3, 1, "", "recycle"], [44, 3, 1, "", "register"], [44, 3, 1, "", "register_senate"], [44, 3, 1, "", "register_subnetwork"], [44, 3, 1, "", "reveal_weights"], [44, 3, 1, "", "rho"], [44, 3, 1, "", "root_register"], [44, 3, 1, "", "root_set_weights"], [44, 3, 1, "", "run_faucet"], [44, 3, 1, "", "scaling_law_power"], [44, 3, 1, "", "send_extrinsic"], [44, 3, 1, "", "serve"], [44, 3, 1, "", "serve_axon"], [44, 3, 1, "", "serve_prometheus"], [44, 3, 1, "", "serving_rate_limit"], [44, 3, 1, "", "set_childkey_take"], [44, 3, 1, "", "set_children"], [44, 3, 1, "", "set_hyperparameter"], [44, 3, 1, "", "set_take"], [44, 3, 1, "", "set_weights"], [44, 3, 1, "", "setup_config"], [44, 3, 1, "", "state_call"], [44, 3, 1, "", "subnet_exists"], [44, 3, 1, "", "subnetwork_n"], [44, 3, 1, "", "swap_hotkey"], [44, 3, 1, "", "synergy_scaling_law_power"], [44, 3, 1, "", "tempo"], [44, 3, 1, "", "total_issuance"], [44, 3, 1, "", "total_stake"], [44, 3, 1, "", "transfer"], [44, 3, 1, "", "tx_rate_limit"], [44, 3, 1, "", "undelegate"], [44, 3, 1, "", "unstake"], [44, 3, 1, "", "unstake_multiple"], [44, 3, 1, "", "update_identity"], [44, 3, 1, "", "validator_batch_size"], [44, 3, 1, "", "validator_epoch_length"], [44, 3, 1, "", "validator_epochs_per_reset"], [44, 3, 1, "", "validator_exclude_quantile"], [44, 3, 1, "", "validator_logits_divergence"], [44, 3, 1, "", "validator_prune_len"], [44, 3, 1, "", "validator_sequence_length"], [44, 3, 1, "", "vote_senate"], [44, 3, 1, "", "weights"], [44, 3, 1, "", "weights_rate_limit"]], "bittensor.Synapse": [[44, 3, 1, "id11", "__setattr__"], [44, 4, 1, "", "_extract_header_size"], [44, 4, 1, "", "_extract_timeout"], [44, 4, 1, "", "_extract_total_size"], [44, 3, 1, "", "_get_cached_model_json_schema"], [44, 4, 1, "", "_model_json_schema"], [44, 4, 1, "", "axon"], [44, 5, 1, "id14", "body_hash"], [44, 4, 1, "", "computed_body_hash"], [44, 4, 1, "", "dendrite"], [44, 3, 1, "id0", "deserialize"], [44, 5, 1, "", "failed_verification"], [44, 3, 1, "id16", "from_headers"], [44, 3, 1, "", "get_required_fields"], [44, 3, 1, "id12", "get_total_size"], [44, 4, 1, "", "header_size"], [44, 5, 1, "", "is_blacklist"], [44, 5, 1, "", "is_failure"], [44, 5, 1, "", "is_success"], [44, 5, 1, "", "is_timeout"], [44, 4, 1, "", "model_config"], [44, 4, 1, "", "name"], [44, 3, 1, "id15", "parse_headers_to_inputs"], [44, 4, 1, "", "required_hash_fields"], [44, 3, 1, "", "set_name_type"], [44, 4, 1, "", "timeout"], [44, 3, 1, "id13", "to_headers"], [44, 4, 1, "", "total_size"]], "bittensor.SynapseDendriteNoneException": [[44, 4, 1, "", "message"]], "bittensor.Tensor": [[44, 4, 1, "", "_extract_dtype"], [44, 4, 1, "", "_extract_shape"], [44, 4, 1, "", "buffer"], [44, 3, 1, "", "deserialize"], [44, 4, 1, "", "dtype"], [44, 4, 1, "", "model_config"], [44, 3, 1, "", "numpy"], [44, 3, 1, "", "serialize"], [44, 4, 1, "", "shape"], [44, 3, 1, "", "tensor"], [44, 3, 1, "", "tolist"]], "bittensor.TerminalInfo": [[44, 4, 1, "", "_extract_nonce"], [44, 4, 1, "", "_extract_port"], [44, 4, 1, "", "_extract_process_time"], [44, 4, 1, "", "_extract_status_code"], [44, 4, 1, "", "_extract_version"], [44, 4, 1, "", "hotkey"], [44, 4, 1, "", "ip"], [44, 4, 1, "", "model_config"], [44, 4, 1, "", "nonce"], [44, 4, 1, "", "port"], [44, 4, 1, "", "process_time"], [44, 4, 1, "", "signature"], [44, 4, 1, "", "status_code"], [44, 4, 1, "", "status_message"], [44, 4, 1, "", "uuid"], [44, 4, 1, "", "version"]], "bittensor.axon": [[0, 2, 1, "", "AxonMiddleware"], [0, 2, 1, "", "FastAPIThreadedServer"], [44, 3, 1, "", "__del__"], [44, 3, 1, "", "__repr__"], [44, 3, 1, "", "__str__"], [44, 3, 1, "", "add_args"], [44, 4, 1, "", "app"], [44, 3, 1, "", "attach"], [0, 2, 1, "", "axon"], [44, 4, 1, "", "blacklist_fns"], [44, 3, 1, "", "check_config"], [44, 4, 1, "", "config"], [0, 7, 1, "", "create_error_response"], [44, 3, 1, "", "default_verify"], [44, 4, 1, "", "external_ip"], [44, 4, 1, "", "external_port"], [44, 4, 1, "", "fast_config"], [44, 4, 1, "", "fast_server"], [44, 4, 1, "", "forward_class_types"], [44, 4, 1, "", "forward_fns"], [44, 4, 1, "", "full_address"], [44, 3, 1, "", "help"], [44, 3, 1, "", "info"], [44, 4, 1, "", "ip"], [0, 7, 1, "", "log_and_handle_error"], [44, 4, 1, "", "log_level"], [44, 4, 1, "", "max_workers"], [44, 4, 1, "", "middleware_cls"], [44, 4, 1, "", "nonces"], [44, 4, 1, "", "port"], [44, 4, 1, "", "priority_fns"], [44, 4, 1, "", "router"], [44, 3, 1, "", "serve"], [44, 3, 1, "", "start"], [44, 4, 1, "", "started"], [44, 3, 1, "", "stop"], [44, 4, 1, "", "thread_pool"], [44, 3, 1, "", "to_string"], [44, 4, 1, "", "uuid"], [44, 3, 1, "", "verify_body_integrity"], [44, 4, 1, "", "verify_fns"], [44, 4, 1, "", "wallet"]], "bittensor.axon.AxonMiddleware": [[0, 4, 1, "", "axon"], [0, 3, 1, "", "blacklist"], [0, 3, 1, "", "dispatch"], [0, 3, 1, "", "preprocess"], [0, 3, 1, "", "priority"], [0, 3, 1, "", "run"], [0, 3, 1, "", "synapse_to_response"], [0, 3, 1, "", "verify"]], "bittensor.axon.FastAPIThreadedServer": [[0, 3, 1, "", "_wrapper_run"], [0, 3, 1, "", "install_signal_handlers"], [0, 4, 1, "", "is_running"], [0, 3, 1, "", "run_in_thread"], [0, 4, 1, "", "should_exit"], [0, 3, 1, "", "start"], [0, 3, 1, "", "stop"]], "bittensor.axon.axon": [[0, 3, 1, "", "__del__"], [0, 3, 1, "", "__repr__"], [0, 3, 1, "", "__str__"], [0, 3, 1, "", "add_args"], [0, 4, 1, "", "app"], [0, 3, 1, "", "attach"], [0, 4, 1, "", "blacklist_fns"], [0, 3, 1, "", "check_config"], [0, 4, 1, "", "config"], [0, 3, 1, "", "default_verify"], [0, 4, 1, "", "external_ip"], [0, 4, 1, "", "external_port"], [0, 4, 1, "", "fast_config"], [0, 4, 1, "", "fast_server"], [0, 4, 1, "", "forward_class_types"], [0, 4, 1, "", "forward_fns"], [0, 4, 1, "", "full_address"], [0, 3, 1, "", "help"], [0, 3, 1, "", "info"], [0, 4, 1, "", "ip"], [0, 4, 1, "", "log_level"], [0, 4, 1, "", "max_workers"], [0, 4, 1, "", "middleware_cls"], [0, 4, 1, "", "nonces"], [0, 4, 1, "", "port"], [0, 4, 1, "", "priority_fns"], [0, 4, 1, "", "router"], [0, 3, 1, "", "serve"], [0, 3, 1, "", "start"], [0, 4, 1, "", "started"], [0, 3, 1, "", "stop"], [0, 4, 1, "", "thread_pool"], [0, 3, 1, "", "to_string"], [0, 4, 1, "", "uuid"], [0, 3, 1, "", "verify_body_integrity"], [0, 4, 1, "", "verify_fns"], [0, 4, 1, "", "wallet"]], "bittensor.btlogging": [[4, 2, 1, "", "LoggingMachine"], [1, 0, 0, "-", "defines"], [2, 0, 0, "-", "format"], [3, 0, 0, "-", "helpers"], [4, 1, 1, "", "logging"], [5, 0, 0, "-", "loggingmachine"]], "bittensor.btlogging.LoggingMachine": [[4, 4, 1, "", "Debug"], [4, 4, 1, "", "Default"], [4, 4, 1, "", "Disabled"], [4, 4, 1, "", "Trace"], [4, 3, 1, "", "__call__"], [4, 5, 1, "", "__trace_on__"], [4, 4, 1, "", "_config"], [4, 3, 1, "", "_configure_handlers"], [4, 3, 1, "", "_create_and_start_listener"], [4, 3, 1, "", "_create_file_handler"], [4, 3, 1, "", "_deinitialize_bt_logger"], [4, 3, 1, "", "_enable_file_logging"], [4, 3, 1, "", "_enable_initial_state"], [4, 3, 1, "", "_extract_logging_config"], [4, 4, 1, "", "_file_formatter"], [4, 4, 1, "", "_handlers"], [4, 3, 1, "", "_initialize_bt_logger"], [4, 4, 1, "", "_listener"], [4, 4, 1, "", "_logger"], [4, 4, 1, "", "_primary_loggers"], [4, 4, 1, "", "_queue"], [4, 4, 1, "", "_stream_formatter"], [4, 3, 1, "", "add_args"], [4, 3, 1, "", "after_disable_debug"], [4, 3, 1, "", "after_disable_trace"], [4, 3, 1, "", "after_enable_debug"], [4, 3, 1, "", "after_enable_default"], [4, 3, 1, "", "after_enable_trace"], [4, 3, 1, "", "after_transition"], [4, 3, 1, "", "before_disable_debug"], [4, 3, 1, "", "before_disable_logging"], [4, 3, 1, "", "before_disable_trace"], [4, 3, 1, "", "before_enable_debug"], [4, 3, 1, "", "before_enable_default"], [4, 3, 1, "", "before_enable_trace"], [4, 3, 1, "", "before_transition"], [4, 3, 1, "", "check_config"], [4, 3, 1, "", "config"], [4, 3, 1, "", "critical"], [4, 3, 1, "", "debug"], [4, 3, 1, "", "deregister_primary_logger"], [4, 4, 1, "", "disable_debug"], [4, 4, 1, "", "disable_logging"], [4, 3, 1, "", "disable_third_party_loggers"], [4, 4, 1, "", "disable_trace"], [4, 4, 1, "", "enable_debug"], [4, 4, 1, "", "enable_default"], [4, 3, 1, "", "enable_third_party_loggers"], [4, 4, 1, "", "enable_trace"], [4, 3, 1, "", "error"], [4, 3, 1, "", "exception"], [4, 3, 1, "", "get_config"], [4, 3, 1, "", "get_level"], [4, 3, 1, "", "get_queue"], [4, 3, 1, "", "help"], [4, 3, 1, "", "info"], [4, 3, 1, "", "off"], [4, 3, 1, "", "on"], [4, 3, 1, "", "register_primary_logger"], [4, 3, 1, "", "set_config"], [4, 3, 1, "", "set_debug"], [4, 3, 1, "", "set_trace"], [4, 3, 1, "", "success"], [4, 3, 1, "", "trace"], [4, 3, 1, "", "warning"]], "bittensor.btlogging.defines": [[1, 1, 1, "", "BASE_LOG_FORMAT"], [1, 1, 1, "", "BITTENSOR_LOGGER_NAME"], [1, 1, 1, "", "DATE_FORMAT"], [1, 1, 1, "", "DEFAULT_LOG_BACKUP_COUNT"], [1, 1, 1, "", "DEFAULT_LOG_FILE_NAME"], [1, 1, 1, "", "DEFAULT_MAX_ROTATING_LOG_FILE_SIZE"], [1, 1, 1, "", "TRACE_LOG_FORMAT"]], "bittensor.btlogging.format": [[2, 2, 1, "", "BtFileFormatter"], [2, 2, 1, "", "BtStreamFormatter"], [2, 1, 1, "", "DEFAULT_LOG_FORMAT"], [2, 1, 1, "", "DEFAULT_TRACE_FORMAT"], [2, 1, 1, "", "LOG_FORMATS"], [2, 1, 1, "", "LOG_TRACE_FORMATS"], [2, 1, 1, "", "SUCCESS_LEVEL_NUM"], [2, 1, 1, "", "TRACE_LEVEL_NUM"], [2, 7, 1, "", "_success"], [2, 7, 1, "", "_trace"], [2, 1, 1, "", "color_map"], [2, 1, 1, "", "emoji_map"], [2, 1, 1, "", "log_level_color_prefix"]], "bittensor.btlogging.format.BtFileFormatter": [[2, 3, 1, "", "format"], [2, 3, 1, "", "formatTime"]], "bittensor.btlogging.format.BtStreamFormatter": [[2, 3, 1, "", "format"], [2, 3, 1, "", "formatTime"], [2, 3, 1, "", "set_trace"], [2, 4, 1, "", "trace"]], "bittensor.btlogging.helpers": [[3, 7, 1, "", "all_logger_names"], [3, 7, 1, "", "all_loggers"], [3, 7, 1, "", "get_max_logger_name_length"]], "bittensor.btlogging.loggingmachine": [[5, 2, 1, "", "LoggingConfig"], [5, 2, 1, "", "LoggingMachine"]], "bittensor.btlogging.loggingmachine.LoggingConfig": [[5, 4, 1, "", "debug"], [5, 4, 1, "", "logging_dir"], [5, 4, 1, "", "record_log"], [5, 4, 1, "", "trace"]], "bittensor.btlogging.loggingmachine.LoggingMachine": [[5, 4, 1, "", "Debug"], [5, 4, 1, "", "Default"], [5, 4, 1, "", "Disabled"], [5, 4, 1, "", "Trace"], [5, 3, 1, "", "__call__"], [5, 5, 1, "", "__trace_on__"], [5, 4, 1, "", "_config"], [5, 3, 1, "", "_configure_handlers"], [5, 3, 1, "", "_create_and_start_listener"], [5, 3, 1, "", "_create_file_handler"], [5, 3, 1, "", "_deinitialize_bt_logger"], [5, 3, 1, "", "_enable_file_logging"], [5, 3, 1, "", "_enable_initial_state"], [5, 3, 1, "", "_extract_logging_config"], [5, 4, 1, "", "_file_formatter"], [5, 4, 1, "", "_handlers"], [5, 3, 1, "", "_initialize_bt_logger"], [5, 4, 1, "", "_listener"], [5, 4, 1, "", "_logger"], [5, 4, 1, "", "_primary_loggers"], [5, 4, 1, "", "_queue"], [5, 4, 1, "", "_stream_formatter"], [5, 3, 1, "", "add_args"], [5, 3, 1, "", "after_disable_debug"], [5, 3, 1, "", "after_disable_trace"], [5, 3, 1, "", "after_enable_debug"], [5, 3, 1, "", "after_enable_default"], [5, 3, 1, "", "after_enable_trace"], [5, 3, 1, "", "after_transition"], [5, 3, 1, "", "before_disable_debug"], [5, 3, 1, "", "before_disable_logging"], [5, 3, 1, "", "before_disable_trace"], [5, 3, 1, "", "before_enable_debug"], [5, 3, 1, "", "before_enable_default"], [5, 3, 1, "", "before_enable_trace"], [5, 3, 1, "", "before_transition"], [5, 3, 1, "", "check_config"], [5, 3, 1, "", "config"], [5, 3, 1, "", "critical"], [5, 3, 1, "", "debug"], [5, 3, 1, "", "deregister_primary_logger"], [5, 4, 1, "", "disable_debug"], [5, 4, 1, "", "disable_logging"], [5, 3, 1, "", "disable_third_party_loggers"], [5, 4, 1, "", "disable_trace"], [5, 4, 1, "", "enable_debug"], [5, 4, 1, "", "enable_default"], [5, 3, 1, "", "enable_third_party_loggers"], [5, 4, 1, "", "enable_trace"], [5, 3, 1, "", "error"], [5, 3, 1, "", "exception"], [5, 3, 1, "", "get_config"], [5, 3, 1, "", "get_level"], [5, 3, 1, "", "get_queue"], [5, 3, 1, "", "help"], [5, 3, 1, "", "info"], [5, 3, 1, "", "off"], [5, 3, 1, "", "on"], [5, 3, 1, "", "register_primary_logger"], [5, 3, 1, "", "set_config"], [5, 3, 1, "", "set_debug"], [5, 3, 1, "", "set_trace"], [5, 3, 1, "", "success"], [5, 3, 1, "", "trace"], [5, 3, 1, "", "warning"]], "bittensor.chain_data": [[6, 2, 1, "", "AxonInfo"], [6, 2, 1, "", "ChainDataType"], [6, 2, 1, "", "DelegateInfo"], [6, 2, 1, "", "DelegateInfoLite"], [6, 2, 1, "", "IPInfo"], [6, 2, 1, "", "NeuronInfo"], [6, 2, 1, "", "NeuronInfoLite"], [6, 2, 1, "", "PrometheusInfo"], [6, 1, 1, "", "ProposalCallData"], [6, 2, 1, "", "ProposalVoteData"], [6, 2, 1, "", "ScheduledColdkeySwapInfo"], [6, 2, 1, "", "StakeInfo"], [6, 2, 1, "", "SubnetHyperparameters"], [6, 2, 1, "", "SubnetInfo"], [6, 1, 1, "", "custom_rpc_type_registry"], [6, 7, 1, "", "from_scale_encoding"], [6, 7, 1, "", "from_scale_encoding_using_type_string"]], "bittensor.chain_data.AxonInfo": [[6, 3, 1, "", "__eq__"], [6, 3, 1, "", "__repr__"], [6, 3, 1, "", "__str__"], [6, 4, 1, "", "coldkey"], [6, 3, 1, "", "from_neuron_info"], [6, 3, 1, "", "from_parameter_dict"], [6, 3, 1, "", "from_string"], [6, 4, 1, "", "hotkey"], [6, 4, 1, "", "ip"], [6, 3, 1, "", "ip_str"], [6, 4, 1, "", "ip_type"], [6, 5, 1, "", "is_serving"], [6, 4, 1, "", "placeholder1"], [6, 4, 1, "", "placeholder2"], [6, 4, 1, "", "port"], [6, 4, 1, "", "protocol"], [6, 3, 1, "", "to_parameter_dict"], [6, 3, 1, "", "to_string"], [6, 4, 1, "", "version"]], "bittensor.chain_data.ChainDataType": [[6, 4, 1, "", "DelegateInfo"], [6, 4, 1, "", "DelegatedInfo"], [6, 4, 1, "", "IPInfo"], [6, 4, 1, "", "NeuronInfo"], [6, 4, 1, "", "NeuronInfoLite"], [6, 4, 1, "", "ScheduledColdkeySwapInfo"], [6, 4, 1, "", "StakeInfo"], [6, 4, 1, "", "SubnetHyperparameters"], [6, 4, 1, "", "SubnetInfo"]], "bittensor.chain_data.DelegateInfo": [[6, 3, 1, "", "delegated_list_from_vec_u8"], [6, 3, 1, "", "fix_decoded_values"], [6, 3, 1, "", "from_vec_u8"], [6, 4, 1, "", "hotkey_ss58"], [6, 3, 1, "", "list_from_vec_u8"], [6, 4, 1, "", "nominators"], [6, 4, 1, "", "owner_ss58"], [6, 4, 1, "", "registrations"], [6, 4, 1, "", "return_per_1000"], [6, 4, 1, "", "take"], [6, 4, 1, "", "total_daily_return"], [6, 4, 1, "", "total_stake"], [6, 4, 1, "", "validator_permits"]], "bittensor.chain_data.DelegateInfoLite": [[6, 4, 1, "", "delegate_ss58"], [6, 4, 1, "", "nominators"], [6, 4, 1, "", "owner_ss58"], [6, 4, 1, "", "registrations"], [6, 4, 1, "", "return_per_1000"], [6, 4, 1, "", "take"], [6, 4, 1, "", "total_daily_return"], [6, 4, 1, "", "validator_permits"]], "bittensor.chain_data.IPInfo": [[6, 3, 1, "", "encode"], [6, 3, 1, "", "fix_decoded_values"], [6, 3, 1, "", "from_parameter_dict"], [6, 3, 1, "", "from_vec_u8"], [6, 4, 1, "", "ip"], [6, 4, 1, "", "ip_type"], [6, 3, 1, "", "list_from_vec_u8"], [6, 4, 1, "", "protocol"], [6, 3, 1, "", "to_parameter_dict"]], "bittensor.chain_data.NeuronInfo": [[6, 4, 1, "", "active"], [6, 4, 1, "", "axon_info"], [6, 4, 1, "", "bonds"], [6, 4, 1, "", "coldkey"], [6, 4, 1, "", "consensus"], [6, 4, 1, "", "dividends"], [6, 4, 1, "", "emission"], [6, 3, 1, "", "fix_decoded_values"], [6, 3, 1, "", "from_vec_u8"], [6, 3, 1, "", "from_weights_bonds_and_neuron_lite"], [6, 3, 1, "", "get_null_neuron"], [6, 4, 1, "", "hotkey"], [6, 4, 1, "", "incentive"], [6, 4, 1, "", "is_null"], [6, 4, 1, "", "last_update"], [6, 3, 1, "", "list_from_vec_u8"], [6, 4, 1, "", "netuid"], [6, 4, 1, "", "prometheus_info"], [6, 4, 1, "", "pruning_score"], [6, 4, 1, "", "rank"], [6, 4, 1, "", "stake"], [6, 4, 1, "", "stake_dict"], [6, 4, 1, "", "total_stake"], [6, 4, 1, "", "trust"], [6, 4, 1, "", "uid"], [6, 4, 1, "", "validator_permit"], [6, 4, 1, "", "validator_trust"], [6, 4, 1, "", "weights"]], "bittensor.chain_data.NeuronInfoLite": [[6, 4, 1, "", "active"], [6, 4, 1, "", "axon_info"], [6, 4, 1, "", "coldkey"], [6, 4, 1, "", "consensus"], [6, 4, 1, "", "dividends"], [6, 4, 1, "", "emission"], [6, 3, 1, "", "fix_decoded_values"], [6, 3, 1, "", "from_vec_u8"], [6, 3, 1, "", "get_null_neuron"], [6, 4, 1, "", "hotkey"], [6, 4, 1, "", "incentive"], [6, 4, 1, "", "is_null"], [6, 4, 1, "", "last_update"], [6, 3, 1, "", "list_from_vec_u8"], [6, 4, 1, "", "netuid"], [6, 4, 1, "", "prometheus_info"], [6, 4, 1, "", "pruning_score"], [6, 4, 1, "", "rank"], [6, 4, 1, "", "stake"], [6, 4, 1, "", "stake_dict"], [6, 4, 1, "", "total_stake"], [6, 4, 1, "", "trust"], [6, 4, 1, "", "uid"], [6, 4, 1, "", "validator_permit"], [6, 4, 1, "", "validator_trust"]], "bittensor.chain_data.PrometheusInfo": [[6, 4, 1, "", "block"], [6, 3, 1, "", "fix_decoded_values"], [6, 4, 1, "", "ip"], [6, 4, 1, "", "ip_type"], [6, 4, 1, "", "port"], [6, 4, 1, "", "version"]], "bittensor.chain_data.ProposalVoteData": [[6, 4, 1, "", "ayes"], [6, 4, 1, "", "end"], [6, 4, 1, "", "index"], [6, 4, 1, "", "nays"], [6, 4, 1, "", "threshold"]], "bittensor.chain_data.ScheduledColdkeySwapInfo": [[6, 4, 1, "", "arbitration_block"], [6, 3, 1, "", "decode_account_id_list"], [6, 3, 1, "", "fix_decoded_values"], [6, 3, 1, "", "from_vec_u8"], [6, 3, 1, "", "list_from_vec_u8"], [6, 4, 1, "", "new_coldkey"], [6, 4, 1, "", "old_coldkey"]], "bittensor.chain_data.StakeInfo": [[6, 4, 1, "", "coldkey_ss58"], [6, 3, 1, "", "fix_decoded_values"], [6, 3, 1, "", "from_vec_u8"], [6, 4, 1, "", "hotkey_ss58"], [6, 3, 1, "", "list_from_vec_u8"], [6, 3, 1, "", "list_of_tuple_from_vec_u8"], [6, 4, 1, "", "stake"]], "bittensor.chain_data.SubnetHyperparameters": [[6, 4, 1, "", "activity_cutoff"], [6, 4, 1, "", "adjustment_alpha"], [6, 4, 1, "", "adjustment_interval"], [6, 4, 1, "", "alpha_high"], [6, 4, 1, "", "alpha_low"], [6, 4, 1, "", "bonds_moving_avg"], [6, 4, 1, "", "commit_reveal_weights_enabled"], [6, 4, 1, "", "commit_reveal_weights_interval"], [6, 4, 1, "", "difficulty"], [6, 3, 1, "", "fix_decoded_values"], [6, 3, 1, "", "from_parameter_dict"], [6, 3, 1, "", "from_vec_u8"], [6, 4, 1, "", "immunity_period"], [6, 4, 1, "", "kappa"], [6, 4, 1, "", "liquid_alpha_enabled"], [6, 3, 1, "", "list_from_vec_u8"], [6, 4, 1, "", "max_burn"], [6, 4, 1, "", "max_difficulty"], [6, 4, 1, "", "max_regs_per_block"], [6, 4, 1, "", "max_validators"], [6, 4, 1, "", "max_weight_limit"], [6, 4, 1, "", "min_allowed_weights"], [6, 4, 1, "", "min_burn"], [6, 4, 1, "", "min_difficulty"], [6, 4, 1, "", "registration_allowed"], [6, 4, 1, "", "rho"], [6, 4, 1, "", "serving_rate_limit"], [6, 4, 1, "", "target_regs_per_interval"], [6, 4, 1, "", "tempo"], [6, 3, 1, "", "to_parameter_dict"], [6, 4, 1, "", "weights_rate_limit"], [6, 4, 1, "", "weights_version"]], "bittensor.chain_data.SubnetInfo": [[6, 4, 1, "", "blocks_since_epoch"], [6, 4, 1, "", "burn"], [6, 4, 1, "", "connection_requirements"], [6, 4, 1, "", "difficulty"], [6, 4, 1, "", "emission_value"], [6, 3, 1, "", "fix_decoded_values"], [6, 3, 1, "", "from_parameter_dict"], [6, 3, 1, "", "from_vec_u8"], [6, 4, 1, "", "immunity_period"], [6, 4, 1, "", "kappa"], [6, 3, 1, "", "list_from_vec_u8"], [6, 4, 1, "", "max_allowed_validators"], [6, 4, 1, "", "max_n"], [6, 4, 1, "", "max_weight_limit"], [6, 4, 1, "", "min_allowed_weights"], [6, 4, 1, "", "modality"], [6, 4, 1, "", "netuid"], [6, 4, 1, "", "owner_ss58"], [6, 4, 1, "", "rho"], [6, 4, 1, "", "scaling_law_power"], [6, 4, 1, "", "subnetwork_n"], [6, 4, 1, "", "tempo"], [6, 3, 1, "", "to_parameter_dict"]], "bittensor.cli": [[7, 1, 1, "", "ALIAS_TO_COMMAND"], [7, 2, 1, "", "CLIErrorParser"], [7, 1, 1, "", "COMMANDS"], [44, 3, 1, "", "__create_parser__"], [44, 3, 1, "", "check_config"], [7, 2, 1, "", "cli"], [44, 4, 1, "", "config"], [7, 1, 1, "", "console"], [44, 3, 1, "", "create_config"], [44, 3, 1, "", "run"]], "bittensor.cli.CLIErrorParser": [[7, 3, 1, "", "error"]], "bittensor.cli.cli": [[7, 3, 1, "", "__create_parser__"], [7, 3, 1, "", "check_config"], [7, 4, 1, "", "config"], [7, 3, 1, "", "create_config"], [7, 3, 1, "", "run"]], "bittensor.commands": [[11, 2, 1, "", "AutocompleteCommand"], [11, 2, 1, "", "CheckColdKeySwapCommand"], [11, 2, 1, "", "CommitWeightCommand"], [11, 2, 1, "", "DelegateStakeCommand"], [11, 2, 1, "", "DelegateUnstakeCommand"], [11, 2, 1, "", "GetChildKeyTakeCommand"], [11, 2, 1, "", "GetChildrenCommand"], [11, 2, 1, "", "GetIdentityCommand"], [11, 2, 1, "", "GetWalletHistoryCommand"], [11, 2, 1, "", "InspectCommand"], [11, 2, 1, "", "ListCommand"], [11, 2, 1, "", "ListDelegatesCommand"], [11, 2, 1, "", "MetagraphCommand"], [11, 2, 1, "", "MyDelegatesCommand"], [11, 2, 1, "", "NewColdkeyCommand"], [11, 2, 1, "", "NewHotkeyCommand"], [11, 2, 1, "", "NominateCommand"], [11, 2, 1, "", "OverviewCommand"], [11, 2, 1, "", "PowRegisterCommand"], [11, 2, 1, "", "ProposalsCommand"], [11, 2, 1, "", "RegenColdkeyCommand"], [11, 2, 1, "", "RegenColdkeypubCommand"], [11, 2, 1, "", "RegenHotkeyCommand"], [11, 2, 1, "", "RegisterCommand"], [11, 2, 1, "", "RevealWeightCommand"], [11, 2, 1, "", "RevokeChildrenCommand"], [11, 2, 1, "", "RootGetWeightsCommand"], [11, 2, 1, "", "RootList"], [11, 2, 1, "", "RootRegisterCommand"], [11, 2, 1, "", "RootSetBoostCommand"], [11, 2, 1, "", "RootSetSlashCommand"], [11, 2, 1, "", "RootSetWeightsCommand"], [11, 2, 1, "", "RunFaucetCommand"], [11, 2, 1, "", "SenateCommand"], [11, 2, 1, "", "SenateLeaveCommand"], [11, 2, 1, "", "SenateRegisterCommand"], [11, 2, 1, "", "SetChildKeyTakeCommand"], [11, 2, 1, "", "SetChildrenCommand"], [11, 2, 1, "", "SetIdentityCommand"], [11, 2, 1, "", "SetTakeCommand"], [11, 2, 1, "", "ShowVotesCommand"], [11, 2, 1, "", "StakeCommand"], [11, 2, 1, "", "StakeShow"], [11, 2, 1, "", "SwapHotkeyCommand"], [11, 2, 1, "", "TransferCommand"], [11, 2, 1, "", "UnStakeCommand"], [11, 2, 1, "", "UpdateCommand"], [11, 2, 1, "", "UpdateWalletCommand"], [11, 2, 1, "", "VoteCommand"], [11, 2, 1, "", "WalletBalanceCommand"], [11, 2, 1, "", "WalletCreateCommand"], [8, 0, 0, "-", "check_coldkey_swap"], [11, 1, 1, "", "defaults"], [9, 0, 0, "-", "delegates"], [10, 0, 0, "-", "identity"], [12, 0, 0, "-", "inspect"], [13, 0, 0, "-", "list"], [14, 0, 0, "-", "metagraph"], [15, 0, 0, "-", "misc"], [16, 0, 0, "-", "network"], [17, 0, 0, "-", "overview"], [18, 0, 0, "-", "register"], [19, 0, 0, "-", "root"], [20, 0, 0, "-", "senate"], [21, 0, 0, "-", "stake"], [22, 0, 0, "-", "transfer"], [23, 0, 0, "-", "unstake"], [24, 0, 0, "-", "utils"], [25, 0, 0, "-", "wallets"], [26, 0, 0, "-", "weights"]], "bittensor.commands.AutocompleteCommand": [[11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.CheckColdKeySwapCommand": [[11, 3, 1, "", "_run"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.CommitWeightCommand": [[11, 3, 1, "", "_run"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.DelegateStakeCommand": [[11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.DelegateUnstakeCommand": [[11, 3, 1, "", "_run"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.GetChildKeyTakeCommand": [[11, 3, 1, "", "_run"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "get_take"], [11, 3, 1, "", "run"]], "bittensor.commands.GetChildrenCommand": [[11, 3, 1, "", "_run"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "get_parent_stake_info"], [11, 3, 1, "", "render_table"], [11, 3, 1, "", "retrieve_children"], [11, 3, 1, "", "run"]], "bittensor.commands.GetIdentityCommand": [[11, 3, 1, "", "_run"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.GetWalletHistoryCommand": [[11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.InspectCommand": [[11, 3, 1, "", "_run"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.ListCommand": [[11, 3, 1, "", "_run"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "get_tree"], [11, 3, 1, "", "run"]], "bittensor.commands.ListDelegatesCommand": [[11, 3, 1, "", "_run"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.MetagraphCommand": [[11, 3, 1, "", "_run"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.MyDelegatesCommand": [[11, 3, 1, "", "_run"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.NewColdkeyCommand": [[11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.NewHotkeyCommand": [[11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.NominateCommand": [[11, 3, 1, "", "_run"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.OverviewCommand": [[11, 3, 1, "", "_get_de_registered_stake_for_coldkey_wallet"], [11, 3, 1, "", "_get_hotkeys"], [11, 3, 1, "", "_get_key_address"], [11, 3, 1, "", "_get_neurons_for_netuid"], [11, 3, 1, "", "_get_total_balance"], [11, 3, 1, "", "_process_neuron_results"], [11, 3, 1, "", "_run"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.PowRegisterCommand": [[11, 3, 1, "", "_run"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.ProposalsCommand": [[11, 3, 1, "", "_run"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.RegenColdkeyCommand": [[11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.RegenColdkeypubCommand": [[11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.RegenHotkeyCommand": [[11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.RegisterCommand": [[11, 3, 1, "", "_run"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.RevealWeightCommand": [[11, 3, 1, "", "_run"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.RevokeChildrenCommand": [[11, 3, 1, "", "_run"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.RootGetWeightsCommand": [[11, 3, 1, "", "_run"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.RootList": [[11, 3, 1, "", "_run"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.RootRegisterCommand": [[11, 3, 1, "", "_run"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.RootSetBoostCommand": [[11, 3, 1, "", "_run"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.RootSetSlashCommand": [[11, 3, 1, "", "_run"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.RootSetWeightsCommand": [[11, 3, 1, "", "_run"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.RunFaucetCommand": [[11, 3, 1, "", "_run"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.SenateCommand": [[11, 3, 1, "", "_run"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.SenateLeaveCommand": [[11, 3, 1, "", "_run"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.SenateRegisterCommand": [[11, 3, 1, "", "_run"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.SetChildKeyTakeCommand": [[11, 3, 1, "", "_run"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.SetChildrenCommand": [[11, 3, 1, "", "_run"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "print_current_stake"], [11, 3, 1, "", "run"]], "bittensor.commands.SetIdentityCommand": [[11, 3, 1, "", "_run"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.SetTakeCommand": [[11, 3, 1, "", "_run"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.ShowVotesCommand": [[11, 3, 1, "", "_run"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.StakeCommand": [[11, 3, 1, "", "_run"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.StakeShow": [[11, 3, 1, "", "_run"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.SwapHotkeyCommand": [[11, 3, 1, "", "_run"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.TransferCommand": [[11, 3, 1, "", "_run"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.UnStakeCommand": [[11, 3, 1, "", "_run"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.UpdateCommand": [[11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.UpdateWalletCommand": [[11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.VoteCommand": [[11, 3, 1, "", "_run"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.WalletBalanceCommand": [[11, 3, 1, "", "_run"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.WalletCreateCommand": [[11, 3, 1, "", "add_args"], [11, 3, 1, "", "check_config"], [11, 3, 1, "", "run"]], "bittensor.commands.check_coldkey_swap": [[8, 2, 1, "", "CheckColdKeySwapCommand"], [8, 1, 1, "", "console"], [8, 7, 1, "", "fetch_arbitration_stats"]], "bittensor.commands.check_coldkey_swap.CheckColdKeySwapCommand": [[8, 3, 1, "", "_run"], [8, 3, 1, "", "add_args"], [8, 3, 1, "", "check_config"], [8, 3, 1, "", "run"]], "bittensor.commands.delegates": [[9, 2, 1, "", "DelegateStakeCommand"], [9, 2, 1, "", "DelegateUnstakeCommand"], [9, 2, 1, "", "ListDelegatesCommand"], [9, 2, 1, "", "MyDelegatesCommand"], [9, 2, 1, "", "NominateCommand"], [9, 2, 1, "", "SetTakeCommand"], [9, 7, 1, "", "_get_coldkey_wallets_for_path"], [9, 1, 1, "", "console"], [9, 7, 1, "", "show_delegates"], [9, 7, 1, "", "show_delegates_lite"]], "bittensor.commands.delegates.DelegateStakeCommand": [[9, 3, 1, "", "add_args"], [9, 3, 1, "", "check_config"], [9, 3, 1, "", "run"]], "bittensor.commands.delegates.DelegateUnstakeCommand": [[9, 3, 1, "", "_run"], [9, 3, 1, "", "add_args"], [9, 3, 1, "", "check_config"], [9, 3, 1, "", "run"]], "bittensor.commands.delegates.ListDelegatesCommand": [[9, 3, 1, "", "_run"], [9, 3, 1, "", "add_args"], [9, 3, 1, "", "check_config"], [9, 3, 1, "", "run"]], "bittensor.commands.delegates.MyDelegatesCommand": [[9, 3, 1, "", "_run"], [9, 3, 1, "", "add_args"], [9, 3, 1, "", "check_config"], [9, 3, 1, "", "run"]], "bittensor.commands.delegates.NominateCommand": [[9, 3, 1, "", "_run"], [9, 3, 1, "", "add_args"], [9, 3, 1, "", "check_config"], [9, 3, 1, "", "run"]], "bittensor.commands.delegates.SetTakeCommand": [[9, 3, 1, "", "_run"], [9, 3, 1, "", "add_args"], [9, 3, 1, "", "check_config"], [9, 3, 1, "", "run"]], "bittensor.commands.identity": [[10, 2, 1, "", "GetIdentityCommand"], [10, 2, 1, "", "SetIdentityCommand"]], "bittensor.commands.identity.GetIdentityCommand": [[10, 3, 1, "", "_run"], [10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.identity.SetIdentityCommand": [[10, 3, 1, "", "_run"], [10, 3, 1, "", "add_args"], [10, 3, 1, "", "check_config"], [10, 3, 1, "", "run"]], "bittensor.commands.inspect": [[12, 2, 1, "", "InspectCommand"], [12, 7, 1, "", "_get_coldkey_wallets_for_path"], [12, 7, 1, "", "_get_hotkey_wallets_for_wallet"], [12, 1, 1, "", "console"]], "bittensor.commands.inspect.InspectCommand": [[12, 3, 1, "", "_run"], [12, 3, 1, "", "add_args"], [12, 3, 1, "", "check_config"], [12, 3, 1, "", "run"]], "bittensor.commands.list": [[13, 2, 1, "", "ListCommand"], [13, 1, 1, "", "console"]], "bittensor.commands.list.ListCommand": [[13, 3, 1, "", "_run"], [13, 3, 1, "", "add_args"], [13, 3, 1, "", "check_config"], [13, 3, 1, "", "get_tree"], [13, 3, 1, "", "run"]], "bittensor.commands.metagraph": [[14, 2, 1, "", "MetagraphCommand"], [14, 1, 1, "", "console"]], "bittensor.commands.metagraph.MetagraphCommand": [[14, 3, 1, "", "_run"], [14, 3, 1, "", "add_args"], [14, 3, 1, "", "check_config"], [14, 3, 1, "", "run"]], "bittensor.commands.misc": [[15, 2, 1, "", "AutocompleteCommand"], [15, 2, 1, "", "UpdateCommand"], [15, 1, 1, "", "console"]], "bittensor.commands.misc.AutocompleteCommand": [[15, 3, 1, "", "add_args"], [15, 3, 1, "", "check_config"], [15, 3, 1, "", "run"]], "bittensor.commands.misc.UpdateCommand": [[15, 3, 1, "", "add_args"], [15, 3, 1, "", "check_config"], [15, 3, 1, "", "run"]], "bittensor.commands.network": [[16, 1, 1, "", "HYPERPARAMS"], [16, 2, 1, "", "RegisterSubnetworkCommand"], [16, 2, 1, "", "SubnetGetHyperparamsCommand"], [16, 2, 1, "", "SubnetHyperparamsCommand"], [16, 2, 1, "", "SubnetListCommand"], [16, 2, 1, "", "SubnetLockCostCommand"], [16, 2, 1, "", "SubnetSudoCommand"], [16, 7, 1, "", "allowed_value"], [16, 1, 1, "", "console"]], "bittensor.commands.network.RegisterSubnetworkCommand": [[16, 3, 1, "", "_run"], [16, 3, 1, "", "add_args"], [16, 3, 1, "", "check_config"], [16, 3, 1, "", "run"]], "bittensor.commands.network.SubnetGetHyperparamsCommand": [[16, 3, 1, "", "_run"], [16, 3, 1, "", "add_args"], [16, 3, 1, "", "check_config"], [16, 3, 1, "", "run"]], "bittensor.commands.network.SubnetHyperparamsCommand": [[16, 3, 1, "", "_run"], [16, 3, 1, "", "add_args"], [16, 3, 1, "", "check_config"], [16, 3, 1, "", "run"]], "bittensor.commands.network.SubnetListCommand": [[16, 3, 1, "", "_run"], [16, 3, 1, "", "add_args"], [16, 3, 1, "", "check_config"], [16, 3, 1, "", "run"]], "bittensor.commands.network.SubnetLockCostCommand": [[16, 3, 1, "", "_run"], [16, 3, 1, "", "add_args"], [16, 3, 1, "", "check_config"], [16, 3, 1, "", "run"]], "bittensor.commands.network.SubnetSudoCommand": [[16, 3, 1, "", "_run"], [16, 3, 1, "", "add_args"], [16, 3, 1, "", "check_config"], [16, 3, 1, "", "run"]], "bittensor.commands.overview": [[17, 2, 1, "", "OverviewCommand"], [17, 1, 1, "", "console"]], "bittensor.commands.overview.OverviewCommand": [[17, 3, 1, "", "_get_de_registered_stake_for_coldkey_wallet"], [17, 3, 1, "", "_get_hotkeys"], [17, 3, 1, "", "_get_key_address"], [17, 3, 1, "", "_get_neurons_for_netuid"], [17, 3, 1, "", "_get_total_balance"], [17, 3, 1, "", "_process_neuron_results"], [17, 3, 1, "", "_run"], [17, 3, 1, "", "add_args"], [17, 3, 1, "", "check_config"], [17, 3, 1, "", "run"]], "bittensor.commands.register": [[18, 2, 1, "", "PowRegisterCommand"], [18, 2, 1, "", "RegisterCommand"], [18, 2, 1, "", "RunFaucetCommand"], [18, 2, 1, "", "SwapHotkeyCommand"], [18, 1, 1, "", "console"]], "bittensor.commands.register.PowRegisterCommand": [[18, 3, 1, "", "_run"], [18, 3, 1, "", "add_args"], [18, 3, 1, "", "check_config"], [18, 3, 1, "", "run"]], "bittensor.commands.register.RegisterCommand": [[18, 3, 1, "", "_run"], [18, 3, 1, "", "add_args"], [18, 3, 1, "", "check_config"], [18, 3, 1, "", "run"]], "bittensor.commands.register.RunFaucetCommand": [[18, 3, 1, "", "_run"], [18, 3, 1, "", "add_args"], [18, 3, 1, "", "check_config"], [18, 3, 1, "", "run"]], "bittensor.commands.register.SwapHotkeyCommand": [[18, 3, 1, "", "_run"], [18, 3, 1, "", "add_args"], [18, 3, 1, "", "check_config"], [18, 3, 1, "", "run"]], "bittensor.commands.root": [[19, 2, 1, "", "RootGetWeightsCommand"], [19, 2, 1, "", "RootList"], [19, 2, 1, "", "RootRegisterCommand"], [19, 2, 1, "", "RootSetBoostCommand"], [19, 2, 1, "", "RootSetSlashCommand"], [19, 2, 1, "", "RootSetWeightsCommand"], [19, 1, 1, "", "console"]], "bittensor.commands.root.RootGetWeightsCommand": [[19, 3, 1, "", "_run"], [19, 3, 1, "", "add_args"], [19, 3, 1, "", "check_config"], [19, 3, 1, "", "run"]], "bittensor.commands.root.RootList": [[19, 3, 1, "", "_run"], [19, 3, 1, "", "add_args"], [19, 3, 1, "", "check_config"], [19, 3, 1, "", "run"]], "bittensor.commands.root.RootRegisterCommand": [[19, 3, 1, "", "_run"], [19, 3, 1, "", "add_args"], [19, 3, 1, "", "check_config"], [19, 3, 1, "", "run"]], "bittensor.commands.root.RootSetBoostCommand": [[19, 3, 1, "", "_run"], [19, 3, 1, "", "add_args"], [19, 3, 1, "", "check_config"], [19, 3, 1, "", "run"]], "bittensor.commands.root.RootSetSlashCommand": [[19, 3, 1, "", "_run"], [19, 3, 1, "", "add_args"], [19, 3, 1, "", "check_config"], [19, 3, 1, "", "run"]], "bittensor.commands.root.RootSetWeightsCommand": [[19, 3, 1, "", "_run"], [19, 3, 1, "", "add_args"], [19, 3, 1, "", "check_config"], [19, 3, 1, "", "run"]], "bittensor.commands.senate": [[20, 2, 1, "", "ProposalsCommand"], [20, 2, 1, "", "SenateCommand"], [20, 2, 1, "", "SenateLeaveCommand"], [20, 2, 1, "", "SenateRegisterCommand"], [20, 2, 1, "", "ShowVotesCommand"], [20, 2, 1, "", "VoteCommand"], [20, 1, 1, "", "console"], [20, 7, 1, "", "display_votes"], [20, 7, 1, "", "format_call_data"]], "bittensor.commands.senate.ProposalsCommand": [[20, 3, 1, "", "_run"], [20, 3, 1, "", "add_args"], [20, 3, 1, "", "check_config"], [20, 3, 1, "", "run"]], "bittensor.commands.senate.SenateCommand": [[20, 3, 1, "", "_run"], [20, 3, 1, "", "add_args"], [20, 3, 1, "", "check_config"], [20, 3, 1, "", "run"]], "bittensor.commands.senate.SenateLeaveCommand": [[20, 3, 1, "", "_run"], [20, 3, 1, "", "add_args"], [20, 3, 1, "", "check_config"], [20, 3, 1, "", "run"]], "bittensor.commands.senate.SenateRegisterCommand": [[20, 3, 1, "", "_run"], [20, 3, 1, "", "add_args"], [20, 3, 1, "", "check_config"], [20, 3, 1, "", "run"]], "bittensor.commands.senate.ShowVotesCommand": [[20, 3, 1, "", "_run"], [20, 3, 1, "", "add_args"], [20, 3, 1, "", "check_config"], [20, 3, 1, "", "run"]], "bittensor.commands.senate.VoteCommand": [[20, 3, 1, "", "_run"], [20, 3, 1, "", "add_args"], [20, 3, 1, "", "check_config"], [20, 3, 1, "", "run"]], "bittensor.commands.stake": [[21, 2, 1, "", "GetChildKeyTakeCommand"], [21, 2, 1, "", "GetChildrenCommand"], [21, 1, 1, "", "MAX_CHILDREN"], [21, 2, 1, "", "SetChildKeyTakeCommand"], [21, 2, 1, "", "SetChildrenCommand"], [21, 2, 1, "", "StakeCommand"], [21, 2, 1, "", "StakeShow"], [21, 7, 1, "", "_get_coldkey_wallets_for_path"], [21, 7, 1, "", "_get_hotkey_wallets_for_wallet"], [21, 1, 1, "", "console"], [21, 7, 1, "", "get_hotkey"], [21, 7, 1, "", "get_netuid"]], "bittensor.commands.stake.GetChildKeyTakeCommand": [[21, 3, 1, "", "_run"], [21, 3, 1, "", "add_args"], [21, 3, 1, "", "check_config"], [21, 3, 1, "", "get_take"], [21, 3, 1, "", "run"]], "bittensor.commands.stake.GetChildrenCommand": [[21, 3, 1, "", "_run"], [21, 3, 1, "", "add_args"], [21, 3, 1, "", "check_config"], [21, 3, 1, "", "get_parent_stake_info"], [21, 3, 1, "", "render_table"], [21, 3, 1, "", "retrieve_children"], [21, 3, 1, "", "run"]], "bittensor.commands.stake.SetChildKeyTakeCommand": [[21, 3, 1, "", "_run"], [21, 3, 1, "", "add_args"], [21, 3, 1, "", "check_config"], [21, 3, 1, "", "run"]], "bittensor.commands.stake.SetChildrenCommand": [[21, 3, 1, "", "_run"], [21, 3, 1, "", "add_args"], [21, 3, 1, "", "check_config"], [21, 3, 1, "", "print_current_stake"], [21, 3, 1, "", "run"]], "bittensor.commands.stake.StakeCommand": [[21, 3, 1, "", "_run"], [21, 3, 1, "", "add_args"], [21, 3, 1, "", "check_config"], [21, 3, 1, "", "run"]], "bittensor.commands.stake.StakeShow": [[21, 3, 1, "", "_run"], [21, 3, 1, "", "add_args"], [21, 3, 1, "", "check_config"], [21, 3, 1, "", "run"]], "bittensor.commands.transfer": [[22, 2, 1, "", "TransferCommand"], [22, 1, 1, "", "console"]], "bittensor.commands.transfer.TransferCommand": [[22, 3, 1, "", "_run"], [22, 3, 1, "", "add_args"], [22, 3, 1, "", "check_config"], [22, 3, 1, "", "run"]], "bittensor.commands.unstake": [[23, 2, 1, "", "RevokeChildrenCommand"], [23, 2, 1, "", "UnStakeCommand"], [23, 1, 1, "", "console"]], "bittensor.commands.unstake.RevokeChildrenCommand": [[23, 3, 1, "", "_run"], [23, 3, 1, "", "add_args"], [23, 3, 1, "", "check_config"], [23, 3, 1, "", "run"]], "bittensor.commands.unstake.UnStakeCommand": [[23, 3, 1, "", "_run"], [23, 3, 1, "", "add_args"], [23, 3, 1, "", "check_config"], [23, 3, 1, "", "run"]], "bittensor.commands.utils": [[24, 2, 1, "", "DelegatesDetails"], [24, 2, 1, "", "IntListPrompt"], [24, 7, 1, "", "_get_delegates_details_from_github"], [24, 7, 1, "", "check_for_cuda_reg_config"], [24, 7, 1, "", "check_netuid_set"], [24, 1, 1, "", "console"], [24, 7, 1, "", "filter_netuids_by_registered_hotkeys"], [24, 7, 1, "", "get_all_wallets_for_path"], [24, 7, 1, "", "get_coldkey_wallets_for_path"], [24, 7, 1, "", "get_delegates_details"], [24, 7, 1, "", "get_hotkey_wallets_for_wallet"], [24, 7, 1, "", "normalize_hyperparameters"]], "bittensor.commands.utils.DelegatesDetails": [[24, 4, 1, "", "description"], [24, 3, 1, "", "from_json"], [24, 4, 1, "", "name"], [24, 4, 1, "", "signature"], [24, 4, 1, "", "url"]], "bittensor.commands.utils.IntListPrompt": [[24, 3, 1, "", "check_choice"]], "bittensor.commands.wallets": [[25, 1, 1, "", "API_URL"], [25, 1, 1, "", "GRAPHQL_QUERY"], [25, 2, 1, "", "GetWalletHistoryCommand"], [25, 1, 1, "", "MAX_TXN"], [25, 2, 1, "", "NewColdkeyCommand"], [25, 2, 1, "", "NewHotkeyCommand"], [25, 2, 1, "", "RegenColdkeyCommand"], [25, 2, 1, "", "RegenColdkeypubCommand"], [25, 2, 1, "", "RegenHotkeyCommand"], [25, 2, 1, "", "UpdateWalletCommand"], [25, 2, 1, "", "WalletBalanceCommand"], [25, 2, 1, "", "WalletCreateCommand"], [25, 7, 1, "", "_get_coldkey_ss58_addresses_for_path"], [25, 7, 1, "", "_get_coldkey_wallets_for_path"], [25, 7, 1, "", "create_transfer_history_table"], [25, 7, 1, "", "get_wallet_transfers"]], "bittensor.commands.wallets.GetWalletHistoryCommand": [[25, 3, 1, "", "add_args"], [25, 3, 1, "", "check_config"], [25, 3, 1, "", "run"]], "bittensor.commands.wallets.NewColdkeyCommand": [[25, 3, 1, "", "add_args"], [25, 3, 1, "", "check_config"], [25, 3, 1, "", "run"]], "bittensor.commands.wallets.NewHotkeyCommand": [[25, 3, 1, "", "add_args"], [25, 3, 1, "", "check_config"], [25, 3, 1, "", "run"]], "bittensor.commands.wallets.RegenColdkeyCommand": [[25, 3, 1, "", "add_args"], [25, 3, 1, "", "check_config"], [25, 3, 1, "", "run"]], "bittensor.commands.wallets.RegenColdkeypubCommand": [[25, 3, 1, "", "add_args"], [25, 3, 1, "", "check_config"], [25, 3, 1, "", "run"]], "bittensor.commands.wallets.RegenHotkeyCommand": [[25, 3, 1, "", "add_args"], [25, 3, 1, "", "check_config"], [25, 3, 1, "", "run"]], "bittensor.commands.wallets.UpdateWalletCommand": [[25, 3, 1, "", "add_args"], [25, 3, 1, "", "check_config"], [25, 3, 1, "", "run"]], "bittensor.commands.wallets.WalletBalanceCommand": [[25, 3, 1, "", "_run"], [25, 3, 1, "", "add_args"], [25, 3, 1, "", "check_config"], [25, 3, 1, "", "run"]], "bittensor.commands.wallets.WalletCreateCommand": [[25, 3, 1, "", "add_args"], [25, 3, 1, "", "check_config"], [25, 3, 1, "", "run"]], "bittensor.commands.weights": [[26, 2, 1, "", "CommitWeightCommand"], [26, 2, 1, "", "RevealWeightCommand"]], "bittensor.commands.weights.CommitWeightCommand": [[26, 3, 1, "", "_run"], [26, 3, 1, "", "add_args"], [26, 3, 1, "", "check_config"], [26, 3, 1, "", "run"]], "bittensor.commands.weights.RevealWeightCommand": [[26, 3, 1, "", "_run"], [26, 3, 1, "", "add_args"], [26, 3, 1, "", "check_config"], [26, 3, 1, "", "run"]], "bittensor.config": [[27, 2, 1, "", "DefaultConfig"], [27, 6, 1, "", "InvalidConfigFile"], [27, 1, 1, "", "T"], [44, 3, 1, "", "__check_for_missing_required_args"], [44, 3, 1, "", "__deepcopy__"], [44, 3, 1, "", "__get_required_args_from_parser"], [44, 4, 1, "", "__is_set"], [44, 3, 1, "", "__parse_args__"], [44, 3, 1, "", "__repr__"], [44, 3, 1, "", "__split_params__"], [44, 3, 1, "", "__str__"], [44, 4, 1, "", "_config"], [44, 3, 1, "", "_merge"], [44, 3, 1, "", "_remove_private_keys"], [44, 4, 1, "", "all_default_args"], [27, 2, 1, "", "config"], [44, 4, 1, "", "config_params"], [44, 3, 1, "", "copy"], [44, 4, 1, "", "default_param_args"], [44, 4, 1, "", "default_params"], [44, 4, 1, "", "defaults_as_suppress"], [44, 3, 1, "", "is_set"], [44, 3, 1, "", "merge"], [44, 3, 1, "", "merge_all"], [44, 4, 1, "", "missing_required_args"], [44, 4, 1, "", "params"], [44, 4, 1, "", "params_no_defaults"], [44, 4, 1, "", "parser_no_defaults"], [44, 4, 1, "", "strict"], [44, 3, 1, "", "to_string"], [44, 3, 1, "", "update_with_kwargs"]], "bittensor.config.DefaultConfig": [[27, 3, 1, "", "default"]], "bittensor.config.config": [[27, 3, 1, "", "__check_for_missing_required_args"], [27, 3, 1, "", "__deepcopy__"], [27, 3, 1, "", "__get_required_args_from_parser"], [27, 4, 1, "", "__is_set"], [27, 3, 1, "", "__parse_args__"], [27, 3, 1, "", "__repr__"], [27, 3, 1, "", "__split_params__"], [27, 3, 1, "", "__str__"], [27, 4, 1, "", "_config"], [27, 3, 1, "", "_merge"], [27, 3, 1, "", "_remove_private_keys"], [27, 4, 1, "", "all_default_args"], [27, 4, 1, "", "config_params"], [27, 3, 1, "", "copy"], [27, 4, 1, "", "default_param_args"], [27, 4, 1, "", "default_params"], [27, 4, 1, "", "defaults_as_suppress"], [27, 3, 1, "", "is_set"], [27, 3, 1, "", "merge"], [27, 3, 1, "", "merge_all"], [27, 4, 1, "", "missing_required_args"], [27, 4, 1, "", "params"], [27, 4, 1, "", "params_no_defaults"], [27, 4, 1, "", "parser_no_defaults"], [27, 4, 1, "", "strict"], [27, 3, 1, "", "to_string"], [27, 3, 1, "", "update_with_kwargs"]], "bittensor.constants": [[28, 1, 1, "", "ALLOWED_DELTA"], [28, 1, 1, "", "DENDRITE_DEFAULT_ERROR"], [28, 1, 1, "", "DENDRITE_ERROR_MAPPING"], [28, 1, 1, "", "NANOSECONDS_IN_SECOND"], [28, 1, 1, "", "V_7_2_0"]], "bittensor.dendrite": [[29, 1, 1, "", "BaseModel"], [29, 2, 1, "", "DendriteMixin"], [44, 3, 1, "", "__repr__"], [44, 3, 1, "", "__str__"], [44, 3, 1, "", "aclose_session"], [44, 3, 1, "", "call"], [44, 3, 1, "", "call_stream"], [44, 3, 1, "", "close_session"], [29, 2, 1, "", "dendrite"], [44, 3, 1, "", "forward"], [44, 3, 1, "", "preprocess_synapse_for_request"], [44, 3, 1, "", "process_server_response"], [44, 3, 1, "", "query"]], "bittensor.dendrite.DendriteMixin": [[29, 3, 1, "", "__aenter__"], [29, 3, 1, "", "__aexit__"], [29, 3, 1, "", "__del__"], [29, 3, 1, "id14", "__repr__"], [29, 3, 1, "id13", "__str__"], [29, 3, 1, "", "_get_endpoint_url"], [29, 3, 1, "", "_log_incoming_response"], [29, 3, 1, "", "_log_outgoing_request"], [29, 4, 1, "", "_session"], [29, 3, 1, "id4", "aclose_session"], [29, 3, 1, "id8", "call"], [29, 3, 1, "id9", "call_stream"], [29, 3, 1, "id0", "close_session"], [29, 4, 1, "", "external_ip"], [29, 3, 1, "id7", "forward"], [29, 4, 1, "", "keypair"], [29, 3, 1, "", "log_exception"], [29, 3, 1, "id10", "preprocess_synapse_for_request"], [29, 3, 1, "", "process_error_message"], [29, 3, 1, "id11", "process_server_response"], [29, 3, 1, "id6", "query"], [29, 5, 1, "", "session"], [29, 4, 1, "", "synapse_history"], [29, 4, 1, "", "uuid"]], "bittensor.dendrite.dendrite": [[29, 3, 1, "", "__repr__"], [29, 3, 1, "", "__str__"], [29, 3, 1, "", "aclose_session"], [29, 3, 1, "", "call"], [29, 3, 1, "", "call_stream"], [29, 3, 1, "", "close_session"], [29, 3, 1, "", "forward"], [29, 3, 1, "", "preprocess_synapse_for_request"], [29, 3, 1, "", "process_server_response"], [29, 3, 1, "", "query"]], "bittensor.errors": [[30, 6, 1, "", "BlacklistedException"], [30, 6, 1, "", "ChainConnectionError"], [30, 6, 1, "", "ChainError"], [30, 6, 1, "", "ChainQueryError"], [30, 6, 1, "", "ChainTransactionError"], [30, 6, 1, "", "IdentityError"], [30, 6, 1, "", "InternalServerError"], [30, 6, 1, "", "InvalidRequestNameError"], [30, 6, 1, "", "KeyFileError"], [30, 6, 1, "", "MetadataError"], [30, 6, 1, "", "NominationError"], [30, 6, 1, "", "NotDelegateError"], [30, 6, 1, "", "NotRegisteredError"], [30, 6, 1, "", "NotVerifiedException"], [30, 6, 1, "", "PostProcessException"], [30, 6, 1, "", "PriorityException"], [30, 6, 1, "", "RegistrationError"], [30, 6, 1, "", "RunException"], [30, 6, 1, "", "StakeError"], [30, 6, 1, "", "SynapseDendriteNoneException"], [30, 6, 1, "", "SynapseException"], [30, 6, 1, "", "SynapseParsingError"], [30, 6, 1, "", "TakeError"], [30, 6, 1, "", "TransferError"], [30, 6, 1, "", "UnknownSynapseError"], [30, 6, 1, "", "UnstakeError"]], "bittensor.errors.SynapseDendriteNoneException": [[30, 4, 1, "", "message"]], "bittensor.errors.SynapseException": [[30, 4, 1, "", "message"], [30, 4, 1, "", "synapse"]], "bittensor.extrinsics": [[31, 0, 0, "-", "commit_weights"], [32, 0, 0, "-", "delegation"], [34, 0, 0, "-", "network"], [35, 0, 0, "-", "prometheus"], [36, 0, 0, "-", "registration"], [37, 0, 0, "-", "root"], [38, 0, 0, "-", "senate"], [39, 0, 0, "-", "serving"], [40, 0, 0, "-", "set_weights"], [41, 0, 0, "-", "staking"], [42, 0, 0, "-", "transfer"], [43, 0, 0, "-", "unstaking"]], "bittensor.extrinsics.commit_weights": [[31, 7, 1, "", "commit_weights_extrinsic"], [31, 7, 1, "", "reveal_weights_extrinsic"]], "bittensor.extrinsics.delegation": [[32, 7, 1, "", "decrease_take_extrinsic"], [32, 7, 1, "", "delegate_extrinsic"], [32, 7, 1, "", "increase_take_extrinsic"], [32, 1, 1, "", "logger"], [32, 7, 1, "", "nominate_extrinsic"], [32, 7, 1, "", "undelegate_extrinsic"]], "bittensor.extrinsics.network": [[34, 7, 1, "", "_find_event_attributes_in_extrinsic_receipt"], [34, 7, 1, "", "register_subnetwork_extrinsic"], [34, 7, 1, "", "set_hyperparameter_extrinsic"]], "bittensor.extrinsics.prometheus": [[35, 7, 1, "", "prometheus_extrinsic"]], "bittensor.extrinsics.registration": [[36, 6, 1, "", "MaxAttemptsException"], [36, 6, 1, "", "MaxSuccessException"], [36, 7, 1, "", "burned_register_extrinsic"], [36, 7, 1, "", "register_extrinsic"], [36, 7, 1, "", "run_faucet_extrinsic"], [36, 7, 1, "", "swap_hotkey_extrinsic"]], "bittensor.extrinsics.root": [[37, 1, 1, "", "logger"], [37, 7, 1, "", "root_register_extrinsic"], [37, 7, 1, "", "set_root_weights_extrinsic"]], "bittensor.extrinsics.senate": [[38, 7, 1, "", "leave_senate_extrinsic"], [38, 7, 1, "", "register_senate_extrinsic"], [38, 7, 1, "", "vote_senate_extrinsic"]], "bittensor.extrinsics.serving": [[39, 7, 1, "", "get_metadata"], [39, 7, 1, "", "publish_metadata"], [39, 7, 1, "", "serve_axon_extrinsic"], [39, 7, 1, "", "serve_extrinsic"]], "bittensor.extrinsics.set_weights": [[40, 1, 1, "", "logger"], [40, 7, 1, "", "set_weights_extrinsic"]], "bittensor.extrinsics.staking": [[41, 7, 1, "", "__do_add_stake_single"], [41, 7, 1, "", "_check_threshold_amount"], [41, 7, 1, "", "add_stake_extrinsic"], [41, 7, 1, "", "add_stake_multiple_extrinsic"], [41, 1, 1, "", "console"], [41, 7, 1, "", "prepare_child_proportions"], [41, 7, 1, "", "set_childkey_take_extrinsic"], [41, 7, 1, "", "set_children_extrinsic"]], "bittensor.extrinsics.transfer": [[42, 7, 1, "", "transfer_extrinsic"]], "bittensor.extrinsics.unstaking": [[43, 7, 1, "", "__do_remove_stake_single"], [43, 7, 1, "", "check_threshold_amount"], [43, 7, 1, "", "unstake_extrinsic"], [43, 7, 1, "", "unstake_multiple_extrinsic"]], "bittensor.keyfile": [[45, 2, 1, "", "Mockkeyfile"], [45, 1, 1, "", "NACL_SALT"], [44, 3, 1, "", "__repr__"], [44, 3, 1, "", "__str__"], [44, 3, 1, "", "_may_overwrite"], [44, 3, 1, "", "_read_keyfile_data_from_file"], [44, 3, 1, "", "_write_keyfile_data_to_file"], [45, 7, 1, "", "ask_password_to_encrypt"], [44, 3, 1, "", "check_and_update_encryption"], [44, 5, 1, "", "data"], [44, 3, 1, "", "decrypt"], [45, 7, 1, "", "decrypt_keyfile_data"], [45, 7, 1, "", "deserialize_keypair_from_keyfile_data"], [44, 3, 1, "", "encrypt"], [45, 7, 1, "", "encrypt_keyfile_data"], [44, 3, 1, "", "exists_on_device"], [45, 7, 1, "", "get_coldkey_password_from_environment"], [44, 3, 1, "", "get_keypair"], [44, 3, 1, "", "is_encrypted"], [44, 3, 1, "", "is_readable"], [44, 3, 1, "", "is_writable"], [45, 2, 1, "", "keyfile"], [44, 5, 1, "", "keyfile_data"], [45, 7, 1, "", "keyfile_data_encryption_method"], [45, 7, 1, "", "keyfile_data_is_encrypted"], [45, 7, 1, "", "keyfile_data_is_encrypted_ansible"], [45, 7, 1, "", "keyfile_data_is_encrypted_legacy"], [45, 7, 1, "", "keyfile_data_is_encrypted_nacl"], [44, 5, 1, "", "keypair"], [45, 7, 1, "", "legacy_encrypt_keyfile_data"], [44, 3, 1, "", "make_dirs"], [44, 4, 1, "", "name"], [44, 4, 1, "", "path"], [45, 7, 1, "", "serialized_keypair_to_keyfile_data"], [44, 3, 1, "", "set_keypair"], [45, 7, 1, "", "validate_password"]], "bittensor.keyfile.Mockkeyfile": [[45, 3, 1, "", "__repr__"], [45, 3, 1, "", "__str__"], [45, 4, 1, "", "_mock_data"], [45, 4, 1, "", "_mock_keypair"], [45, 3, 1, "", "check_and_update_encryption"], [45, 5, 1, "", "data"], [45, 3, 1, "", "decrypt"], [45, 3, 1, "", "encrypt"], [45, 3, 1, "", "exists_on_device"], [45, 3, 1, "", "get_keypair"], [45, 3, 1, "", "is_encrypted"], [45, 3, 1, "", "is_readable"], [45, 3, 1, "", "is_writable"], [45, 5, 1, "", "keypair"], [45, 3, 1, "", "make_dirs"], [45, 4, 1, "", "path"], [45, 3, 1, "", "set_keypair"]], "bittensor.keyfile.keyfile": [[45, 3, 1, "", "__repr__"], [45, 3, 1, "", "__str__"], [45, 3, 1, "", "_may_overwrite"], [45, 3, 1, "", "_read_keyfile_data_from_file"], [45, 3, 1, "", "_write_keyfile_data_to_file"], [45, 3, 1, "", "check_and_update_encryption"], [45, 5, 1, "", "data"], [45, 3, 1, "", "decrypt"], [45, 3, 1, "", "encrypt"], [45, 3, 1, "", "exists_on_device"], [45, 3, 1, "", "get_keypair"], [45, 3, 1, "", "is_encrypted"], [45, 3, 1, "", "is_readable"], [45, 3, 1, "", "is_writable"], [45, 5, 1, "", "keyfile_data"], [45, 5, 1, "", "keypair"], [45, 3, 1, "", "make_dirs"], [45, 4, 1, "", "name"], [45, 4, 1, "", "path"], [45, 3, 1, "", "set_keypair"]], "bittensor.metagraph": [[46, 1, 1, "", "BaseClass"], [46, 1, 1, "", "METAGRAPH_STATE_DICT_NDARRAY_KEYS"], [46, 2, 1, "", "MetagraphMixin"], [46, 2, 1, "", "NonTorchMetagraph"], [46, 2, 1, "", "TorchMetaGraph"], [46, 7, 1, "", "get_save_dir"], [46, 7, 1, "", "latest_block_path"], [46, 1, 1, "", "metagraph"]], "bittensor.metagraph.MetagraphMixin": [[46, 5, 1, "", "B"], [46, 5, 1, "", "C"], [46, 5, 1, "", "D"], [46, 5, 1, "", "E"], [46, 5, 1, "", "I"], [46, 5, 1, "", "R"], [46, 5, 1, "", "S"], [46, 5, 1, "", "T"], [46, 5, 1, "", "Tv"], [46, 5, 1, "", "W"], [46, 3, 1, "", "__repr__"], [46, 3, 1, "", "__str__"], [46, 3, 1, "", "_assign_neurons"], [46, 3, 1, "", "_create_tensor"], [46, 3, 1, "", "_initialize_subtensor"], [46, 3, 1, "", "_process_root_weights"], [46, 3, 1, "", "_process_weights_or_bonds"], [46, 3, 1, "", "_set_metagraph_attributes"], [46, 3, 1, "", "_set_weights_and_bonds"], [46, 4, 1, "", "active"], [46, 5, 1, "", "addresses"], [46, 4, 1, "", "axons"], [46, 4, 1, "", "block"], [46, 4, 1, "", "bonds"], [46, 5, 1, "", "coldkeys"], [46, 4, 1, "", "consensus"], [46, 4, 1, "", "dividends"], [46, 4, 1, "", "emission"], [46, 5, 1, "", "hotkeys"], [46, 4, 1, "", "incentive"], [46, 4, 1, "", "last_update"], [46, 3, 1, "", "load"], [46, 3, 1, "", "load_from_path"], [46, 3, 1, "", "metadata"], [46, 4, 1, "", "n"], [46, 4, 1, "", "netuid"], [46, 4, 1, "", "network"], [46, 4, 1, "", "ranks"], [46, 3, 1, "", "save"], [46, 4, 1, "", "stake"], [46, 3, 1, "", "state_dict"], [46, 3, 1, "", "sync"], [46, 4, 1, "", "total_stake"], [46, 4, 1, "", "trust"], [46, 4, 1, "", "uids"], [46, 4, 1, "", "validator_permit"], [46, 4, 1, "", "validator_trust"], [46, 4, 1, "", "version"], [46, 4, 1, "", "weights"]], "bittensor.metagraph.NonTorchMetagraph": [[46, 3, 1, "", "_set_metagraph_attributes"], [46, 4, 1, "", "active"], [46, 4, 1, "", "axons"], [46, 4, 1, "", "block"], [46, 4, 1, "", "bonds"], [46, 4, 1, "", "consensus"], [46, 4, 1, "", "dividends"], [46, 4, 1, "", "emission"], [46, 4, 1, "", "incentive"], [46, 4, 1, "", "last_update"], [46, 3, 1, "", "load_from_path"], [46, 4, 1, "", "n"], [46, 4, 1, "", "netuid"], [46, 4, 1, "", "network"], [46, 4, 1, "", "ranks"], [46, 4, 1, "", "stake"], [46, 4, 1, "", "total_stake"], [46, 4, 1, "", "trust"], [46, 4, 1, "", "uids"], [46, 4, 1, "", "validator_permit"], [46, 4, 1, "", "validator_trust"], [46, 4, 1, "", "version"], [46, 4, 1, "", "weights"]], "bittensor.metagraph.TorchMetaGraph": [[46, 3, 1, "", "_set_metagraph_attributes"], [46, 4, 1, "", "active"], [46, 4, 1, "", "axons"], [46, 4, 1, "", "block"], [46, 4, 1, "", "bonds"], [46, 4, 1, "", "consensus"], [46, 4, 1, "", "dividends"], [46, 4, 1, "", "emission"], [46, 4, 1, "", "incentive"], [46, 4, 1, "", "last_update"], [46, 3, 1, "", "load_from_path"], [46, 4, 1, "", "n"], [46, 4, 1, "", "netuid"], [46, 4, 1, "", "network"], [46, 4, 1, "", "ranks"], [46, 4, 1, "", "stake"], [46, 4, 1, "", "total_stake"], [46, 4, 1, "", "trust"], [46, 4, 1, "", "uids"], [46, 4, 1, "", "validator_permit"], [46, 4, 1, "", "validator_trust"], [46, 4, 1, "", "version"], [46, 4, 1, "", "weights"]], "bittensor.mock": [[47, 2, 1, "", "MockSubtensor"], [48, 0, 0, "-", "keyfile_mock"], [49, 0, 0, "-", "subtensor_mock"], [50, 0, 0, "-", "wallet_mock"]], "bittensor.mock.MockSubtensor": [[47, 4, 1, "", "__dict__"], [47, 3, 1, "", "_convert_to_balance"], [47, 3, 1, "", "_do_burned_register"], [47, 3, 1, "", "_do_delegation"], [47, 3, 1, "", "_do_nominate"], [47, 3, 1, "", "_do_pow_register"], [47, 3, 1, "", "_do_serve_axon"], [47, 3, 1, "", "_do_serve_prometheus"], [47, 3, 1, "", "_do_set_weights"], [47, 3, 1, "", "_do_stake"], [47, 3, 1, "", "_do_transfer"], [47, 3, 1, "", "_do_undelegation"], [47, 3, 1, "", "_do_unstake"], [47, 3, 1, "", "_get_axon_info"], [47, 3, 1, "", "_get_most_recent_storage"], [47, 3, 1, "", "_get_prometheus_info"], [47, 3, 1, "", "_handle_type_default"], [47, 3, 1, "", "_neuron_subnet_exists"], [47, 3, 1, "", "_register_neuron"], [47, 4, 1, "", "block_number"], [47, 4, 1, "", "chain_state"], [47, 3, 1, "", "commit"], [47, 3, 1, "", "create_subnet"], [47, 3, 1, "", "do_block_step"], [47, 3, 1, "", "force_register_neuron"], [47, 3, 1, "", "force_set_balance"], [47, 3, 1, "", "get_all_subnets_info"], [47, 3, 1, "", "get_balance"], [47, 3, 1, "", "get_balances"], [47, 3, 1, "", "get_block_hash"], [47, 3, 1, "", "get_commitment"], [47, 3, 1, "", "get_current_block"], [47, 3, 1, "", "get_delegate_by_hotkey"], [47, 3, 1, "", "get_delegated"], [47, 3, 1, "", "get_delegates"], [47, 3, 1, "", "get_minimum_required_stake"], [47, 3, 1, "", "get_subnet_info"], [47, 3, 1, "", "get_transfer_fee"], [47, 3, 1, "", "min_required_stake"], [47, 3, 1, "", "neuron_for_uid"], [47, 3, 1, "", "neuron_for_uid_lite"], [47, 3, 1, "", "neurons"], [47, 3, 1, "", "neurons_lite"], [47, 3, 1, "", "query_constant"], [47, 3, 1, "", "query_map_subtensor"], [47, 3, 1, "", "query_subtensor"], [47, 3, 1, "", "reset"], [47, 3, 1, "", "set_difficulty"], [47, 3, 1, "", "setup"], [47, 4, 1, "", "sudo_force_set_balance"]], "bittensor.mock.keyfile_mock": [[48, 2, 1, "", "MockKeyfile"]], "bittensor.mock.keyfile_mock.MockKeyfile": [[48, 3, 1, "", "__repr__"], [48, 3, 1, "", "__str__"], [48, 4, 1, "", "_mock_data"], [48, 4, 1, "", "_mock_keypair"], [48, 5, 1, "", "data"], [48, 3, 1, "", "decrypt"], [48, 3, 1, "", "encrypt"], [48, 3, 1, "", "exists_on_device"], [48, 3, 1, "", "get_keypair"], [48, 3, 1, "", "is_encrypted"], [48, 3, 1, "", "is_readable"], [48, 3, 1, "", "is_writable"], [48, 5, 1, "", "keyfile_data"], [48, 5, 1, "", "keypair"], [48, 3, 1, "", "make_dirs"], [48, 3, 1, "", "set_keypair"]], "bittensor.mock.subtensor_mock": [[49, 2, 1, "", "AxonInfoDict"], [49, 2, 1, "", "AxonServeCallParams"], [49, 1, 1, "", "BlockNumber"], [49, 2, 1, "", "InfoDict"], [49, 2, 1, "", "MockChainState"], [49, 2, 1, "", "MockMapResult"], [49, 2, 1, "", "MockSubtensor"], [49, 2, 1, "", "MockSubtensorState"], [49, 2, 1, "", "MockSubtensorValue"], [49, 2, 1, "", "MockSystemState"], [49, 2, 1, "", "PrometheusInfoDict"], [49, 2, 1, "", "PrometheusServeCallParams"], [49, 1, 1, "", "__GLOBAL_MOCK_STATE__"]], "bittensor.mock.subtensor_mock.AxonInfoDict": [[49, 4, 1, "", "block"], [49, 3, 1, "", "default"], [49, 4, 1, "", "ip"], [49, 4, 1, "", "ip_type"], [49, 4, 1, "", "placeholder1"], [49, 4, 1, "", "placeholder2"], [49, 4, 1, "", "port"], [49, 4, 1, "", "protocol"], [49, 4, 1, "", "version"]], "bittensor.mock.subtensor_mock.AxonServeCallParams": [[49, 4, 1, "", "ip"], [49, 4, 1, "", "ip_type"], [49, 4, 1, "", "netuid"], [49, 4, 1, "", "port"], [49, 4, 1, "", "version"]], "bittensor.mock.subtensor_mock.InfoDict": [[49, 3, 1, "", "__getitem__"], [49, 3, 1, "", "__iter__"], [49, 3, 1, "", "__len__"], [49, 3, 1, "", "__setitem__"], [49, 3, 1, "", "default"]], "bittensor.mock.subtensor_mock.MockChainState": [[49, 4, 1, "", "SubtensorModule"], [49, 4, 1, "", "System"]], "bittensor.mock.subtensor_mock.MockMapResult": [[49, 3, 1, "", "__iter__"], [49, 4, 1, "", "_records"], [49, 4, 1, "", "records"]], "bittensor.mock.subtensor_mock.MockSubtensor": [[49, 4, 1, "", "__dict__"], [49, 3, 1, "", "_convert_to_balance"], [49, 3, 1, "", "_do_burned_register"], [49, 3, 1, "", "_do_delegation"], [49, 3, 1, "", "_do_nominate"], [49, 3, 1, "", "_do_pow_register"], [49, 3, 1, "", "_do_serve_axon"], [49, 3, 1, "", "_do_serve_prometheus"], [49, 3, 1, "", "_do_set_weights"], [49, 3, 1, "", "_do_stake"], [49, 3, 1, "", "_do_transfer"], [49, 3, 1, "", "_do_undelegation"], [49, 3, 1, "", "_do_unstake"], [49, 3, 1, "", "_get_axon_info"], [49, 3, 1, "", "_get_most_recent_storage"], [49, 3, 1, "", "_get_prometheus_info"], [49, 3, 1, "", "_handle_type_default"], [49, 3, 1, "", "_neuron_subnet_exists"], [49, 3, 1, "", "_register_neuron"], [49, 4, 1, "", "block_number"], [49, 4, 1, "", "chain_state"], [49, 3, 1, "", "commit"], [49, 3, 1, "", "create_subnet"], [49, 3, 1, "", "do_block_step"], [49, 3, 1, "", "force_register_neuron"], [49, 3, 1, "", "force_set_balance"], [49, 3, 1, "", "get_all_subnets_info"], [49, 3, 1, "", "get_balance"], [49, 3, 1, "", "get_balances"], [49, 3, 1, "", "get_block_hash"], [49, 3, 1, "", "get_commitment"], [49, 3, 1, "", "get_current_block"], [49, 3, 1, "", "get_delegate_by_hotkey"], [49, 3, 1, "", "get_delegated"], [49, 3, 1, "", "get_delegates"], [49, 3, 1, "", "get_minimum_required_stake"], [49, 3, 1, "", "get_subnet_info"], [49, 3, 1, "", "get_transfer_fee"], [49, 3, 1, "", "min_required_stake"], [49, 3, 1, "", "neuron_for_uid"], [49, 3, 1, "", "neuron_for_uid_lite"], [49, 3, 1, "", "neurons"], [49, 3, 1, "", "neurons_lite"], [49, 3, 1, "", "query_constant"], [49, 3, 1, "", "query_map_subtensor"], [49, 3, 1, "", "query_subtensor"], [49, 3, 1, "", "reset"], [49, 3, 1, "", "set_difficulty"], [49, 3, 1, "", "setup"], [49, 4, 1, "", "sudo_force_set_balance"]], "bittensor.mock.subtensor_mock.MockSubtensorState": [[49, 4, 1, "", "Active"], [49, 4, 1, "", "Delegates"], [49, 4, 1, "", "Difficulty"], [49, 4, 1, "", "ImmunityPeriod"], [49, 4, 1, "", "Kappa"], [49, 4, 1, "", "NetworksAdded"], [49, 4, 1, "", "Rho"], [49, 4, 1, "", "Stake"], [49, 4, 1, "", "ValidatorBatchSize"]], "bittensor.mock.subtensor_mock.MockSubtensorValue": [[49, 4, 1, "", "value"]], "bittensor.mock.subtensor_mock.MockSystemState": [[49, 4, 1, "", "Account"]], "bittensor.mock.subtensor_mock.PrometheusInfoDict": [[49, 4, 1, "", "block"], [49, 3, 1, "", "default"], [49, 4, 1, "", "ip"], [49, 4, 1, "", "ip_type"], [49, 4, 1, "", "port"], [49, 4, 1, "", "version"]], "bittensor.mock.subtensor_mock.PrometheusServeCallParams": [[49, 4, 1, "", "ip"], [49, 4, 1, "", "ip_type"], [49, 4, 1, "", "netuid"], [49, 4, 1, "", "port"], [49, 4, 1, "", "version"]], "bittensor.mock.wallet_mock": [[50, 2, 1, "", "MockWallet"], [50, 7, 1, "", "get_mock_coldkey"], [50, 7, 1, "", "get_mock_hotkey"], [50, 7, 1, "", "get_mock_keypair"], [50, 7, 1, "", "get_mock_wallet"]], "bittensor.mock.wallet_mock.MockWallet": [[50, 4, 1, "", "_is_mock"], [50, 4, 1, "", "_mocked_coldkey_keyfile"], [50, 4, 1, "", "_mocked_hotkey_keyfile"], [50, 5, 1, "", "coldkey_file"], [50, 5, 1, "", "coldkeypub_file"], [50, 5, 1, "", "hotkey_file"]], "bittensor.stream": [[51, 2, 1, "", "BTStreamingResponseModel"], [51, 2, 1, "", "StreamingSynapse"]], "bittensor.stream.BTStreamingResponseModel": [[51, 4, 1, "", "token_streamer"]], "bittensor.stream.StreamingSynapse": [[51, 2, 1, "", "BTStreamingResponse"], [51, 3, 1, "", "create_streaming_response"], [51, 3, 1, "", "extract_response_json"], [51, 4, 1, "", "model_config"], [51, 3, 1, "", "process_streaming_response"]], "bittensor.stream.StreamingSynapse.BTStreamingResponse": [[51, 3, 1, "", "__call__"], [51, 3, 1, "", "stream_response"], [51, 4, 1, "", "synapse"], [51, 4, 1, "", "token_streamer"]], "bittensor.subnets": [[52, 2, 1, "", "SubnetsAPI"]], "bittensor.subnets.SubnetsAPI": [[52, 3, 1, "", "__call__"], [52, 4, 1, "", "dendrite"], [52, 3, 1, "", "prepare_synapse"], [52, 3, 1, "", "process_responses"], [52, 3, 1, "", "query_api"], [52, 4, 1, "", "wallet"]], "bittensor.subtensor": [[53, 1, 1, "", "KEY_NONCE"], [53, 2, 1, "", "ParamWithTypes"], [53, 2, 1, "", "Subtensor"], [44, 3, 1, "", "__repr__"], [44, 3, 1, "", "__str__"], [44, 4, 1, "", "_connection_timeout"], [44, 3, 1, "", "_do_associate_ips"], [44, 3, 1, "", "_do_burned_register"], [44, 3, 1, "", "_do_commit_weights"], [44, 3, 1, "", "_do_decrease_take"], [44, 3, 1, "", "_do_delegation"], [44, 3, 1, "", "_do_increase_take"], [44, 3, 1, "", "_do_nominate"], [44, 3, 1, "", "_do_pow_register"], [44, 3, 1, "", "_do_reveal_weights"], [44, 3, 1, "", "_do_root_register"], [44, 3, 1, "", "_do_serve_axon"], [44, 3, 1, "", "_do_serve_prometheus"], [44, 3, 1, "", "_do_set_childkey_take"], [44, 3, 1, "", "_do_set_children"], [44, 3, 1, "", "_do_set_root_weights"], [44, 3, 1, "", "_do_set_weights"], [44, 3, 1, "", "_do_stake"], [44, 3, 1, "", "_do_swap_hotkey"], [44, 3, 1, "", "_do_transfer"], [44, 3, 1, "", "_do_undelegation"], [44, 3, 1, "", "_do_unstake"], [44, 3, 1, "", "_encode_params"], [44, 3, 1, "", "_get_hyperparameter"], [44, 3, 1, "", "_get_substrate"], [44, 3, 1, "", "_null_neuron"], [44, 4, 1, "", "_subtensor_errors"], [44, 3, 1, "", "add_args"], [44, 3, 1, "", "add_stake"], [44, 3, 1, "", "add_stake_multiple"], [44, 3, 1, "", "adjustment_alpha"], [44, 5, 1, "", "block"], [44, 3, 1, "", "blocks_since_epoch"], [44, 3, 1, "", "blocks_since_last_update"], [44, 3, 1, "", "bonds"], [44, 3, 1, "", "bonds_moving_avg"], [44, 3, 1, "", "burned_register"], [44, 3, 1, "", "check_in_arbitration"], [44, 3, 1, "", "close"], [44, 3, 1, "", "commit"], [44, 3, 1, "", "commit_weights"], [44, 4, 1, "", "config"], [44, 3, 1, "", "delegate"], [44, 3, 1, "", "determine_chain_endpoint_and_network"], [44, 3, 1, "", "difficulty"], [44, 3, 1, "", "does_hotkey_exist"], [44, 3, 1, "", "get_all_neurons_for_pubkey"], [44, 3, 1, "", "get_all_subnet_netuids"], [44, 3, 1, "", "get_all_subnets_info"], [44, 3, 1, "", "get_all_uids_for_hotkey"], [44, 3, 1, "", "get_axon_info"], [44, 3, 1, "", "get_balance"], [44, 3, 1, "", "get_balances"], [44, 3, 1, "", "get_block_hash"], [44, 3, 1, "", "get_childkey_take"], [44, 3, 1, "", "get_children"], [44, 3, 1, "", "get_commitment"], [44, 3, 1, "", "get_current_block"], [44, 3, 1, "", "get_delegate_by_hotkey"], [44, 3, 1, "", "get_delegate_take"], [44, 3, 1, "", "get_delegated"], [44, 3, 1, "", "get_delegates"], [44, 3, 1, "", "get_delegates_lite"], [44, 3, 1, "", "get_emission_value_by_subnet"], [44, 3, 1, "", "get_error_info_by_index"], [44, 3, 1, "", "get_existential_deposit"], [44, 3, 1, "", "get_hotkey_owner"], [44, 3, 1, "", "get_minimum_required_stake"], [44, 3, 1, "", "get_netuids_for_hotkey"], [44, 3, 1, "", "get_neuron_for_pubkey_and_subnet"], [44, 3, 1, "", "get_nominators_for_hotkey"], [44, 3, 1, "", "get_parents"], [44, 3, 1, "", "get_prometheus_info"], [44, 3, 1, "", "get_proposal_call_data"], [44, 3, 1, "", "get_proposal_hashes"], [44, 4, 1, "", "get_proposal_vote_data"], [44, 3, 1, "", "get_proposals"], [44, 3, 1, "", "get_remaining_arbitration_period"], [44, 3, 1, "", "get_senate_members"], [44, 3, 1, "", "get_stake"], [44, 3, 1, "", "get_stake_for_coldkey_and_hotkey"], [44, 3, 1, "", "get_stake_info_for_coldkey"], [44, 3, 1, "", "get_stake_info_for_coldkeys"], [44, 3, 1, "", "get_subnet_burn_cost"], [44, 3, 1, "", "get_subnet_connection_requirement"], [44, 3, 1, "", "get_subnet_connection_requirements"], [44, 3, 1, "", "get_subnet_hyperparameters"], [44, 3, 1, "", "get_subnet_info"], [44, 3, 1, "", "get_subnet_modality"], [44, 3, 1, "", "get_subnet_owner"], [44, 3, 1, "", "get_subnets"], [44, 3, 1, "", "get_total_stake_for_coldkey"], [44, 3, 1, "", "get_total_stake_for_hotkey"], [44, 3, 1, "", "get_total_subnets"], [44, 3, 1, "", "get_transfer_fee"], [44, 3, 1, "", "get_uid_for_hotkey_on_subnet"], [44, 3, 1, "", "get_vote_data"], [44, 3, 1, "", "help"], [44, 3, 1, "", "immunity_period"], [44, 3, 1, "", "incentive"], [44, 3, 1, "", "is_hotkey_delegate"], [44, 3, 1, "", "is_hotkey_registered"], [44, 3, 1, "", "is_hotkey_registered_any"], [44, 3, 1, "", "is_hotkey_registered_on_subnet"], [44, 3, 1, "", "is_senate_member"], [44, 3, 1, "", "kappa"], [44, 3, 1, "", "leave_senate"], [44, 4, 1, "", "log_verbose"], [44, 3, 1, "", "max_allowed_validators"], [44, 3, 1, "", "max_n"], [44, 3, 1, "", "max_weight_limit"], [44, 3, 1, "", "metagraph"], [44, 3, 1, "", "min_allowed_weights"], [44, 3, 1, "", "neuron_for_uid"], [44, 3, 1, "", "neuron_for_uid_lite"], [44, 3, 1, "", "neuron_for_wallet"], [44, 3, 1, "", "neuron_has_validator_permit"], [44, 3, 1, "", "neurons"], [44, 3, 1, "", "neurons_lite"], [44, 3, 1, "", "nominate"], [44, 3, 1, "", "query_constant"], [44, 3, 1, "", "query_identity"], [44, 3, 1, "", "query_map"], [44, 3, 1, "", "query_map_subtensor"], [44, 3, 1, "", "query_module"], [44, 3, 1, "", "query_runtime_api"], [44, 3, 1, "", "query_subtensor"], [44, 3, 1, "", "recycle"], [44, 3, 1, "", "register"], [44, 3, 1, "", "register_senate"], [44, 3, 1, "", "register_subnetwork"], [44, 3, 1, "", "reveal_weights"], [44, 3, 1, "", "rho"], [44, 3, 1, "", "root_register"], [44, 3, 1, "", "root_set_weights"], [44, 3, 1, "", "run_faucet"], [44, 3, 1, "", "scaling_law_power"], [44, 3, 1, "", "send_extrinsic"], [44, 3, 1, "", "serve"], [44, 3, 1, "", "serve_axon"], [44, 3, 1, "", "serve_prometheus"], [44, 3, 1, "", "serving_rate_limit"], [44, 3, 1, "", "set_childkey_take"], [44, 3, 1, "", "set_children"], [44, 3, 1, "", "set_hyperparameter"], [44, 3, 1, "", "set_take"], [44, 3, 1, "", "set_weights"], [44, 3, 1, "", "setup_config"], [44, 3, 1, "", "state_call"], [44, 3, 1, "", "subnet_exists"], [44, 3, 1, "", "subnetwork_n"], [53, 1, 1, "", "subtensor"], [44, 3, 1, "", "swap_hotkey"], [44, 3, 1, "", "synergy_scaling_law_power"], [44, 3, 1, "", "tempo"], [44, 3, 1, "", "total_issuance"], [44, 3, 1, "", "total_stake"], [44, 3, 1, "", "transfer"], [44, 3, 1, "", "tx_rate_limit"], [44, 3, 1, "", "undelegate"], [44, 3, 1, "", "unstake"], [44, 3, 1, "", "unstake_multiple"], [44, 3, 1, "", "update_identity"], [44, 3, 1, "", "validator_batch_size"], [44, 3, 1, "", "validator_epoch_length"], [44, 3, 1, "", "validator_epochs_per_reset"], [44, 3, 1, "", "validator_exclude_quantile"], [44, 3, 1, "", "validator_logits_divergence"], [44, 3, 1, "", "validator_prune_len"], [44, 3, 1, "", "validator_sequence_length"], [44, 3, 1, "", "vote_senate"], [44, 3, 1, "", "weights"], [44, 3, 1, "", "weights_rate_limit"]], "bittensor.subtensor.ParamWithTypes": [[53, 4, 1, "", "name"], [53, 4, 1, "", "type"]], "bittensor.subtensor.Subtensor": [[53, 3, 1, "", "__repr__"], [53, 3, 1, "", "__str__"], [53, 4, 1, "", "_connection_timeout"], [53, 3, 1, "", "_do_associate_ips"], [53, 3, 1, "", "_do_burned_register"], [53, 3, 1, "", "_do_commit_weights"], [53, 3, 1, "", "_do_decrease_take"], [53, 3, 1, "", "_do_delegation"], [53, 3, 1, "", "_do_increase_take"], [53, 3, 1, "", "_do_nominate"], [53, 3, 1, "", "_do_pow_register"], [53, 3, 1, "", "_do_reveal_weights"], [53, 3, 1, "", "_do_root_register"], [53, 3, 1, "", "_do_serve_axon"], [53, 3, 1, "", "_do_serve_prometheus"], [53, 3, 1, "", "_do_set_childkey_take"], [53, 3, 1, "", "_do_set_children"], [53, 3, 1, "", "_do_set_root_weights"], [53, 3, 1, "", "_do_set_weights"], [53, 3, 1, "", "_do_stake"], [53, 3, 1, "", "_do_swap_hotkey"], [53, 3, 1, "", "_do_transfer"], [53, 3, 1, "", "_do_undelegation"], [53, 3, 1, "", "_do_unstake"], [53, 3, 1, "", "_encode_params"], [53, 3, 1, "", "_get_hyperparameter"], [53, 3, 1, "", "_get_substrate"], [53, 3, 1, "", "_null_neuron"], [53, 4, 1, "", "_subtensor_errors"], [53, 3, 1, "", "add_args"], [53, 3, 1, "", "add_stake"], [53, 3, 1, "", "add_stake_multiple"], [53, 3, 1, "", "adjustment_alpha"], [53, 5, 1, "", "block"], [53, 3, 1, "", "blocks_since_epoch"], [53, 3, 1, "", "blocks_since_last_update"], [53, 3, 1, "", "bonds"], [53, 3, 1, "", "bonds_moving_avg"], [53, 3, 1, "", "burned_register"], [53, 3, 1, "", "check_in_arbitration"], [53, 3, 1, "", "close"], [53, 3, 1, "", "commit"], [53, 3, 1, "", "commit_weights"], [53, 4, 1, "", "config"], [53, 3, 1, "", "delegate"], [53, 3, 1, "", "determine_chain_endpoint_and_network"], [53, 3, 1, "", "difficulty"], [53, 3, 1, "", "does_hotkey_exist"], [53, 3, 1, "", "get_all_neurons_for_pubkey"], [53, 3, 1, "", "get_all_subnet_netuids"], [53, 3, 1, "", "get_all_subnets_info"], [53, 3, 1, "", "get_all_uids_for_hotkey"], [53, 3, 1, "", "get_axon_info"], [53, 3, 1, "", "get_balance"], [53, 3, 1, "", "get_balances"], [53, 3, 1, "", "get_block_hash"], [53, 3, 1, "", "get_childkey_take"], [53, 3, 1, "", "get_children"], [53, 3, 1, "", "get_commitment"], [53, 3, 1, "", "get_current_block"], [53, 3, 1, "", "get_delegate_by_hotkey"], [53, 3, 1, "", "get_delegate_take"], [53, 3, 1, "", "get_delegated"], [53, 3, 1, "", "get_delegates"], [53, 3, 1, "", "get_delegates_lite"], [53, 3, 1, "", "get_emission_value_by_subnet"], [53, 3, 1, "", "get_error_info_by_index"], [53, 3, 1, "", "get_existential_deposit"], [53, 3, 1, "", "get_hotkey_owner"], [53, 3, 1, "", "get_minimum_required_stake"], [53, 3, 1, "", "get_netuids_for_hotkey"], [53, 3, 1, "", "get_neuron_for_pubkey_and_subnet"], [53, 3, 1, "", "get_nominators_for_hotkey"], [53, 3, 1, "", "get_parents"], [53, 3, 1, "", "get_prometheus_info"], [53, 3, 1, "", "get_proposal_call_data"], [53, 3, 1, "", "get_proposal_hashes"], [53, 4, 1, "", "get_proposal_vote_data"], [53, 3, 1, "", "get_proposals"], [53, 3, 1, "", "get_remaining_arbitration_period"], [53, 3, 1, "", "get_senate_members"], [53, 3, 1, "", "get_stake"], [53, 3, 1, "", "get_stake_for_coldkey_and_hotkey"], [53, 3, 1, "", "get_stake_info_for_coldkey"], [53, 3, 1, "", "get_stake_info_for_coldkeys"], [53, 3, 1, "", "get_subnet_burn_cost"], [53, 3, 1, "", "get_subnet_connection_requirement"], [53, 3, 1, "", "get_subnet_connection_requirements"], [53, 3, 1, "", "get_subnet_hyperparameters"], [53, 3, 1, "", "get_subnet_info"], [53, 3, 1, "", "get_subnet_modality"], [53, 3, 1, "", "get_subnet_owner"], [53, 3, 1, "", "get_subnets"], [53, 3, 1, "", "get_total_stake_for_coldkey"], [53, 3, 1, "", "get_total_stake_for_hotkey"], [53, 3, 1, "", "get_total_subnets"], [53, 3, 1, "", "get_transfer_fee"], [53, 3, 1, "", "get_uid_for_hotkey_on_subnet"], [53, 3, 1, "", "get_vote_data"], [53, 3, 1, "", "help"], [53, 3, 1, "", "immunity_period"], [53, 3, 1, "", "incentive"], [53, 3, 1, "", "is_hotkey_delegate"], [53, 3, 1, "", "is_hotkey_registered"], [53, 3, 1, "", "is_hotkey_registered_any"], [53, 3, 1, "", "is_hotkey_registered_on_subnet"], [53, 3, 1, "", "is_senate_member"], [53, 3, 1, "", "kappa"], [53, 3, 1, "", "leave_senate"], [53, 4, 1, "", "log_verbose"], [53, 3, 1, "", "max_allowed_validators"], [53, 3, 1, "", "max_n"], [53, 3, 1, "", "max_weight_limit"], [53, 3, 1, "", "metagraph"], [53, 3, 1, "", "min_allowed_weights"], [53, 3, 1, "", "neuron_for_uid"], [53, 3, 1, "", "neuron_for_uid_lite"], [53, 3, 1, "", "neuron_for_wallet"], [53, 3, 1, "", "neuron_has_validator_permit"], [53, 3, 1, "", "neurons"], [53, 3, 1, "", "neurons_lite"], [53, 3, 1, "", "nominate"], [53, 3, 1, "", "query_constant"], [53, 3, 1, "", "query_identity"], [53, 3, 1, "", "query_map"], [53, 3, 1, "", "query_map_subtensor"], [53, 3, 1, "", "query_module"], [53, 3, 1, "", "query_runtime_api"], [53, 3, 1, "", "query_subtensor"], [53, 3, 1, "", "recycle"], [53, 3, 1, "", "register"], [53, 3, 1, "", "register_senate"], [53, 3, 1, "", "register_subnetwork"], [53, 3, 1, "", "reveal_weights"], [53, 3, 1, "", "rho"], [53, 3, 1, "", "root_register"], [53, 3, 1, "", "root_set_weights"], [53, 3, 1, "", "run_faucet"], [53, 3, 1, "", "scaling_law_power"], [53, 3, 1, "", "send_extrinsic"], [53, 3, 1, "", "serve"], [53, 3, 1, "", "serve_axon"], [53, 3, 1, "", "serve_prometheus"], [53, 3, 1, "", "serving_rate_limit"], [53, 3, 1, "", "set_childkey_take"], [53, 3, 1, "", "set_children"], [53, 3, 1, "", "set_hyperparameter"], [53, 3, 1, "", "set_take"], [53, 3, 1, "", "set_weights"], [53, 3, 1, "", "setup_config"], [53, 3, 1, "", "state_call"], [53, 3, 1, "", "subnet_exists"], [53, 3, 1, "", "subnetwork_n"], [53, 3, 1, "", "swap_hotkey"], [53, 3, 1, "", "synergy_scaling_law_power"], [53, 3, 1, "", "tempo"], [53, 3, 1, "", "total_issuance"], [53, 3, 1, "", "total_stake"], [53, 3, 1, "", "transfer"], [53, 3, 1, "", "tx_rate_limit"], [53, 3, 1, "", "undelegate"], [53, 3, 1, "", "unstake"], [53, 3, 1, "", "unstake_multiple"], [53, 3, 1, "", "update_identity"], [53, 3, 1, "", "validator_batch_size"], [53, 3, 1, "", "validator_epoch_length"], [53, 3, 1, "", "validator_epochs_per_reset"], [53, 3, 1, "", "validator_exclude_quantile"], [53, 3, 1, "", "validator_logits_divergence"], [53, 3, 1, "", "validator_prune_len"], [53, 3, 1, "", "validator_sequence_length"], [53, 3, 1, "", "vote_senate"], [53, 3, 1, "", "weights"], [53, 3, 1, "", "weights_rate_limit"]], "bittensor.synapse": [[54, 2, 1, "", "Synapse"], [54, 2, 1, "", "TerminalInfo"], [54, 7, 1, "", "cast_float"], [54, 7, 1, "", "cast_int"], [54, 7, 1, "", "get_size"]], "bittensor.synapse.Synapse": [[54, 3, 1, "id1", "__setattr__"], [54, 4, 1, "", "_extract_header_size"], [54, 4, 1, "", "_extract_timeout"], [54, 4, 1, "", "_extract_total_size"], [54, 3, 1, "", "_get_cached_model_json_schema"], [54, 4, 1, "", "_model_json_schema"], [54, 4, 1, "", "axon"], [54, 5, 1, "id4", "body_hash"], [54, 4, 1, "", "computed_body_hash"], [54, 4, 1, "", "dendrite"], [54, 3, 1, "id0", "deserialize"], [54, 5, 1, "", "failed_verification"], [54, 3, 1, "id6", "from_headers"], [54, 3, 1, "", "get_required_fields"], [54, 3, 1, "id2", "get_total_size"], [54, 4, 1, "", "header_size"], [54, 5, 1, "", "is_blacklist"], [54, 5, 1, "", "is_failure"], [54, 5, 1, "", "is_success"], [54, 5, 1, "", "is_timeout"], [54, 4, 1, "", "model_config"], [54, 4, 1, "", "name"], [54, 3, 1, "id5", "parse_headers_to_inputs"], [54, 4, 1, "", "required_hash_fields"], [54, 3, 1, "", "set_name_type"], [54, 4, 1, "", "timeout"], [54, 3, 1, "id3", "to_headers"], [54, 4, 1, "", "total_size"]], "bittensor.synapse.TerminalInfo": [[54, 4, 1, "", "_extract_nonce"], [54, 4, 1, "", "_extract_port"], [54, 4, 1, "", "_extract_process_time"], [54, 4, 1, "", "_extract_status_code"], [54, 4, 1, "", "_extract_version"], [54, 4, 1, "", "hotkey"], [54, 4, 1, "", "ip"], [54, 4, 1, "", "model_config"], [54, 4, 1, "", "nonce"], [54, 4, 1, "", "port"], [54, 4, 1, "", "process_time"], [54, 4, 1, "", "signature"], [54, 4, 1, "", "status_code"], [54, 4, 1, "", "status_message"], [54, 4, 1, "", "uuid"], [54, 4, 1, "", "version"]], "bittensor.tensor": [[55, 2, 1, "", "DTypes"], [55, 2, 1, "", "Tensor"], [55, 7, 1, "", "cast_dtype"], [55, 7, 1, "", "cast_shape"], [55, 1, 1, "", "dtypes"], [55, 2, 1, "", "tensor"]], "bittensor.tensor.DTypes": [[55, 3, 1, "", "__contains__"], [55, 3, 1, "", "__getitem__"], [55, 3, 1, "", "_add_torch"], [55, 4, 1, "", "torch"]], "bittensor.tensor.Tensor": [[55, 4, 1, "", "_extract_dtype"], [55, 4, 1, "", "_extract_shape"], [55, 4, 1, "", "buffer"], [55, 3, 1, "", "deserialize"], [55, 4, 1, "", "dtype"], [55, 4, 1, "", "model_config"], [55, 3, 1, "", "numpy"], [55, 3, 1, "", "serialize"], [55, 4, 1, "", "shape"], [55, 3, 1, "", "tensor"], [55, 3, 1, "", "tolist"]], "bittensor.threadpool": [[56, 6, 1, "", "BrokenThreadPool"], [56, 1, 1, "", "NULL_ENTRY"], [56, 2, 1, "", "PriorityThreadPoolExecutor"], [56, 2, 1, "", "_WorkItem"], [56, 1, 1, "", "__author__"], [56, 1, 1, "", "_shutdown"], [56, 1, 1, "", "_threads_queues"], [56, 7, 1, "", "_worker"], [56, 1, 1, "", "logger"]], "bittensor.threadpool.PriorityThreadPoolExecutor": [[56, 3, 1, "", "_adjust_thread_count"], [56, 4, 1, "", "_broken"], [56, 4, 1, "", "_counter"], [56, 4, 1, "", "_idle_semaphore"], [56, 4, 1, "", "_initargs"], [56, 4, 1, "", "_initializer"], [56, 3, 1, "", "_initializer_failed"], [56, 4, 1, "", "_max_workers"], [56, 4, 1, "", "_shutdown"], [56, 4, 1, "", "_shutdown_lock"], [56, 4, 1, "", "_thread_name_prefix"], [56, 4, 1, "", "_threads"], [56, 4, 1, "", "_work_queue"], [56, 3, 1, "", "add_args"], [56, 3, 1, "", "config"], [56, 5, 1, "", "is_empty"], [56, 3, 1, "", "shutdown"], [56, 3, 1, "", "submit"]], "bittensor.threadpool._WorkItem": [[56, 4, 1, "", "args"], [56, 4, 1, "", "fn"], [56, 4, 1, "", "future"], [56, 4, 1, "", "kwargs"], [56, 3, 1, "", "run"], [56, 4, 1, "", "start_time"]], "bittensor.types": [[57, 2, 1, "", "AxonServeCallParams"], [57, 2, 1, "", "PrometheusServeCallParams"]], "bittensor.types.AxonServeCallParams": [[57, 4, 1, "", "ip"], [57, 4, 1, "", "ip_type"], [57, 4, 1, "", "netuid"], [57, 4, 1, "", "port"], [57, 4, 1, "", "version"]], "bittensor.types.PrometheusServeCallParams": [[57, 4, 1, "", "ip"], [57, 4, 1, "", "ip_type"], [57, 4, 1, "", "netuid"], [57, 4, 1, "", "port"], [57, 4, 1, "", "version"]], "bittensor.utils": [[62, 1, 1, "", "RAOPERTAO"], [62, 1, 1, "", "U16_MAX"], [62, 7, 1, "", "U16_NORMALIZED_FLOAT"], [62, 1, 1, "", "U64_MAX"], [62, 7, 1, "", "U64_NORMALIZED_FLOAT"], [62, 6, 1, "", "VersionCheckError"], [58, 0, 0, "-", "_register_cuda"], [62, 7, 1, "", "_unbiased_topk"], [59, 0, 0, "-", "axon_utils"], [60, 0, 0, "-", "balance"], [62, 7, 1, "", "check_version"], [62, 7, 1, "", "create_identity_dict"], [62, 7, 1, "", "decode_hex_identity_dict"], [62, 7, 1, "", "format_error_message"], [61, 0, 0, "-", "formatting"], [62, 7, 1, "", "get_explorer_root_url_by_network_from_map"], [62, 7, 1, "", "get_explorer_url_for_network"], [62, 7, 1, "", "get_ss58_format"], [62, 7, 1, "", "hash"], [62, 7, 1, "", "is_valid_bittensor_address_or_public_key"], [62, 7, 1, "", "is_valid_ed25519_pubkey"], [62, 7, 1, "", "is_valid_ss58_address"], [63, 0, 0, "-", "networking"], [64, 0, 0, "-", "registration"], [62, 7, 1, "", "ss58_address_to_bytes"], [62, 7, 1, "", "ss58_to_vec_u8"], [62, 7, 1, "", "strtobool"], [62, 7, 1, "", "strtobool_with_default"], [65, 0, 0, "-", "subtensor"], [66, 0, 0, "-", "test_utils"], [62, 1, 1, "", "torch"], [62, 7, 1, "", "u8_key_to_ss58"], [62, 7, 1, "", "unbiased_topk"], [62, 7, 1, "", "use_torch"], [67, 0, 0, "-", "version"], [62, 7, 1, "", "version_checking"], [68, 0, 0, "-", "wallet_utils"], [69, 0, 0, "-", "weight_utils"]], "bittensor.utils._register_cuda": [[58, 7, 1, "", "log_cuda_errors"], [58, 7, 1, "", "reset_cuda"], [58, 7, 1, "", "solve_cuda"]], "bittensor.utils.axon_utils": [[59, 7, 1, "", "allowed_nonce_window_ns"], [59, 7, 1, "", "calculate_diff_seconds"]], "bittensor.utils.balance": [[60, 2, 1, "", "Balance"]], "bittensor.utils.balance.Balance": [[60, 3, 1, "", "__abs__"], [60, 3, 1, "", "__add__"], [60, 3, 1, "", "__eq__"], [60, 3, 1, "", "__float__"], [60, 3, 1, "", "__floordiv__"], [60, 3, 1, "", "__ge__"], [60, 3, 1, "", "__gt__"], [60, 3, 1, "", "__int__"], [60, 3, 1, "", "__le__"], [60, 3, 1, "", "__lt__"], [60, 3, 1, "", "__mul__"], [60, 3, 1, "", "__ne__"], [60, 3, 1, "", "__neg__"], [60, 3, 1, "", "__nonzero__"], [60, 3, 1, "", "__pos__"], [60, 3, 1, "", "__radd__"], [60, 3, 1, "", "__repr__"], [60, 3, 1, "", "__rfloordiv__"], [60, 3, 1, "", "__rich__"], [60, 3, 1, "", "__rich_rao__"], [60, 3, 1, "", "__rmul__"], [60, 3, 1, "", "__rsub__"], [60, 3, 1, "", "__rtruediv__"], [60, 3, 1, "", "__str__"], [60, 3, 1, "", "__str_rao__"], [60, 3, 1, "", "__sub__"], [60, 3, 1, "", "__truediv__"], [60, 3, 1, "", "from_float"], [60, 3, 1, "", "from_rao"], [60, 3, 1, "", "from_tao"], [60, 4, 1, "", "rao"], [60, 4, 1, "", "rao_unit"], [60, 5, 1, "", "tao"], [60, 4, 1, "", "unit"]], "bittensor.utils.formatting": [[61, 7, 1, "", "convert_blocks_to_time"], [61, 7, 1, "", "float_to_u16"], [61, 7, 1, "", "float_to_u64"], [61, 7, 1, "", "get_human_readable"], [61, 7, 1, "", "millify"], [61, 7, 1, "", "normalize_u64_values"], [61, 7, 1, "", "u16_to_float"], [61, 7, 1, "", "u64_to_float"]], "bittensor.utils.networking": [[63, 6, 1, "", "ExternalIPNotFound"], [63, 7, 1, "", "ensure_connected"], [63, 7, 1, "", "get_external_ip"], [63, 7, 1, "", "get_formatted_ws_endpoint_url"], [63, 7, 1, "", "int_to_ip"], [63, 7, 1, "", "ip__str__"], [63, 7, 1, "", "ip_to_int"], [63, 7, 1, "", "ip_version"]], "bittensor.utils.registration": [[64, 6, 1, "", "CUDAException"], [64, 2, 1, "", "LazyLoadedTorch"], [64, 2, 1, "", "POWSolution"], [64, 2, 1, "", "RegistrationStatistics"], [64, 2, 1, "", "RegistrationStatisticsLogger"], [64, 2, 1, "", "_CUDASolver"], [64, 2, 1, "", "_Solver"], [64, 2, 1, "", "_SolverBase"], [64, 2, 1, "", "_UsingSpawnStartMethod"], [64, 7, 1, "", "_check_for_newest_block_and_update"], [64, 7, 1, "", "_create_seal_hash"], [64, 7, 1, "", "_get_block_with_retry"], [64, 7, 1, "", "_get_real_torch"], [64, 7, 1, "", "_hash_block_with_hotkey"], [64, 7, 1, "", "_hex_bytes_to_u8_list"], [64, 7, 1, "", "_registration_diff_pack"], [64, 7, 1, "", "_registration_diff_unpack"], [64, 7, 1, "", "_seal_meets_difficulty"], [64, 7, 1, "", "_solve_for_difficulty_fast"], [64, 7, 1, "", "_solve_for_difficulty_fast_cuda"], [64, 7, 1, "", "_solve_for_nonce_block"], [64, 7, 1, "", "_solve_for_nonce_block_cuda"], [64, 7, 1, "", "_terminate_workers_and_wait_for_exit"], [64, 7, 1, "", "_update_curr_block"], [64, 7, 1, "", "create_pow"], [64, 7, 1, "", "get_cpu_count"], [64, 7, 1, "", "legacy_torch_api_compat"], [64, 7, 1, "", "log_no_torch_error"], [64, 1, 1, "", "torch"], [64, 7, 1, "", "use_torch"]], "bittensor.utils.registration.LazyLoadedTorch": [[64, 3, 1, "", "__bool__"], [64, 3, 1, "", "__getattr__"]], "bittensor.utils.registration.POWSolution": [[64, 4, 1, "", "block_number"], [64, 4, 1, "", "difficulty"], [64, 3, 1, "", "is_stale"], [64, 4, 1, "", "nonce"], [64, 4, 1, "", "seal"]], "bittensor.utils.registration.RegistrationStatistics": [[64, 4, 1, "", "block_hash"], [64, 4, 1, "", "block_number"], [64, 4, 1, "", "difficulty"], [64, 4, 1, "", "hash_rate"], [64, 4, 1, "", "hash_rate_perpetual"], [64, 4, 1, "", "rounds_total"], [64, 4, 1, "", "time_average"], [64, 4, 1, "", "time_spent"], [64, 4, 1, "", "time_spent_total"]], "bittensor.utils.registration.RegistrationStatisticsLogger": [[64, 4, 1, "", "console"], [64, 3, 1, "", "get_status_message"], [64, 3, 1, "", "start"], [64, 4, 1, "", "status"], [64, 3, 1, "", "stop"], [64, 3, 1, "", "update"]], "bittensor.utils.registration._CUDASolver": [[64, 4, 1, "", "dev_id"], [64, 3, 1, "", "run"], [64, 4, 1, "", "tpb"]], "bittensor.utils.registration._Solver": [[64, 3, 1, "", "run"]], "bittensor.utils.registration._SolverBase": [[64, 4, 1, "", "check_block"], [64, 3, 1, "", "create_shared_memory"], [64, 4, 1, "", "curr_block"], [64, 4, 1, "", "curr_block_num"], [64, 4, 1, "", "curr_diff"], [64, 4, 1, "", "finished_queue"], [64, 4, 1, "", "hotkey_bytes"], [64, 4, 1, "", "limit"], [64, 4, 1, "", "newBlockEvent"], [64, 4, 1, "", "num_proc"], [64, 4, 1, "", "proc_num"], [64, 3, 1, "", "run"], [64, 4, 1, "", "solution_queue"], [64, 4, 1, "", "stopEvent"], [64, 4, 1, "", "update_interval"]], "bittensor.utils.registration._UsingSpawnStartMethod": [[64, 3, 1, "", "__enter__"], [64, 3, 1, "", "__exit__"], [64, 4, 1, "", "_force"], [64, 4, 1, "", "_old_start_method"]], "bittensor.utils.subtensor": [[65, 1, 1, "", "_BT_DIR"], [65, 1, 1, "", "_ERRORS_FILE_PATH"], [65, 1, 1, "", "_ST_BUILD_ID"], [65, 1, 1, "", "_USER_HOME_DIR"], [65, 7, 1, "", "_get_errors_from_cache"], [65, 7, 1, "", "_get_errors_from_pallet"], [65, 1, 1, "", "_logger"], [65, 7, 1, "", "_save_errors_to_cache"], [65, 7, 1, "", "format_children"], [65, 7, 1, "", "format_parent"], [65, 7, 1, "", "get_subtensor_errors"]], "bittensor.utils.test_utils": [[66, 7, 1, "", "get_random_unused_port"], [66, 1, 1, "", "max_tries"]], "bittensor.utils.version": [[67, 1, 1, "", "VERSION_CHECK_THRESHOLD"], [67, 6, 1, "", "VersionCheckError"], [67, 7, 1, "", "_get_version_file_path"], [67, 7, 1, "", "_get_version_from_file"], [67, 7, 1, "", "_get_version_from_pypi"], [67, 7, 1, "", "check_version"], [67, 7, 1, "", "get_and_save_latest_version"], [67, 7, 1, "", "version_checking"]], "bittensor.utils.wallet_utils": [[68, 7, 1, "", "create_identity_dict"], [68, 7, 1, "", "decode_hex_identity_dict"], [68, 7, 1, "", "get_ss58_format"], [68, 7, 1, "", "is_valid_bittensor_address_or_public_key"], [68, 7, 1, "", "is_valid_ed25519_pubkey"], [68, 7, 1, "", "is_valid_ss58_address"]], "bittensor.utils.weight_utils": [[69, 1, 1, "", "U16_MAX"], [69, 1, 1, "", "U32_MAX"], [69, 7, 1, "", "convert_bond_uids_and_vals_to_tensor"], [69, 7, 1, "", "convert_root_weight_uids_and_vals_to_tensor"], [69, 7, 1, "", "convert_weight_uids_and_vals_to_tensor"], [69, 7, 1, "", "convert_weights_and_uids_for_emit"], [69, 7, 1, "", "generate_weight_hash"], [69, 7, 1, "", "normalize_max_weight"], [69, 7, 1, "", "process_weights_for_netuid"]], "bittensor.wallet": [[44, 3, 1, "", "__repr__"], [44, 3, 1, "", "__str__"], [44, 4, 1, "", "_coldkey"], [44, 4, 1, "", "_coldkeypub"], [44, 4, 1, "", "_hotkey"], [44, 3, 1, "", "add_args"], [44, 5, 1, "", "coldkey"], [44, 5, 1, "", "coldkey_file"], [44, 5, 1, "", "coldkeypub"], [44, 5, 1, "", "coldkeypub_file"], [44, 3, 1, "", "config"], [44, 3, 1, "", "create"], [44, 3, 1, "", "create_coldkey_from_uri"], [44, 3, 1, "", "create_hotkey_from_uri"], [44, 3, 1, "", "create_if_non_existent"], [44, 3, 1, "", "create_new_coldkey"], [44, 3, 1, "", "create_new_hotkey"], [70, 7, 1, "", "display_mnemonic_msg"], [44, 3, 1, "", "get_coldkey"], [44, 3, 1, "", "get_coldkeypub"], [44, 3, 1, "", "get_hotkey"], [44, 3, 1, "", "help"], [44, 5, 1, "", "hotkey"], [44, 5, 1, "", "hotkey_file"], [44, 4, 1, "", "hotkey_str"], [44, 4, 1, "", "name"], [44, 3, 1, "", "new_coldkey"], [44, 3, 1, "", "new_hotkey"], [44, 4, 1, "", "path"], [44, 3, 1, "", "recreate"], [44, 4, 1, "", "regen_coldkey"], [44, 4, 1, "", "regen_coldkeypub"], [44, 4, 1, "", "regen_hotkey"], [44, 3, 1, "", "regenerate_coldkey"], [44, 3, 1, "", "regenerate_coldkeypub"], [44, 3, 1, "", "regenerate_hotkey"], [44, 3, 1, "", "set_coldkey"], [44, 3, 1, "", "set_coldkeypub"], [44, 3, 1, "", "set_hotkey"], [70, 2, 1, "", "wallet"]], "bittensor.wallet.wallet": [[70, 3, 1, "", "__repr__"], [70, 3, 1, "", "__str__"], [70, 4, 1, "", "_coldkey"], [70, 4, 1, "", "_coldkeypub"], [70, 4, 1, "", "_hotkey"], [70, 3, 1, "", "add_args"], [70, 5, 1, "", "coldkey"], [70, 5, 1, "", "coldkey_file"], [70, 5, 1, "", "coldkeypub"], [70, 5, 1, "", "coldkeypub_file"], [70, 3, 1, "", "config"], [70, 3, 1, "", "create"], [70, 3, 1, "", "create_coldkey_from_uri"], [70, 3, 1, "", "create_hotkey_from_uri"], [70, 3, 1, "", "create_if_non_existent"], [70, 3, 1, "", "create_new_coldkey"], [70, 3, 1, "", "create_new_hotkey"], [70, 3, 1, "", "get_coldkey"], [70, 3, 1, "", "get_coldkeypub"], [70, 3, 1, "", "get_hotkey"], [70, 3, 1, "", "help"], [70, 5, 1, "", "hotkey"], [70, 5, 1, "", "hotkey_file"], [70, 4, 1, "", "hotkey_str"], [70, 4, 1, "", "name"], [70, 3, 1, "", "new_coldkey"], [70, 3, 1, "", "new_hotkey"], [70, 4, 1, "", "path"], [70, 3, 1, "", "recreate"], [70, 4, 1, "", "regen_coldkey"], [70, 4, 1, "", "regen_coldkeypub"], [70, 4, 1, "", "regen_hotkey"], [70, 3, 1, "", "regenerate_coldkey"], [70, 3, 1, "", "regenerate_coldkeypub"], [70, 3, 1, "", "regenerate_hotkey"], [70, 3, 1, "", "set_coldkey"], [70, 3, 1, "", "set_coldkeypub"], [70, 3, 1, "", "set_hotkey"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"], "7": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property", "6": "py:exception", "7": "py:function"}, "terms": {"": [0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 29, 30, 31, 32, 36, 37, 40, 41, 44, 46, 47, 49, 51, 52, 53, 54, 55, 60, 64, 70], "0": [0, 6, 9, 11, 14, 16, 19, 21, 26, 29, 32, 36, 37, 39, 40, 43, 44, 47, 49, 53, 54, 58, 62, 63, 64, 69], "00": [11, 19], "0000": [11, 19], "001": [11, 19], "01": [11, 19], "03": [11, 19], "06": [11, 19], "09": [11, 19], "0x0813029319030129u4120u10841824y0182u091u230912u": [44, 54], "0x1234": [11, 25], "1": [0, 4, 5, 6, 10, 11, 14, 16, 18, 19, 21, 23, 26, 27, 29, 34, 44, 46, 49, 53, 54, 55, 56, 58, 61, 62, 69, 71], "10": [1, 11, 16, 19, 29, 44, 54, 60, 64, 66], "100": [11, 16, 19, 21, 22, 23, 46], "1000": [6, 9, 11, 25, 44], "1000000000": [16, 28, 62], "100000000000": 16, "1000000000000000000": 16, "1024": [0, 44], "11": [11, 19, 26], "111": [44, 54], "111111": [44, 54], "112": 16, "113": [0, 44], "11ee": [44, 54], "12": [11, 19, 29, 44, 52, 61, 70], "122": [35, 39], "123": [44, 46, 54], "1234": [11, 21], "12345": 46, "127": [44, 54], "1275437": [11, 19], "128": 39, "13": [11, 19], "14": [11, 19], "142": [11, 26], "147": [11, 26], "15": [11, 19, 25, 44, 54, 62, 67], "16": [11, 19], "161": [11, 26], "163": [11, 26], "168897": [11, 19], "17": [11, 19], "18": [9, 11, 19, 21], "18446744073709551615": 62, "189": [11, 26], "19": [11, 19], "192": [0, 35, 39, 44], "198": [44, 54], "1cec": [44, 54], "2": [0, 2, 4, 5, 6, 11, 16, 19, 21, 26, 27, 44, 49, 53, 55, 61], "20": [10, 11, 19, 44, 53, 62, 68], "200": [44, 54], "2013": 16, "2023": [11, 19], "203": [0, 44], "21": [2, 11, 19, 25], "217": [11, 26], "22": [11, 19], "23": [11, 19, 44, 54], "24": [9, 11, 19, 25, 44, 70], "241": [11, 26], "24199": [11, 19], "24h": [9, 11], "25": [11, 19], "256": [36, 44, 53, 54, 64], "26": [11, 19], "27": [11, 19], "27086": [11, 19], "28": [11, 19], "29": [11, 19], "3": [2, 4, 5, 6, 11, 19, 21, 26, 36, 44, 53, 63, 64], "30": [11, 19, 44, 54], "300": [44, 46, 53], "31": [11, 19, 35, 39], "32": [11, 19, 64], "32767": 16, "33": [11, 19], "3339": 2, "34": [11, 19], "34400": [11, 19], "35": [11, 19], "36": [11, 19], "360": 44, "37": [11, 19], "37070": [11, 19], "38": [11, 19, 63], "39": [11, 19], "3rd": [4, 5], "4": [6, 9, 11, 18, 19, 21, 26, 35, 39, 44, 53, 63], "40": [11, 19], "400": [0, 44], "4000000000": 28, "401": [44, 54], "4028237e": 63, "403": [44, 54], "408": [44, 54], "40859": [11, 19], "42": [27, 44], "42095": [11, 19], "422": 28, "4294967295": 69, "4318": [11, 19], "443": [44, 47, 49, 53], "4545": [11, 19], "455": 16, "45895": [11, 19], "48": 44, "49": [11, 19], "4h": [9, 11], "5": [2, 6, 11, 16, 19, 21, 27, 44, 53], "500": 46, "5000": 16, "50000": 64, "512": 64, "520": [11, 19], "53": [11, 19], "53383": [11, 19], "5455": [11, 19], "5682": [11, 19], "59": [11, 19], "5cacupsssdkwcmjbmdmjdnwva15fjquz5hssggvdzffphaua": [11, 19], "5cxrfp2ekfhe62r7q3vpprajjmghti7vwvb2yr79jvez282w": [11, 19], "5dkq4": [11, 25], "5dp8": [11, 22], "5ecbd69c": [44, 54], "5enjdgnqqwnul2hcadxeetn2oqtxzw6bmbe936kfy2pfz1j1": [44, 54], "5f4tqywrhfgvcnhoqeinsr6kjd4wmz2kfhlj4ohyuyhbzac3": [11, 19], "5ffapas75bv5pjhfap2fvlbj9zaxufdjeypsabnc1wcfe52v": [11, 19], "5gmaak7frpxnaxjbqvxcoezmgzfkrdee76egmkob3wxubur": [11, 19], "5hddm3ibfd2glt5ik7lznt3xjunrnn8poecfggqgawuvknm8": [11, 19], "5hk5tp6t2s59dywmhrwpbvjej86t61kjuryqeooqj8srepen": [11, 19], "6": [6, 11, 19, 21, 63], "60": [11, 19], "600": [44, 53], "64": [10, 11, 58, 61, 62, 64, 68], "646944": [11, 19], "65535": [0, 44, 62, 69], "7": [6, 11, 19, 44], "7002000": 28, "7070": [0, 44], "7200": [16, 44, 53], "73569": [11, 19], "8": [6, 11, 16, 19, 44, 54, 62, 64], "80": 9, "8080": [44, 54], "81": [44, 53], "84718": [11, 19], "86400": 67, "9": [6, 11, 19, 27, 44, 60], "900000": 16, "9090": [0, 44], "9221": [35, 39], "9282": [44, 54], "99": 16, "A": [0, 2, 4, 5, 6, 9, 11, 18, 19, 21, 24, 25, 27, 29, 34, 39, 41, 44, 46, 47, 49, 51, 53, 54, 56, 60, 62, 64, 65, 68], "And": [31, 44, 53], "As": [44, 47, 49], "Being": [44, 53], "But": 29, "By": [0, 43, 44, 53, 54], "For": [6, 11, 18, 29, 44, 46, 49, 53, 54, 55, 72], "If": [0, 2, 6, 9, 10, 11, 12, 14, 15, 16, 18, 21, 27, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 60, 62, 64, 65, 68], "In": [16, 27, 29, 44, 46, 47, 49, 53, 54, 63], "It": [0, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 29, 39, 44, 45, 46, 47, 49, 51, 53, 54, 56, 60, 70], "No": [11, 19, 44, 45], "Not": [44, 54], "Of": 63, "On": [11, 18, 44, 47, 49, 53], "Or": [44, 62], "The": [0, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 32, 34, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 62, 63, 64, 65, 68, 69, 70], "These": [0, 9, 11, 16, 18, 37, 40, 44, 46, 53, 54], "To": [4, 5, 9, 11, 25, 29], "Will": [44, 70], "__abs__": [44, 60], "__add__": [44, 60], "__aenter__": 29, "__aexit__": 29, "__archive_entrypoint__": 44, "__author__": 56, "__bellagene_entrypoint__": 44, "__blocktime__": 44, "__bool__": 64, "__call__": [4, 5, 44, 51, 52], "__check_for_missing_required_arg": [27, 44], "__console__": 44, "__contains__": 55, "__create_parser__": [7, 44], "__deepcopy__": [27, 44], "__del__": [0, 29, 44], "__delegates_details_url__": 44, "__dict__": [44, 47, 49], "__do_add_stake_singl": 41, "__do_remove_stake_singl": 43, "__enter__": 64, "__eq__": [6, 44, 60], "__exit__": 64, "__finney_entrypoint__": 44, "__finney_test_entrypoint__": 44, "__float__": [44, 60], "__floordiv__": [44, 60], "__ge__": [44, 60], "__get_required_args_from_pars": [27, 44], "__getattr__": [44, 64], "__getitem__": [49, 55], "__global_mock_state__": 49, "__gt__": [44, 60], "__int__": [44, 60], "__is_set": [27, 44], "__iter__": 49, "__le__": [44, 60], "__len__": 49, "__local_entrypoint__": 44, "__lt__": [44, 60], "__mul__": [44, 60], "__ne__": [44, 60], "__neg__": [44, 60], "__network_explorer_map__": 44, "__networks__": 44, "__new_signature_version__": 44, "__nonzero__": [44, 60], "__parse_args__": [27, 44], "__pipaddress__": 44, "__pos__": [44, 60], "__radd__": [44, 60], "__rao_symbol__": 44, "__repr__": [0, 6, 27, 29, 44, 45, 46, 48, 53, 60, 70], "__rfloordiv__": [44, 60], "__rich__": [44, 60], "__rich_rao__": [44, 60], "__rmul__": [44, 60], "__rsub__": [44, 60], "__rtruediv__": [44, 60], "__setattr__": [44, 54], "__setitem__": 49, "__split_params__": [27, 44], "__ss58_address_length__": 44, "__ss58_format__": 44, "__str__": [0, 6, 27, 29, 44, 45, 46, 48, 53, 60, 70], "__str_rao__": [44, 60], "__sub__": [44, 60], "__tao_symbol__": 44, "__trace_on__": [4, 5], "__truediv__": [44, 60], "__type_registry__": 44, "__use_console__": 44, "__version__": 44, "__version_as_int__": [44, 53], "__version_info__": 44, "_add_torch": 55, "_adjust_thread_count": [44, 56], "_assign_neuron": 46, "_base": [44, 56], "_broken": [44, 56], "_bt_dir": 65, "_check_for_newest_block_and_upd": 64, "_check_threshold_amount": 41, "_coldkei": [44, 70], "_coldkeypub": [44, 70], "_config": [4, 5, 27, 44], "_configure_handl": [4, 5], "_connection_timeout": [44, 53], "_convert_to_bal": [44, 47, 49], "_counter": [44, 56], "_create_and_start_listen": [4, 5], "_create_file_handl": [4, 5], "_create_seal_hash": 64, "_create_tensor": 46, "_cudasolv": 64, "_deinitialize_bt_logg": [4, 5], "_do_associate_ip": [44, 53], "_do_burned_regist": [44, 47, 49, 53], "_do_commit_weight": [31, 44, 53], "_do_decrease_tak": [44, 53], "_do_deleg": [44, 47, 49, 53], "_do_increase_tak": [44, 53], "_do_nomin": [44, 47, 49, 53], "_do_pow_regist": [44, 47, 49, 53], "_do_reveal_weight": [31, 44, 53], "_do_root_regist": [44, 53], "_do_serve_axon": [44, 47, 49, 53], "_do_serve_prometheu": [44, 47, 49, 53], "_do_set_childkey_tak": [44, 53], "_do_set_children": [44, 53], "_do_set_root_weight": [44, 53], "_do_set_weight": [44, 47, 49, 53], "_do_stak": [44, 47, 49, 53], "_do_swap_hotkei": [44, 53], "_do_transf": [44, 47, 49, 53], "_do_undeleg": [44, 47, 49, 53], "_do_unstak": [44, 47, 49, 53], "_enable_file_log": [4, 5], "_enable_initial_st": [4, 5], "_encode_param": [44, 53], "_errors_file_path": 65, "_extract_dtyp": [44, 55], "_extract_header_s": [44, 54], "_extract_logging_config": [4, 5], "_extract_nonc": [44, 54], "_extract_port": [44, 54], "_extract_process_tim": [44, 54], "_extract_shap": [44, 55], "_extract_status_cod": [44, 54], "_extract_timeout": [44, 54], "_extract_total_s": [44, 54], "_extract_vers": [44, 54], "_file_formatt": [4, 5], "_find_event_attributes_in_extrinsic_receipt": 34, "_forc": 64, "_get_axon_info": [44, 47, 49], "_get_block_with_retri": 64, "_get_cached_model_json_schema": [44, 54], "_get_coldkey_ss58_addresses_for_path": 25, "_get_coldkey_wallets_for_path": [9, 12, 21, 25], "_get_de_registered_stake_for_coldkey_wallet": [11, 17], "_get_delegates_details_from_github": 24, "_get_endpoint_url": 29, "_get_errors_from_cach": 65, "_get_errors_from_pallet": 65, "_get_hotkei": [11, 17], "_get_hotkey_wallets_for_wallet": [12, 21], "_get_hyperparamet": [44, 53], "_get_key_address": [11, 17], "_get_most_recent_storag": [44, 47, 49], "_get_neurons_for_netuid": [11, 17], "_get_prometheus_info": [44, 47, 49], "_get_real_torch": 64, "_get_substr": [44, 53], "_get_total_bal": [11, 17], "_get_version_file_path": 67, "_get_version_from_fil": 67, "_get_version_from_pypi": 67, "_handle_type_default": [44, 47, 49], "_handler": [4, 5], "_hash_block_with_hotkei": 64, "_hex_bytes_to_u8_list": 64, "_hotkei": [44, 70], "_idle_semaphor": [44, 56], "_initarg": [44, 56], "_initi": [44, 56], "_initialize_bt_logg": [4, 5], "_initialize_subtensor": 46, "_initializer_fail": [44, 56], "_is_mock": [44, 50], "_listen": [4, 5], "_log_incoming_respons": 29, "_log_outgoing_request": 29, "_logger": [4, 5, 65], "_max_work": [44, 56], "_may_overwrit": [44, 45], "_merg": [27, 44], "_mock": [44, 47, 49, 50, 53], "_mock_data": [44, 45, 48], "_mock_keypair": [44, 45, 48], "_mocked_coldkey_keyfil": [44, 50], "_mocked_hotkey_keyfil": [44, 50], "_model_json_schema": [44, 54], "_neuron_subnet_exist": [44, 47, 49], "_null_neuron": [44, 53], "_old_start_method": 64, "_primary_logg": [4, 5], "_process_neuron_result": [11, 17], "_process_root_weight": 46, "_process_weights_or_bond": 46, "_queue": [4, 5], "_read_keyfile_data_from_fil": [44, 45], "_record": 49, "_register_cuda": [62, 71], "_register_neuron": [44, 47, 49], "_registration_diff_pack": 64, "_registration_diff_unpack": 64, "_remove_private_kei": [27, 44], "_run": [8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26], "_save_errors_to_cach": 65, "_seal_meets_difficulti": 64, "_session": 29, "_set_metagraph_attribut": 46, "_set_weights_and_bond": 46, "_shutdown": [44, 56], "_shutdown_lock": [44, 56], "_solve_for_difficulty_fast": 64, "_solve_for_difficulty_fast_cuda": 64, "_solve_for_nonce_block": 64, "_solve_for_nonce_block_cuda": 64, "_solver": 64, "_solverbas": 64, "_st_build_id": 65, "_stream_formatt": [4, 5], "_subtensor_error": [44, 53], "_success": 2, "_terminate_workers_and_wait_for_exit": 64, "_thread": [44, 56], "_thread_name_prefix": [44, 56], "_threads_queu": 56, "_trace": 2, "_unbiased_topk": 62, "_update_curr_block": 64, "_user_home_dir": 65, "_usingspawnstartmethod": 64, "_version_int_bas": 44, "_version_split": 44, "_work_queu": [44, 56], "_worker": 56, "_workitem": 56, "_wrapper_run": 0, "_write_keyfile_data_to_fil": [44, 45], "abc": [44, 46, 49, 51, 52], "abil": [0, 44, 46], "abl": [29, 44], "about": [0, 11, 14, 16, 17, 21, 29, 44, 46, 47, 49, 51, 53, 54], "abov": [2, 29, 41, 42, 43], "absolut": 29, "abstract": [29, 44, 46, 51, 52, 64], "abstractmethod": [27, 44, 49], "abus": 0, "acceler": [11, 18], "accept": [0, 4, 5, 44, 56, 70], "access": [0, 6, 11, 16, 21, 25, 29, 44, 46, 47, 49, 53, 54, 65, 70], "accident": [11, 25], "accord": [0, 11, 18, 39, 44, 46, 51, 54], "account": [11, 17, 21, 22, 32, 37, 40, 41, 42, 44, 47, 49, 53, 62, 69], "accountid": 6, "accru": 46, "accrual": [44, 53], "accumul": [44, 46, 51, 53], "accur": [6, 27, 30, 36, 44, 46, 49, 53, 54, 55, 56, 57, 62, 63, 64, 67], "accuraci": [11, 22, 44, 53], "achiev": 46, "acknowledg": [11, 19], "aclose_sess": [29, 44], "across": [9, 11, 16, 19, 21, 23, 44, 46, 53, 54, 64, 70], "act": [0, 29, 44, 46, 53], "action": [4, 5, 9, 10, 11, 16, 44, 53], "activ": [0, 3, 6, 9, 11, 12, 14, 17, 18, 20, 21, 29, 44, 46, 47, 49, 53, 63], "activity_cutoff": [6, 16, 44], "actual": [0, 39, 44, 45, 51, 53, 70], "ad": [0, 2, 4, 5, 6, 11, 16, 21, 44, 53], "adapt": [0, 44, 46, 53], "add": [0, 2, 4, 5, 7, 8, 11, 18, 21, 27, 41, 44, 47, 49, 53, 54, 69], "add_arg": [0, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 44, 53, 56, 70], "add_help": 7, "add_stak": [44, 53], "add_stake_extrins": 41, "add_stake_multipl": [44, 53], "add_stake_multiple_extrins": 41, "addit": [11, 16, 18, 25, 44, 46, 51, 54], "addition": [0, 44, 53, 54], "additional_data": [44, 54], "address": [0, 9, 10, 11, 13, 16, 17, 19, 20, 21, 22, 23, 25, 29, 32, 41, 42, 43, 44, 46, 47, 49, 53, 54, 62, 68, 69, 70], "addrformaterror": 63, "adequ": [11, 18], "adher": 29, "adjust": [44, 47, 49, 53], "adjustment_alpha": [6, 44, 53], "adjustment_interv": [6, 16, 44], "adjustmentalpha": [44, 53], "advanc": [11, 16, 19, 44, 53], "adversari": [0, 44], "advis": [0, 29, 44], "affect": [9, 11, 15, 18, 44, 53], "after": [0, 4, 5, 25, 29, 44, 46, 47, 49, 51, 53, 54, 56, 64, 69], "after_disable_debug": [4, 5], "after_disable_trac": [4, 5], "after_enable_debug": [4, 5], "after_enable_default": [4, 5], "after_enable_trac": [4, 5], "after_transit": [4, 5], "against": [0, 8, 11, 18, 44, 45, 53, 64], "aggreg": [9, 11, 44, 53], "agre": 46, "agreement": 46, "ahead": [44, 47, 49, 53], "ai": [44, 46, 47, 49, 53], "aid": [44, 53, 54], "aiohttp": [29, 44, 51], "akin": 46, "algorithm": [0, 39, 44, 46, 53], "alias_to_command": 7, "alic": [44, 70], "align": [11, 14, 44, 46, 53], "aliv": 42, "all": [0, 3, 4, 5, 9, 11, 12, 13, 14, 16, 17, 18, 20, 21, 23, 25, 27, 29, 30, 36, 41, 43, 44, 46, 47, 49, 53, 56, 62, 63, 64, 67], "all_command": 44, "all_default_arg": [27, 44], "all_hotkei": [11, 17, 21, 23, 24], "all_logg": 3, "all_logger_nam": 3, "alloc": [9, 11, 19, 21, 44, 46, 53], "allocated_port": 66, "allow": [0, 2, 6, 9, 10, 11, 16, 18, 19, 20, 21, 23, 25, 26, 44, 45, 46, 47, 49, 51, 53, 54, 55], "allow_abbrev": 7, "allow_non": 24, "allowed_delta": 28, "allowed_nonce_window_n": 59, "allowed_valu": 16, "along": [11, 13, 16, 20, 29, 44, 53, 62], "alpha": 64, "alpha_": 64, "alpha_high": [6, 44], "alpha_low": [6, 44], "alreadi": [0, 9, 11, 20, 64], "also": [0, 4, 5, 9, 10, 11, 14, 16, 18, 25, 29, 44, 47, 49, 51, 53, 54, 64, 70], "alter": [0, 16, 44], "altern": [11, 18, 25], "although": [44, 45], "alwai": [44, 45], "amenbl": 16, "among": [10, 11, 19, 21, 44, 46, 47, 49, 53, 70], "amount": [6, 9, 11, 12, 16, 17, 18, 19, 21, 22, 23, 25, 32, 41, 42, 43, 44, 46, 47, 49, 53, 60], "an": [0, 2, 3, 4, 5, 6, 7, 10, 11, 14, 16, 17, 18, 19, 20, 21, 22, 25, 29, 30, 34, 35, 39, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 60, 62, 63, 64, 70], "analogi": [29, 44], "analys": [44, 46, 47, 49, 53], "analysi": [11, 14, 44, 46, 47, 49, 53, 54], "analyz": [44, 46, 47, 49, 53], "ani": [0, 6, 8, 9, 11, 12, 13, 15, 16, 21, 23, 24, 25, 27, 29, 30, 34, 41, 43, 44, 46, 47, 49, 51, 52, 53, 54, 55, 58, 64], "anneal": 16, "announc": [44, 47, 49, 53], "anoth": [11, 18, 22, 27, 44, 46, 53], "ansibl": [44, 45], "anyon": 16, "anyth": [44, 45, 62], "api": [0, 25, 44, 52, 53, 64, 72], "api_url": 25, "app": [0, 44], "appli": [0, 2, 44, 46, 53, 54], "applic": [0, 3, 9, 10, 11, 29, 44, 46, 51, 54], "approach": [44, 53, 62], "appropri": [0, 11, 18, 29, 44, 46, 51, 53], "approv": [44, 53], "ar": [0, 3, 4, 5, 9, 11, 13, 15, 16, 18, 19, 20, 25, 26, 27, 29, 30, 31, 44, 45, 46, 47, 49, 53, 54, 55, 56, 62, 70], "arbitr": [8, 44, 53], "arbitrari": [29, 44, 47, 49, 53], "arbitration_block": 6, "architectur": [0, 44, 46, 53], "archiv": [44, 46, 53], "area": [44, 53], "arg": [0, 2, 4, 5, 6, 7, 27, 29, 44, 47, 49, 52, 53, 55, 56, 63, 64], "argpars": [0, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 44, 53, 56, 70], "args_tupl": [11, 17], "argument": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 25, 26, 27, 44, 46, 49, 51, 52, 53, 54, 55, 56, 70], "argument_default": 7, "argumentpars": [0, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 44, 53, 56, 70], "aris": 0, "arithmet": [44, 60], "around": 31, "arrai": [44, 46, 53, 55, 64, 69], "asctim": 1, "asgi": [44, 51], "ask": [44, 45, 48], "ask_password_to_encrypt": [44, 45], "aspect": [0, 11, 19, 44, 46, 47, 49, 53, 54], "assert": [0, 44], "assertionerror": [0, 44], "assess": [0, 44, 46, 47, 49, 53], "asset": [11, 25, 46], "assign": [0, 11, 14, 19, 21, 41, 44, 46, 53, 54], "assist": [44, 47, 49, 53, 70], "associ": [0, 4, 5, 6, 10, 11, 12, 13, 17, 20, 21, 23, 25, 29, 31, 44, 46, 47, 49, 53, 54, 56], "assum": [0, 44, 46, 53, 60], "assur": [0, 44], "asymmetr": [0, 44], "async": [0, 29, 44, 51, 52], "asyncgener": [29, 44], "asynchron": [0, 29, 44, 51], "asyncio": 29, "attach": [0, 44, 54], "attack": [0, 44], "attain": 63, "attempt": [9, 11, 18, 36, 44, 46, 53, 54, 63], "attribut": [10, 34, 47, 54], "authent": [0, 16, 39, 44, 46, 54], "author": [11, 21, 23, 44, 46, 53], "auto": 71, "autoapi": 71, "autocomplet": [11, 15], "autocompletecommand": [11, 15], "automat": [29, 44, 46, 54], "avail": [0, 9, 11, 13, 16, 21, 24, 44, 46, 53], "averag": 64, "avoid": [11, 22, 25], "aw": 63, "await": [29, 44, 51], "awar": 16, "axi": [44, 62], "axon": [11, 14, 17, 18, 29, 30, 39, 44, 46, 47, 49, 52, 53, 54, 57, 71], "axon_hotkei": [44, 54], "axon_info": [6, 44], "axon_util": [62, 71], "axoninfo": [0, 6, 29, 44, 46, 53], "axoninfodict": [44, 47, 49], "axonmiddlewar": 0, "axonserv": [0, 44], "axonservecallparam": [44, 47, 49, 53, 57], "ay": [6, 11, 20, 38, 44], "aysnc": [29, 44], "b": [27, 44, 45, 46, 53], "b0dc": [44, 54], "b64decod": [44, 54], "back": [0, 9, 11, 15, 16, 23, 29, 44, 51, 54], "backbon": 46, "background": 0, "backoff": [44, 47, 49, 53], "backup": [11, 25, 44, 70], "backward": [0, 44, 62, 67], "balanc": [6, 9, 11, 12, 17, 18, 21, 22, 25, 32, 41, 42, 43, 44, 47, 49, 53, 62, 70, 71], "bandwidth": [44, 54], "base": [0, 2, 4, 5, 6, 7, 9, 11, 16, 18, 19, 24, 25, 27, 29, 30, 34, 36, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 64, 67], "base64": [44, 54], "base_log_format": 1, "baseclass": 46, "baseexcept": [29, 30, 44], "basehttpmiddlewar": 0, "basemodel": [29, 44, 51, 54, 55], "basic": [16, 44, 46, 54], "batch": [44, 53], "becaus": [44, 54], "becom": [9, 11, 32, 44, 47, 49, 53], "been": [0, 27, 29, 44, 51, 53, 54, 56], "befor": [0, 4, 5, 9, 11, 15, 18, 20, 21, 22, 23, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 49, 53, 58, 64], "before_disable_debug": [4, 5], "before_disable_log": [4, 5], "before_disable_trac": [4, 5], "before_enable_debug": [4, 5], "before_enable_default": [4, 5], "before_enable_trac": [4, 5], "before_transit": [4, 5], "begin": [0, 44, 53], "behavior": [0, 11, 16, 20, 44, 46, 53, 54], "being": [0, 4, 5, 6, 11, 20, 29, 31, 39, 44, 47, 49, 51, 53, 64], "belief": 46, "below": [41, 43, 44, 53], "benefici": 46, "benefit": [29, 46], "bespok": [44, 52], "better": 7, "between": [0, 5, 11, 21, 22, 29, 36, 44, 46, 53, 54, 60, 69], "beyond": 46, "bia": [44, 62], "bind": [0, 44], "bit": [62, 64, 68], "bitapai": [11, 19], "bittensor": 71, "bittensor_debug": 29, "bittensor_logger_nam": [1, 4, 5], "blacklist": [0, 30, 44, 54], "blacklist_custom": [0, 44], "blacklist_fn": [0, 44], "blacklist_my_synaps": [0, 44], "blacklist_my_synapse_2": [0, 44], "blacklistedexcept": [30, 44], "blake256": 39, "block": [0, 6, 11, 14, 18, 20, 25, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 49, 53, 58, 61, 62, 64], "block_and_hotkey_hash_byt": [58, 64], "block_byt": 64, "block_hash": [44, 47, 49, 53, 62, 64], "block_id": [44, 47, 49, 53], "block_numb": [44, 47, 49, 64], "block_tim": 61, "blockchain": [8, 9, 10, 11, 31, 39, 44, 46, 47, 49, 53], "blocknumb": [25, 44, 47, 49], "blocks_since_epoch": [6, 44, 53], "blocks_since_last_upd": [44, 53], "blockssinceepoch": [44, 53], "blue": 6, "bob": [44, 70], "bodi": [0, 11, 19, 20, 29, 44, 51, 53, 54], "body_hash": [44, 54], "bond": [6, 44, 46, 53, 69], "bond_amount": [44, 53], "bonds_as_dict": [6, 44], "bonds_moving_avg": [6, 16, 44, 53], "bondsmovingaverag": [44, 53], "bool": [0, 2, 4, 5, 6, 11, 16, 18, 21, 23, 24, 25, 27, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 60, 62, 64, 68, 70], "boolean": [0, 11, 21, 27, 44, 46, 47, 49, 53, 62], "boost": [11, 19], "both": [0, 5, 9, 11, 12, 16, 17, 21, 25, 44, 47, 49, 53, 70], "bound": 16, "brain": [29, 44], "branch": [11, 15], "breakdown": [11, 20], "breviti": [11, 25], "brian": 56, "bridg": 29, "brief": [9, 11], "broadcast": [0, 44], "broader": [0, 44, 47, 49, 53], "broken": [30, 44], "brokenexecutor": 56, "brokenthreadpool": 56, "bt": [0, 29, 44, 46, 52], "bt_header_axon_address": [44, 54], "bt_header_dendrite_port": [44, 54], "btcli": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26], "btfileformatt": 2, "btlog": [44, 71], "btstreamformatt": 2, "btstreamingrespons": [44, 51], "btstreamingresponsemodel": [44, 51], "buffer": [29, 44, 55], "build": [29, 44, 53, 65], "bulk": [44, 53], "burn": [6, 16, 44, 47, 49, 53], "burned_regist": [44, 53], "burned_register_extrins": 36, "byte": [6, 10, 11, 39, 44, 45, 48, 53, 54, 58, 62, 64, 68, 70], "c": [27, 44, 46], "cach": [44, 54, 65], "calcul": [3, 9, 11, 16, 18, 44, 46, 47, 49, 53, 54, 64], "calculate_diff_second": 59, "call": [0, 4, 5, 7, 9, 10, 11, 14, 16, 20, 21, 23, 29, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 49, 51, 53, 54, 56, 57], "call_data": 20, "call_definit": [44, 53], "call_next": 0, "call_param": [44, 47, 49, 53], "call_stream": [29, 44], "callabl": [0, 44, 51, 56, 62, 64], "caller": [0, 11, 21], "can": [0, 6, 9, 11, 12, 17, 18, 21, 22, 23, 25, 29, 44, 46, 47, 49, 51, 53, 54, 56, 64, 70], "cancel": [44, 56], "cancel_futur": [44, 56], "cannot": [30, 44, 45, 51, 54, 55, 63], "capabl": [0, 11, 18, 44, 47, 49, 53, 64], "capac": [16, 44, 47, 49, 53], "captur": 46, "care": [9, 11, 18], "carri": [11, 25], "carrier": [44, 54], "case": [0, 16, 29, 44, 47, 49, 53], "cast": [11, 20, 44, 53, 55], "cast_dtyp": 55, "cast_float": 54, "cast_int": 54, "cast_shap": 55, "catch": 16, "categori": [44, 54], "caught": 29, "caution": [11, 15, 25], "cautious": [11, 25], "ceas": [0, 44], "center": 2, "central": [0, 46], "certain": [0, 44, 53, 62, 64], "chain": [0, 9, 10, 11, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 49, 53, 57, 69], "chain_data": [44, 46, 47, 49, 53, 71], "chain_endpoint": [44, 53], "chain_stat": [44, 47, 49], "chainconnectionerror": [30, 44], "chaindatatyp": 6, "chainerror": [30, 44], "chainqueryerror": [30, 44], "chaintransactionerror": [30, 44], "challeng": [44, 53], "chanc": [11, 18], "chang": [2, 9, 10, 11, 12, 15, 16, 44, 47, 49, 53], "characterist": [44, 47, 49, 53], "check": [0, 4, 5, 7, 8, 9, 11, 15, 16, 18, 20, 21, 22, 23, 24, 25, 29, 41, 43, 44, 45, 53, 54, 62, 63, 64, 67, 68, 70], "check_and_update_encrypt": [44, 45], "check_block": 64, "check_choic": 24, "check_coldkey_swap": [11, 71], "check_config": [0, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 44], "check_for_cuda_reg_config": 24, "check_in_arbitr": [44, 53], "check_netuid_set": 24, "check_threshold_amount": 43, "check_vers": [44, 62, 67], "checkcoldkeyswapcommand": [8, 11], "child": [11, 13, 21, 23, 44, 53], "child1_hotkei": [11, 21], "child2_hotkei": [11, 21], "child3_hotkei": [11, 21], "child_address": [44, 53, 65], "child_hotkei": [11, 21, 44, 53], "child_ss58": [44, 53], "childhotkei": [11, 21, 44, 53], "childhotkeyerror": [41, 44, 53], "childkei": [11, 21, 41, 44, 53], "childkeytak": [44, 53], "children": [11, 21, 23, 41, 44, 53, 65], "children_with_proport": [41, 44, 53], "choic": [11, 24, 25, 44, 53], "choos": [11, 17], "chosen": [9, 11], "chunk": [29, 44, 51], "claim": [0, 44, 53], "clariti": [11, 25], "class": [30, 36, 62, 67], "classmethod": [0, 4, 5, 6, 8, 11, 16, 20, 21, 23, 24, 27, 44, 47, 49, 53, 54, 56, 70], "classvar": [44, 54], "clean": [44, 53, 56], "cleaner": [11, 18], "cleanup": 29, "clear": [11, 16, 21, 46, 51], "cli": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 44, 53, 71], "client": [0, 29, 44, 51], "clientrespons": [29, 44, 51], "clientsess": 29, "clierrorpars": 7, "close": [29, 44, 53], "close_sess": [29, 44], "closur": 29, "code": [0, 9, 11, 12, 14, 29, 44, 54], "cold": [11, 12, 25, 44, 45], "coldkei": [6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 21, 23, 25, 41, 43, 44, 46, 47, 49, 50, 53, 70], "coldkey_fil": [44, 50, 70], "coldkey_nam": [44, 45], "coldkey_ss58": [6, 44, 47, 49, 53], "coldkey_ss58_list": [44, 53], "coldkey_use_password": [44, 70], "coldkeypub": [0, 11, 25, 44, 50, 70], "coldkeypub_fil": [44, 50, 70], "colkei": [11, 17], "collabor": [44, 46, 53], "collat": [29, 44], "collect": [6, 27, 44, 46, 49, 53], "color": [2, 6], "color_map": 2, "column": [9, 11, 12, 14, 16, 17, 18], "com": [44, 56], "come": [0, 44, 46], "comma": [11, 19, 26], "command": [0, 7, 27, 44, 53, 71], "command_pars": [8, 11, 23], "commit": [11, 26, 30, 31, 44, 47, 49, 53, 69], "commit_hash": [31, 44, 53], "commit_reveal_weights_en": [6, 44], "commit_reveal_weights_interv": [6, 44], "commit_weight": [33, 44, 53, 71], "commit_weights_extrins": 31, "commitweightcommand": [11, 26], "common": [29, 30, 36, 41, 43, 44, 62, 65, 67], "commun": [0, 11, 20, 44, 46, 47, 49, 53, 54], "compar": [0, 44], "comparison": [0, 44, 60], "compat": [11, 18, 31, 44, 46, 47, 49, 53, 54, 62, 67], "compil": [11, 12, 16, 17, 21], "complet": [0, 11, 23, 25, 29, 44, 46, 56], "complex": [0, 44, 46, 47, 49, 53, 54], "complianc": [44, 53], "compon": [0, 44, 46, 53, 70], "composit": [11, 19, 44, 47, 49, 53], "comprehend": [44, 47, 49, 53], "comprehens": [9, 11, 12, 16, 17, 19, 21, 25, 44, 47, 49, 53], "compress": [44, 54], "comput": [11, 18, 44, 46, 47, 49, 53, 54], "computed_body_hash": [44, 54], "concaten": [44, 54], "concept": 46, "concern": 0, "concis": 46, "concret": 49, "concurr": [0, 29, 44, 56], "condit": [0, 44, 47, 49, 53], "confid": [0, 44], "config": [0, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 44, 46, 47, 49, 51, 53, 54, 55, 56, 70, 71], "config_param": [27, 44], "configdict": [44, 51, 54, 55], "configur": [0, 5, 7, 8, 9, 10, 11, 13, 15, 16, 17, 18, 19, 21, 25, 27, 44, 46, 47, 49, 51, 53, 54, 55, 70], "confirm": [0, 9, 11, 15, 18, 21, 22, 23, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 53], "conflict": [0, 27, 44], "conflict_handl": 7, "conform": [44, 51, 54, 55], "congest": [44, 53], "connect": [0, 10, 11, 16, 29, 30, 39, 44, 46, 47, 49, 53, 54, 63, 64], "connect_websocket": [44, 53], "connection_requir": [6, 44], "connection_timeout": [44, 53], "consensu": [6, 11, 14, 17, 20, 44, 46, 47, 49, 53], "consent": [10, 11], "conserv": [44, 53], "consid": [9, 11, 16, 20], "consider": [11, 18], "consist": [4, 44, 46, 47, 49, 53, 54], "consol": [7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 41, 44, 53, 64], "constant": [1, 44, 47, 49, 53, 71], "constant_nam": [44, 47, 49, 53], "constantli": 46, "constitut": [11, 19], "constrain": [44, 54], "construct": [16, 27, 29, 44, 45, 46, 47, 49, 53, 54], "contact": [10, 11], "contain": [0, 6, 8, 9, 11, 14, 21, 24, 25, 29, 41, 44, 46, 47, 49, 50, 51, 53, 54, 61, 62, 64, 65, 70, 71], "context": [0, 16, 29, 44, 45, 46, 53, 54], "continu": [0, 11, 25, 36, 46], "contrast": [44, 70], "contribut": [0, 11, 16, 17, 18, 20, 44, 46, 47, 49, 53], "control": [0, 44, 53, 54], "conveni": [44, 54], "convers": [44, 54, 62, 68, 69], "convert": [0, 6, 10, 11, 41, 44, 46, 54, 60, 61, 62, 64, 68, 69], "convert_blocks_to_tim": 61, "convert_bond_uids_and_vals_to_tensor": 69, "convert_root_weight_uids_and_vals_to_tensor": 69, "convert_weight_uids_and_vals_to_tensor": 69, "convert_weights_and_uids_for_emit": 69, "coorespond": [11, 19], "copi": [16, 27, 44, 46], "core": [0, 44, 46, 63, 64], "cornerston": [0, 44, 54], "correct": [0, 4, 5, 9, 11, 44, 46, 54], "correctli": [0, 44, 46, 47, 49, 53], "correl": [44, 53], "correspond": [0, 10, 11, 19, 26, 29, 31, 37, 40, 44, 46, 47, 49, 53, 58], "corrupt": [11, 25, 30, 44, 45, 48, 70], "cost": [10, 11, 16, 18, 44, 47, 49, 53], "could": 46, "count": [6, 9, 11, 25], "counterpart": 29, "cover": [11, 18, 29, 44, 46, 47, 49, 53], "cpu": [11, 18, 64], "creat": [0, 6, 7, 10, 11, 16, 25, 27, 29, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 62, 64, 68, 70, 71], "create_coldkey_from_uri": [44, 70], "create_config": [7, 44], "create_error_respons": 0, "create_hotkey_from_uri": [44, 70], "create_identity_dict": [62, 68], "create_if_non_exist": [44, 70], "create_new_coldkei": [44, 70], "create_new_hotkei": [44, 70], "create_pow": 64, "create_shared_memori": 64, "create_streaming_respons": [44, 51], "create_subnet": [44, 47, 49], "create_transfer_history_t": 25, "creation": [0, 10, 11, 16, 25, 44, 53, 54, 70], "credenti": 16, "criteria": [0, 11, 17, 44, 53], "critic": [0, 4, 5, 11, 16, 18, 21, 23, 25, 44, 46, 47, 49, 53, 54, 70], "cross": [11, 25], "crucial": [0, 11, 16, 19, 20, 22, 25, 29, 44, 46, 47, 49, 53, 54, 70], "cryptocurr": 46, "cryptograph": [0, 44, 46, 47, 49, 53], "cryptokeyerror": [44, 70], "cuda": [11, 18, 24, 36, 44, 53, 58, 64], "cudaexcept": 64, "cumul": [9, 11, 44, 46, 53], "curl": 63, "curr_block": 64, "curr_block_num": 64, "curr_diff": 64, "curr_stat": 64, "currenc": [44, 53], "current": [0, 4, 5, 8, 9, 11, 15, 16, 18, 19, 20, 22, 27, 29, 44, 45, 46, 47, 48, 49, 53, 54, 62, 64, 67], "current_deleg": 9, "current_tim": 59, "current_time_n": 59, "cursor": 25, "custom": [0, 2, 4, 6, 7, 11, 17, 18, 44, 46, 54], "custom_rpc_type_registri": 6, "custom_synaps": [44, 54], "customiz": [0, 44], "customsynaps": [44, 54], "d": [1, 6, 27, 29, 44, 46, 49, 53, 55], "dai": [6, 11, 16, 21, 44, 53], "daili": [6, 44], "data": [0, 6, 8, 9, 11, 12, 15, 16, 17, 19, 20, 25, 29, 39, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 64, 65], "data_typ": 39, "dataclass": [6, 44], "date": [2, 11, 25, 62, 67], "date_format": 1, "datefmt": 2, "de": [4, 5], "deal": [0, 44], "debug": [4, 5, 29, 44, 46, 54], "deceiv": [0, 44], "decentr": [0, 11, 18, 44, 46, 47, 49, 53, 54], "decis": [9, 11, 16, 19, 20, 44, 46, 53], "decod": [0, 6, 44, 53, 54], "decode_account_id_list": 6, "decode_hex_identity_dict": [62, 68], "decor": [63, 64], "decreas": [9, 11, 19, 30, 32, 44, 53], "decrease_take_extrins": 32, "decrypt": [11, 25, 30, 44, 45, 48, 70], "decrypt_keyfile_data": [44, 45], "decrypted_data": [44, 45], "deepcopi": 46, "deeper": [44, 47, 49, 53], "deepli": [11, 19], "def": [0, 44, 54], "default": [0, 2, 4, 5, 6, 9, 10, 11, 13, 14, 18, 27, 29, 32, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 58, 61, 62, 64, 70], "default_log_backup_count": 1, "default_log_file_nam": 1, "default_log_format": 2, "default_max_rotating_log_file_s": 1, "default_param": [27, 44], "default_param_arg": [27, 44], "default_trace_format": 2, "default_verifi": [0, 44], "defaultconfig": [27, 44], "defaultdict": [27, 44], "defaultmunch": [27, 44], "defaults_as_suppress": [27, 44], "defin": [0, 2, 4, 16, 44, 45, 47, 48, 49, 53, 54, 71], "definit": [1, 65], "deiniti": [4, 5], "del": 29, "delai": [0, 44], "deleg": [6, 10, 11, 12, 16, 20, 21, 23, 30, 33, 41, 44, 46, 47, 49, 51, 53, 71], "delegate_extrins": 32, "delegate_info": 20, "delegate_ss58": [6, 32, 44, 47, 49, 53], "delegate_ss58kei": [9, 11], "delegated_list_from_vec_u8": [6, 44], "delegatedinfo": 6, "delegateinfo": [6, 9, 20, 44, 47, 49, 53], "delegateinfolit": [6, 9, 44, 53], "delegateliteinfo": 6, "delegates_lit": 9, "delegatesdetail": 24, "delegatestakecommand": [9, 11], "delegateunstakecommand": [9, 11], "delta": [0, 44], "dendrit": [0, 30, 44, 52, 54, 71], "dendrite_default_error": 28, "dendrite_error_map": 28, "dendrite_hotkei": [44, 54], "dendrite_inst": 29, "dendritemixin": [29, 44], "dendrt": 29, "denomin": [44, 53], "denot": [11, 13, 46], "depend": [6, 44], "deposit": [42, 44, 53], "deprec": [11, 20, 44, 62, 67], "deregister_primary_logg": [4, 5], "deriv": [44, 53], "desc": [9, 11], "descend": [9, 11, 17], "describ": [2, 31, 44, 53], "descript": [0, 7, 9, 11, 24, 44, 46, 53, 54], "deseri": [29, 44, 45, 51, 52, 54, 55], "deserialize_keypair_from_keyfile_data": [44, 45], "deserialized_synaps": [44, 54], "design": [0, 9, 10, 11, 16, 29, 44, 45, 51, 53, 54], "desir": [4, 5, 11, 20, 44, 53, 54], "dest": [11, 22, 42, 44, 47, 49, 53], "destin": [11, 22, 40, 42, 44, 47, 49, 53, 62, 68, 69], "destroi": [0, 29, 44], "destructor": 29, "detail": [0, 6, 9, 10, 11, 12, 14, 16, 17, 18, 20, 21, 25, 29, 44, 46, 47, 49, 53, 54, 65, 70], "detect": [44, 54], "determi": [44, 70], "determin": [0, 3, 9, 11, 16, 18, 29, 44, 46, 47, 49, 53, 54, 70], "determine_chain_endpoint_and_network": [44, 53], "dev_id": [11, 18, 36, 44, 53, 58, 64], "develop": [0, 44, 51, 54, 72], "devic": [11, 13, 18, 24, 36, 44, 45, 48, 53, 58, 64, 70], "diagnost": [11, 14], "dict": [0, 2, 4, 5, 6, 11, 17, 24, 25, 27, 28, 29, 44, 46, 47, 49, 51, 53, 54, 55, 62, 64, 65, 68, 70], "dictionari": [0, 3, 6, 30, 44, 46, 47, 49, 51, 53, 54, 55, 62, 65, 68], "did": [32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "diff": 64, "differ": [0, 5, 7, 10, 11, 16, 17, 19, 21, 22, 23, 25, 27, 29, 44, 46, 47, 49, 53, 54, 60, 64, 70], "differenti": 29, "difficulti": [6, 11, 14, 16, 44, 47, 49, 53, 58, 64], "digit": [0, 44, 46, 53, 54], "dim": [44, 62], "dimens": [44, 62], "dir_path": 46, "direct": [11, 18, 44, 46, 53], "directli": [9, 11, 15, 19, 29, 44, 51, 53, 54, 70], "directori": [11, 13, 15, 17, 21, 25, 44, 45, 46, 48], "disabl": [4, 5, 11, 18, 44, 53], "disable_debug": [4, 5], "disable_log": [4, 5], "disable_third_party_logg": [4, 5], "disable_trac": [4, 5], "disagr": [11, 20], "disallow": 0, "discard": [11, 20], "disk": [44, 46, 70], "dispatch": 0, "displai": [8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 44, 46, 62, 68, 70], "display_mnemonic_msg": [44, 70], "display_vot": 20, "distinguish": 46, "distribut": [11, 16, 17, 19, 21, 44, 46, 47, 49, 53, 54], "divers": [44, 53], "diversif": [44, 53], "dividend": [6, 11, 14, 17, 44, 46], "do": [11, 19, 44, 45, 48, 64], "do_block_step": [44, 47, 49], "doc": 72, "document": [6, 44, 47, 49, 53, 71], "doe": [0, 9, 10, 11, 12, 13, 16, 17, 18, 41, 44, 45, 48, 53, 54, 62, 64, 65, 70], "does_hotkey_exist": [44, 53], "doesn": [0, 4, 5, 44], "done": [9, 11], "doubl": [44, 47, 49], "down": [0, 11, 20, 44], "driver": [44, 53], "dtype": [44, 46, 55], "due": [0, 9, 11, 25], "dummy_input": [44, 54], "durat": [29, 44, 53, 54], "dure": [0, 11, 16, 18, 29, 44, 46, 53, 54, 64, 70], "dust": [44, 53], "dynam": [0, 11, 18, 19, 44, 46, 47, 49, 53], "e": [11, 16, 19, 35, 39, 44, 46, 47, 49, 53, 54, 70], "e29ce36fec1a": [44, 54], "each": [0, 4, 5, 9, 10, 11, 13, 14, 16, 17, 19, 20, 21, 23, 27, 29, 31, 41, 43, 44, 46, 47, 49, 53, 54, 64, 70], "earn": [9, 11, 12, 14, 17, 44, 46, 53], "easi": [11, 15, 44, 54], "easier": 46, "easili": [11, 25], "econom": [44, 47, 49, 53], "economi": [44, 53], "ecosystem": [16, 44, 46, 47, 49, 53, 54], "ed2519": [11, 22], "ed25519": [42, 62, 68], "effect": [0, 9, 10, 11, 20, 25, 44, 53], "effici": [0, 11, 18, 29, 44, 46, 47, 49, 53, 54], "effort": [11, 18, 44, 53], "either": [2, 11, 21, 23, 25, 44, 53, 60, 63, 64, 70], "element": [29, 44, 46, 55], "elig": [44, 53], "ellipsi": [44, 54], "els": [44, 45, 55, 62], "email": [10, 11, 62, 68], "embodi": 46, "emiss": [6, 11, 12, 14, 16, 17, 44, 46, 53], "emission_valu": [6, 44], "emit": [44, 53], "emmit": [44, 53], "emoji": 2, "emoji_map": 2, "emploi": 46, "empti": [6, 44, 45, 49, 53, 55, 62, 65], "enabl": [0, 4, 5, 11, 18, 22, 25, 29, 44, 46, 47, 49, 53, 54], "enable_debug": [4, 5], "enable_default": [4, 5], "enable_third_party_logg": [4, 5], "enable_trac": [4, 5], "encapsul": [0, 26, 29, 44, 46, 51, 54], "encod": [6, 44, 53, 54, 62, 68], "encompass": [44, 54], "encount": [0, 16, 44, 55], "encourag": [44, 46, 47, 49, 53], "encrypt": [0, 11, 13, 25, 44, 45, 48, 70], "encrypt_keyfile_data": [44, 45], "encrypted_data": [44, 45], "encryption_method": [44, 45], "end": [0, 6, 11, 20, 44, 54], "endcursor": 25, "endian": 64, "endpoint": [0, 6, 11, 14, 29, 35, 39, 40, 41, 44, 47, 49, 53, 54, 63], "endpoint_url": 63, "enforc": [44, 54], "engag": [11, 19, 20, 44, 53], "enhanc": [11, 21, 23, 25, 44, 46, 47, 49, 53, 54], "ensur": [0, 4, 5, 9, 11, 15, 16, 18, 22, 25, 29, 31, 41, 44, 46, 47, 49, 51, 53, 54, 63], "ensure_connect": 63, "enter": [10, 11, 16, 19, 24, 25, 29, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 70], "entir": [9, 11, 14, 29], "entiti": [0, 44, 46, 53], "entri": [9, 11, 29, 44, 46, 53], "entrypoint": [44, 47, 49, 53], "enum": 6, "enumer": [6, 11, 13], "environ": [0, 9, 11, 18, 29, 44, 45, 46, 53, 54, 58, 64], "envis": [44, 53], "epilog": 7, "equal": [11, 21, 44, 61, 62, 64], "equip": [0, 44], "err_msg": [44, 47, 49], "error": [0, 4, 5, 6, 7, 11, 16, 18, 22, 29, 31, 39, 41, 43, 44, 47, 49, 53, 54, 55, 58, 62, 64, 65, 70, 71], "error_index": [44, 53], "error_messag": 62, "especi": [0, 11, 17, 18, 29, 44, 54], "essenti": [0, 7, 11, 16, 19, 20, 21, 25, 29, 44, 46, 47, 49, 53, 54], "establish": [0, 11, 25, 29, 44, 53, 54], "estim": [44, 47, 49, 53], "etc": [0, 44, 46, 51, 54], "eval": [27, 44], "evalu": [0, 44, 53], "event": [4, 5, 29, 34, 44, 51, 64], "event_nam": 34, "everi": [9, 11, 54], "everyth": 46, "evolut": [11, 20, 46], "ewma": 64, "exact": 46, "exactli": [62, 68], "examin": 46, "exampl": [0, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 29, 49, 54, 55, 70], "examplerout": [44, 54], "examplesynaps": [44, 54], "exc_typ": 29, "exc_valu": 29, "exce": 41, "except": [0, 4, 5, 10, 11, 16, 28, 29, 45, 47, 49, 53, 55], "exchang": [0, 44, 46, 54], "exclud": [11, 21, 23], "exclude_quantil": 69, "execut": [0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 30, 41, 43, 44, 46, 47, 49, 53, 56, 63, 64], "executor": [7, 44, 56], "executor_refer": 56, "exercis": [11, 20], "exhaust": 29, "exist": [0, 7, 10, 11, 13, 18, 25, 29, 44, 45, 48, 53, 64, 65, 70], "existenti": [42, 44, 53], "exists_on_devic": [44, 45, 48], "exit": [0, 11, 18, 29, 30, 36, 44, 62, 67], "exit_on_error": 7, "exp": [44, 53], "expand": [9, 16], "expans": [44, 53], "expect": [0, 29, 44, 46, 51], "experi": [11, 18], "expir": [11, 21], "explicitli": [11, 15, 29, 44, 46, 51, 54, 55], "explor": [44, 62], "exponenti": [44, 47, 49, 53, 64], "express": [44, 53], "extend": 0, "extens": [44, 53], "extent": [44, 53], "extern": [0, 29, 44, 63], "external_ip": [0, 29, 44, 63], "external_port": [0, 44], "externalipnotfound": 63, "extract": [0, 4, 5, 29, 44, 51, 65], "extract_response_json": [44, 51], "extrem": 0, "extrins": [11, 25, 44, 47, 49, 53, 62, 68, 71], "extrinsicid": 25, "extrinsicreceipt": [34, 44, 53], "f": [44, 62], "face": [0, 44, 53, 63], "facilit": [0, 9, 11, 15, 16, 25, 44, 46, 47, 49, 53, 54, 70], "factor": [44, 53], "fail": [0, 6, 16, 28, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 49, 53, 54, 56, 62, 63, 67], "failed_verif": [44, 54], "failur": [0, 9, 11, 39, 44, 47, 49, 53, 54], "fair": [44, 53], "fallback": [29, 44, 47, 49, 53], "fals": [0, 2, 4, 5, 6, 11, 12, 13, 16, 24, 27, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 62, 64, 68, 70], "familiar": 16, "fast": [11, 15, 64], "fast_config": [0, 44], "fast_serv": [0, 44], "fastapi": [0, 44], "fastapithreadedserv": 0, "faucet": [11, 18, 36, 44, 53], "feasibl": 29, "featur": [0, 44, 47, 49, 53, 54], "fee": [9, 10, 11, 44, 47, 49, 53], "fetch": [6, 11, 12, 16, 19, 25, 44, 46, 65], "fetch_arbitration_stat": 8, "ff": [11, 15], "field": [0, 10, 11, 44, 51, 54, 55], "file": [11, 25, 44, 45, 46, 48, 50, 65, 70], "filesystem": [11, 13, 44, 45], "fill": [0, 29, 44], "filter": [0, 11, 17, 25, 44], "filter_netuids_by_registered_hotkei": 24, "final": [0, 11, 19, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 49, 53, 54, 64], "financi": [11, 25, 44, 47, 49, 53, 70], "find": [4, 5, 54], "fine": [44, 53], "fingerprint": [10, 11, 44, 54], "finish": [29, 44, 56, 64], "finished_queu": 64, "finnei": [9, 11, 16, 44, 46, 47, 49, 53], "finney_subtensor": [44, 53], "first": [0, 11, 15, 16, 25, 27, 29, 41, 44, 46, 54], "fit": [62, 68], "fix": [6, 44, 47, 49, 53], "fix_decoded_valu": [6, 44], "flag": [0, 2, 6, 9, 11, 21, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 49, 53], "flexibl": [0, 11, 18, 23, 44, 53], "float": [0, 6, 11, 16, 19, 21, 22, 23, 29, 32, 37, 40, 41, 42, 43, 44, 47, 49, 53, 54, 59, 60, 61, 62, 64, 69], "float32": [37, 40, 44, 46, 53, 69], "float_to_u16": 61, "float_to_u64": 61, "floattensor": [37, 40, 44, 53, 69], "flow": [0, 44, 54], "fluid": [44, 53], "fmt": 2, "fn": [44, 56], "focus": [11, 25, 44, 47, 49, 53], "follow": [4, 5, 9, 10, 11, 14, 15, 16, 17, 19, 39, 44, 53, 54], "foo": [27, 44], "footer": 16, "forbidden": [44, 54], "forc": [44, 45, 47, 48, 49, 62, 64], "force_register_neuron": [44, 47, 49], "force_set_bal": [44, 47, 49], "form": [0, 11, 22, 27, 44, 46, 51, 53, 54, 55, 63], "formal": [11, 19, 46], "format": [0, 4, 9, 10, 11, 13, 16, 17, 19, 25, 26, 29, 39, 44, 46, 47, 49, 51, 53, 54, 60, 62, 63, 65, 68, 71], "format_call_data": 20, "format_children": 65, "format_error_messag": 62, "format_par": 65, "formatt": [2, 4, 5], "formatted_endpoint_url": 63, "formatter_class": 7, "formattim": 2, "formula": [44, 53], "forward": [0, 11, 15, 29, 44], "forward_class_typ": [0, 44], "forward_custom": [0, 44], "forward_fn": [0, 30, 44], "forward_my_synaps": [0, 44], "forward_my_synapse_2": [0, 44], "foster": [0, 44], "found": [0, 30, 34, 44, 45, 47, 49, 53, 58, 64], "foundat": [0, 11, 19, 25, 44, 53], "founda\u03c4ion": [11, 19], "four": [9, 11], "frame": [44, 53], "framework": [0, 5, 29, 44, 54, 70], "free": [9, 11, 25], "frequenc": [11, 18], "fresh": [0, 11, 25, 44], "friendli": [0, 16, 31, 44], "fro": [4, 5], "from": [0, 4, 5, 6, 7, 9, 10, 11, 12, 15, 16, 20, 21, 22, 23, 25, 27, 29, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 62, 63, 64, 65, 69, 70], "from_float": [44, 60], "from_head": [44, 54], "from_json": 24, "from_neuron_info": [6, 44], "from_parameter_dict": [6, 44], "from_rao": [44, 60], "from_scale_encod": 6, "from_scale_encoding_using_type_str": 6, "from_str": [6, 44], "from_tao": [44, 60], "from_vec_u8": [6, 44], "from_weights_bonds_and_neuron_lit": [6, 44], "fromfile_prefix_char": 7, "fucntion": [0, 44], "full": [29, 46], "full_address": [0, 44], "fulli": 29, "func": [63, 64], "function": [4, 5, 10, 11, 14, 19, 26, 30, 47, 49, 51, 52, 53], "fund": [11, 12, 18, 22, 42, 44, 47, 49, 53], "fundament": [0, 44, 46, 47, 49, 53, 54, 70], "further": [0, 11, 18], "futur": [11, 20, 39, 44, 46, 47, 49, 53, 56], "g": [11, 16, 19, 44, 47, 49, 53, 54], "gain": [44, 47, 49, 53], "gatewai": [44, 53], "gather": [0, 11, 12, 44], "gener": [0, 3, 11, 25, 29, 44, 49, 51, 53, 54, 69, 70, 71], "generate_weight_hash": 69, "genericcal": [44, 53], "genuin": [0, 44], "get": [2, 4, 5, 11, 16, 18, 19, 21, 25, 27, 29, 36, 44, 46, 53, 54, 56, 62, 64, 70], "get_all_neurons_for_pubkei": [44, 53], "get_all_subnet_netuid": [44, 53], "get_all_subnets_info": [44, 47, 49, 53], "get_all_uids_for_hotkei": [44, 53], "get_all_wallets_for_path": 24, "get_and_save_latest_vers": 67, "get_axon_info": [44, 53], "get_bal": [44, 47, 49, 53], "get_block_hash": [44, 47, 49, 53], "get_childkey_tak": [11, 21, 44, 53], "get_children": [11, 21, 44, 53], "get_children_info": [11, 21], "get_coldkei": [44, 70], "get_coldkey_password_from_environ": [44, 45], "get_coldkey_wallets_for_path": 24, "get_coldkeypub": [44, 70], "get_commit": [44, 47, 49, 53], "get_config": [4, 5], "get_cpu_count": 64, "get_current_block": [44, 47, 49, 53], "get_deleg": [44, 47, 49, 53], "get_delegate_by_hotkei": [44, 47, 49, 53], "get_delegate_tak": [44, 53], "get_delegates_detail": 24, "get_delegates_lit": [44, 53], "get_emission_value_by_subnet": [44, 53], "get_error_info_by_index": [44, 53], "get_existential_deposit": [44, 53], "get_explorer_root_url_by_network_from_map": [44, 62], "get_explorer_url_for_network": [44, 62], "get_external_ip": 63, "get_formatted_ws_endpoint_url": 63, "get_hotkei": [21, 44, 70], "get_hotkey_own": [44, 53], "get_hotkey_wallets_for_wallet": 24, "get_human_read": 61, "get_ident": [10, 11], "get_keypair": [44, 45, 48], "get_level": [4, 5], "get_max_logger_name_length": 3, "get_metadata": 39, "get_minimum_required_stak": [44, 47, 49, 53], "get_mock_coldkei": 50, "get_mock_hotkei": 50, "get_mock_keypair": 50, "get_mock_wallet": 50, "get_netuid": 21, "get_netuids_for_hotkei": [44, 53], "get_neuron_for_pubkey_and_subnet": [44, 53], "get_nominators_for_hotkei": [44, 53], "get_null_neuron": [6, 44], "get_par": [44, 53], "get_parent_stake_info": [11, 21], "get_prometheus_info": [44, 53], "get_propos": [44, 53], "get_proposal_call_data": [44, 53], "get_proposal_hash": [44, 53], "get_proposal_vote_data": [44, 53], "get_queu": [4, 5], "get_random_unused_port": 66, "get_remaining_arbitration_period": [44, 53], "get_required_field": [44, 54], "get_save_dir": 46, "get_senate_memb": [44, 53], "get_siz": 54, "get_ss58_format": [62, 68], "get_stak": [44, 53], "get_stake_for_coldkey_and_hotkei": [44, 53], "get_stake_info_for_coldkei": [44, 53], "get_status_messag": 64, "get_subnet": [44, 53], "get_subnet_burn_cost": [16, 44, 53], "get_subnet_connection_requir": [44, 53], "get_subnet_hyperparamet": [44, 53], "get_subnet_info": [44, 47, 49, 53], "get_subnet_mod": [44, 53], "get_subnet_own": [44, 53], "get_subtensor_error": 65, "get_tak": [11, 21], "get_total_s": [44, 54], "get_total_stake_for_coldkei": [44, 53], "get_total_stake_for_hotkei": [44, 53], "get_total_subnet": [44, 53], "get_transfer_fe": [44, 47, 49, 53], "get_tre": [11, 13], "get_uid_for_hotkey_on_subnet": [44, 53], "get_vote_data": [44, 53], "get_wallet_transf": 25, "get_weight": [11, 19], "getchildkeytakecommand": [11, 21], "getchildrencommand": [11, 21], "getidentitycommand": [10, 11], "getwallethistorycommand": [11, 25], "github": [11, 15], "githubusercont": 44, "give": [44, 56, 60], "given": [0, 11, 21, 37, 40, 44, 46, 47, 49, 51, 52, 53, 54, 55, 56, 60, 62, 64, 65, 68], "global": [44, 53], "glorifi": [44, 54], "go": [0, 44], "goal": [44, 53], "govern": [11, 19, 20, 44, 46, 47, 49, 53], "gpu": [11, 18, 64], "grab": 64, "grace": [44, 53], "gracefulli": [0, 44], "graph": 46, "graphql_queri": 25, "grasp": [44, 53], "great": [0, 44], "greater": [46, 69], "green": [6, 9, 11], "growth": [44, 53], "grpc": [0, 44, 53], "guard": [0, 44], "h": [1, 61], "ha": [0, 6, 9, 10, 11, 12, 16, 17, 27, 29, 44, 46, 47, 49, 51, 53, 55, 64], "halt": 0, "handl": [0, 4, 5, 7, 9, 10, 11, 29, 31, 44, 46, 47, 49, 51, 53, 54, 63, 70], "handler": [0, 4, 5], "hardwar": [11, 18], "hash": [0, 11, 20, 26, 31, 39, 44, 47, 49, 50, 53, 54, 58, 62, 64, 69], "hash_rat": 64, "hash_rate_perpetu": 64, "hash_valu": [44, 54], "hasn": [0, 44], "hasnextpag": 25, "haspreviouspag": 25, "have": [0, 6, 9, 10, 11, 16, 18, 19, 21, 23, 26, 44, 46, 53, 54, 56], "header": [0, 29, 30, 44, 51, 54], "header_s": [44, 54], "health": [11, 25, 44, 53], "held": [9, 11, 12, 44, 46, 47, 49, 53], "hello": [27, 44, 54], "help": [0, 4, 5, 6, 9, 11, 20, 25, 27, 30, 36, 44, 47, 49, 53, 54, 55, 56, 57, 62, 63, 64, 67, 70], "helper": [4, 9, 44, 52, 54, 65, 71], "helpformatt": 7, "here": [29, 44, 46, 53], "hex": [10, 11, 25, 44, 53, 70], "hex_byt": 64, "hexadecim": [11, 25, 44, 54], "hierarch": [11, 13], "high": [10, 11, 25, 44, 53], "higher": [11, 18, 44, 46, 53], "highest": [11, 25, 44, 53], "highlight": [9, 11], "histor": [29, 44, 46], "histori": [11, 25], "hk1": [11, 23], "hk2": [11, 23], "hold": [0, 5, 11, 19, 20, 25, 44, 46, 47, 49, 53, 70], "holder": [44, 53], "holist": [44, 53], "host": [35, 39], "hot": [11, 12, 44, 50, 70], "hotk": [11, 25], "hotkei": [0, 6, 7, 9, 10, 11, 12, 13, 14, 17, 18, 20, 21, 23, 25, 29, 30, 32, 37, 39, 40, 41, 43, 44, 46, 47, 49, 50, 53, 54, 58, 64, 70], "hotkey_b": [11, 18], "hotkey_byt": 64, "hotkey_fil": [44, 50, 70], "hotkey_ss58": [6, 11, 17, 32, 41, 43, 44, 47, 49, 53], "hotkey_ss58address": [11, 23], "hotkey_stak": [11, 21], "hotkey_str": [44, 70], "hotkey_use_password": [44, 70], "hour": [9, 11, 61], "how": [0, 6, 11, 15, 19, 44, 46, 47, 49, 53], "howev": [29, 44, 46], "http": [0, 25, 29, 44, 53, 54], "human": [0, 11, 17, 44, 46], "hyper": [44, 53], "hyperlink": [9, 11], "hyperparam": 16, "hyperparamet": [6, 16, 24, 34, 44, 53], "i": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72], "id": [0, 11, 18, 21, 23, 25, 36, 44, 53, 54, 58, 64, 65], "ideal": [11, 17, 25], "ident": [0, 11, 30, 44, 53, 54, 62, 68, 71], "identif": [44, 46, 54], "identifi": [0, 11, 12, 14, 16, 17, 19, 21, 26, 29, 31, 39, 41, 44, 46, 47, 49, 53, 54, 65, 69, 70], "identityerror": [30, 44], "ignor": [29, 44, 45], "ij": 46, "imag": [10, 11, 62, 68], "immedi": [0, 44, 53], "immunity_period": [6, 16, 44, 53], "immunityperiod": [44, 49, 53], "immut": [44, 47, 49, 53], "impact": [11, 16, 18, 19, 44, 46, 53], "implement": [0, 7, 16, 27, 29, 44, 49, 51, 53, 54, 56, 70], "impli": 46, "implic": 16, "implicitli": 29, "import": [0, 8, 11, 15, 18, 19, 20, 23, 25, 29, 44, 46, 47, 49, 53, 54], "improv": [44, 54], "incent": [6, 11, 14, 17, 44, 46, 53], "incentiv": [44, 46, 53], "includ": [0, 2, 4, 6, 9, 10, 11, 12, 14, 16, 17, 18, 20, 25, 29, 31, 34, 38, 39, 40, 41, 43, 44, 46, 47, 49, 51, 53, 54], "inclus": [32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 49, 53], "incom": [0, 29, 44, 53], "incorrec": [44, 70], "incorrect": [44, 45, 48, 70], "increas": [0, 9, 11, 18, 19, 30, 32, 44, 47, 49, 53, 54, 64], "increase_take_extrins": 32, "incur": [9, 10, 11], "inde": [0, 44], "index": [6, 9, 11, 25, 44, 53, 62, 65], "indic": [0, 4, 5, 9, 11, 13, 14, 16, 17, 21, 27, 29, 30, 39, 44, 45, 46, 47, 49, 53, 54, 62], "indispens": [44, 54], "individu": [9, 11, 29, 44, 47, 49, 53], "infer": 46, "inflat": [44, 47, 49, 53], "inflation_target": [44, 53], "inflationari": [44, 53], "influenc": [11, 19, 21, 23, 44, 46, 47, 49, 53], "influenti": [44, 53], "info": [0, 4, 5, 6, 10, 11, 25, 44, 62, 68], "info_dictionari": [62, 68], "infodict": 49, "inform": [0, 4, 5, 6, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 29, 36, 39, 44, 46, 47, 49, 51, 53, 54, 58, 62, 64, 65], "infrastructur": [16, 44, 46, 53], "inherit": [44, 52, 54], "init": [44, 50], "initarg": [44, 56], "initi": [0, 2, 4, 5, 6, 7, 9, 11, 16, 18, 19, 27, 29, 30, 36, 44, 45, 46, 47, 49, 51, 53, 55, 56, 57, 60, 62, 63, 64, 67, 70], "input": [0, 6, 10, 11, 29, 44, 45, 48, 51, 53, 54, 55, 64], "input_": 6, "input_obj": [44, 54], "insight": [9, 11, 19, 20, 44, 47, 49, 53], "inspect": [0, 11, 44, 71], "inspectcommand": [11, 12], "instal": [11, 15], "install_signal_handl": 0, "instanc": [0, 3, 6, 11, 21, 29, 31, 39, 44, 46, 51, 53, 54, 56, 65], "instanti": [44, 51], "instead": [0, 11, 21, 44, 47, 49, 51, 62, 67], "instruct": [44, 47, 49, 53], "instrument": [44, 46, 53], "insuffici": [11, 18, 44, 53], "int": [0, 2, 3, 4, 5, 6, 9, 11, 17, 18, 19, 21, 24, 25, 26, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70], "int128": 63, "int256": 58, "int64": [37, 40, 44, 46, 53, 58, 69], "int_to_ip": 63, "int_val": 63, "intact": [0, 44], "integ": [11, 24, 26, 44, 53, 54, 60, 63, 64, 69], "integr": [0, 44, 46, 47, 49, 53, 54], "intellig": [0, 44, 46, 53], "intend": [9, 11, 12, 13, 14, 15, 16, 20, 44, 46, 51, 53, 54], "intent": 0, "inter": [44, 46, 53], "interact": [0, 8, 9, 10, 11, 16, 21, 29, 31, 44, 46, 47, 49, 53, 54, 60, 70], "intercept": 0, "interchang": [11, 25], "interconnect": [44, 53], "interconnected": 46, "interest": [11, 19, 20, 44, 47, 49, 53], "interfac": [0, 7, 8, 9, 11, 31, 44, 45, 46, 47, 48, 49, 51, 53], "interfer": 0, "intermediari": 0, "intern": [0, 8, 11, 29, 44, 46, 47, 49, 51, 53, 70], "internalservererror": [30, 44], "interpret": [29, 32, 41, 42, 43, 44, 54], "interv": 64, "intlistprompt": 24, "introduc": [44, 53], "invalid": [30, 44, 55], "invalidconfigfil": [27, 44], "invalidrequestnameerror": [30, 44], "invers": 69, "invert": [27, 44], "invest": [16, 44, 46, 53], "invoc": [11, 13, 15, 16], "invok": [0, 11, 25, 29, 44, 46], "involv": [0, 11, 15, 16, 20, 44, 46, 47, 49, 53, 54, 70], "ip": [0, 6, 11, 17, 29, 35, 39, 44, 46, 49, 53, 54, 57, 63], "ip__str__": 63, "ip_address": [44, 54], "ip_info_list": [44, 53], "ip_str": [6, 44, 63], "ip_to_int": 63, "ip_typ": [6, 44, 49, 57, 63], "ip_vers": 63, "ipifi": 63, "ipinfo": [6, 44, 53], "ipv4": 63, "ipv6": 63, "is_ans": [44, 45], "is_blacklist": [44, 54], "is_empti": [44, 56], "is_encrypt": [44, 45, 48], "is_failur": [44, 54], "is_hotkey_deleg": [44, 53], "is_hotkey_regist": [44, 53], "is_hotkey_registered_ani": [44, 53], "is_hotkey_registered_on_subnet": [44, 53], "is_legaci": [44, 45], "is_nacl": [44, 45], "is_nul": [6, 44], "is_opt": 6, "is_read": [44, 45, 48], "is_run": 0, "is_senate_memb": [44, 53], "is_serv": [6, 44], "is_set": [27, 44], "is_stal": 64, "is_success": [44, 54], "is_timeout": [44, 54], "is_valid_bittensor_address_or_public_kei": [62, 68], "is_valid_ed25519_pubkei": [62, 68], "is_valid_ss58_address": [62, 68], "is_vec": 6, "is_writ": [44, 45, 48], "iso8601": 2, "issu": [0, 16, 29, 44, 53], "issuanc": [11, 14, 44, 53], "item": [10, 11, 27, 44, 54, 56], "iter": [3, 6, 29, 44, 46, 49, 53, 54, 55], "its": [0, 4, 5, 6, 9, 11, 15, 16, 29, 44, 46, 47, 49, 53, 54], "itself": [0, 44, 51, 54], "j": 46, "journei": [44, 53], "json": [0, 6, 11, 24, 25, 29, 44, 51, 54, 65, 70], "json_data": [44, 70], "json_password": [11, 25], "json_respons": [29, 44], "json_str": [6, 44], "jsondecodeerror": [6, 44], "jsonrespons": [0, 44], "judgment": 46, "judici": [44, 53], "just": [11, 21, 44, 46, 48], "k": [6, 44, 49, 53, 55, 62], "kappa": [6, 16, 44, 49, 53], "keccak": [58, 64], "keccak256": 39, "keep": [11, 25, 42, 44, 54, 64, 70], "keep_al": 42, "kei": [0, 6, 7, 10, 11, 13, 14, 16, 20, 22, 25, 29, 31, 37, 40, 42, 44, 45, 46, 47, 49, 50, 53, 54, 55, 62, 68, 69, 70], "kept": [44, 62, 67], "key_nonc": 53, "key_typ": [44, 70], "keyfil": [30, 44, 48, 50, 70, 71], "keyfile_data": [44, 45, 48], "keyfile_data_encryption_method": [44, 45], "keyfile_data_is_encrypt": [44, 45], "keyfile_data_is_encrypted_ans": [44, 45], "keyfile_data_is_encrypted_legaci": [44, 45], "keyfile_data_is_encrypted_nacl": [44, 45], "keyfile_mock": [47, 71], "keyfileerror": [30, 44, 45, 48, 70], "keypair": [29, 44, 45, 48, 50, 70], "keyword": [6, 44, 49, 51, 52, 53, 54, 55], "know": [0, 6, 44, 47, 49, 53], "known": [9, 11, 20, 44, 53, 62], "kw": 2, "kwarg": [2, 4, 5, 6, 27, 29, 44, 47, 49, 50, 51, 52, 53, 55, 56], "kwd": 6, "k\u03c4": [9, 11], "lack": 63, "landscap": [44, 47, 49, 53], "larg": 29, "larger": [0, 44], "largest": [44, 62], "last": [0, 9, 11, 14, 17, 27, 44, 46, 53], "last_upd": [6, 44, 46], "latenc": [44, 54], "later": 46, "latest": [11, 15, 25, 44, 46, 47, 49, 53, 62, 67, 72], "latest_block_path": 46, "layer": [0, 11, 19, 44, 46, 53], "lazili": 29, "lazyloadedtorch": 64, "lead": 0, "leakag": 29, "learn": [44, 46, 53, 54], "least": [0, 44], "leav": [11, 20], "leave_sen": [44, 53], "leave_senate_extrins": 38, "ledger": [44, 46, 53], "left": 63, "legaci": [11, 15, 25, 44, 45, 64], "legacy_encrypt_keyfile_data": [44, 45], "legacy_torch_api_compat": 64, "legal": [10, 11, 62, 68], "len": 6, "length": [3, 39, 44, 54], "less": 46, "level": [0, 2, 4, 5, 10, 11, 16, 20, 44, 46, 53], "levelnam": 1, "leverag": [5, 11, 18, 44, 46, 53], "librari": [4, 5, 9], "lifecycl": 0, "lifespan": [44, 54], "light": 46, "lighter": [6, 44, 53], "lightweight": [44, 47, 49, 53], "like": [0, 2, 7, 16, 24, 27, 29, 44, 46, 53, 54, 70], "limit": [41, 43, 44, 53, 58, 64, 69], "line": [0, 7, 8, 9, 10, 11, 27, 44, 53, 64], "link": [0, 11, 21, 44, 53, 70], "liquid_alpha_en": [6, 44], "list": [0, 4, 5, 6, 7, 9, 11, 12, 16, 17, 19, 20, 21, 23, 24, 25, 27, 29, 31, 34, 36, 37, 40, 41, 43, 44, 46, 47, 49, 52, 53, 54, 55, 61, 62, 64, 65, 69, 70, 71], "list_deleg": [9, 11], "list_from_vec_u8": [6, 44], "list_of_tuple_from_vec_u8": [6, 44], "listcommand": [11, 13], "listdelegatescommand": [9, 11], "listen": [0, 4, 5, 44], "lite": [9, 44, 46, 47, 49, 53], "liter": [44, 62], "littl": 64, "live": [44, 46, 53], "load": [0, 44, 45, 46, 53, 70], "load_from_path": 46, "local": [0, 7, 9, 11, 15, 29, 44, 46, 47, 49, 53, 63], "local_synaps": [29, 44], "locat": [11, 12, 46], "lock": [16, 44, 53, 64], "lock_cost": 16, "log": [0, 1, 2, 3, 4, 5, 11, 18, 29, 36, 44, 46, 53, 58, 64], "log_and_handle_error": 0, "log_cuda_error": 58, "log_except": 29, "log_format": 2, "log_level": [0, 44], "log_level_color_prefix": 2, "log_no_torch_error": 64, "log_trace_format": 2, "log_verbos": [36, 44, 53, 64], "logfil": [4, 5], "logger": [3, 4, 5, 32, 37, 40, 56], "logging_dir": [4, 5], "loggingconfig": 5, "loggingmachin": [4, 71], "logic": [0, 44, 51, 54], "logrecord": 2, "lol": [27, 44], "long": [27, 44, 53, 62, 68], "longer": [11, 20, 29], "longest": 3, "longtensor": [37, 40, 44, 53, 62, 69], "look": [44, 53], "lookup": 6, "loop": 29, "loss": [11, 22, 25], "lower": [44, 62], "m": 1, "machin": [0, 44, 46, 53, 54], "made": [0, 8, 11, 29, 44, 53], "magic": [0, 44], "mai": [9, 11, 16, 18, 25, 44, 46, 47, 49], "main": [0, 4, 5, 44, 47, 49, 53, 64], "mainli": 46, "maintain": [0, 11, 25, 44, 46, 47, 49, 53, 54], "mainten": [0, 44, 53], "major": [44, 46, 53], "make": [0, 9, 10, 11, 16, 17, 19, 20, 21, 23, 29, 42, 44, 46, 47, 49, 53, 54, 64], "make_dir": [44, 45, 48], "malici": [0, 44, 54], "manag": [0, 3, 5, 7, 11, 17, 23, 25, 27, 29, 44, 46, 47, 49, 51, 53, 54, 70], "mandatori": [11, 18], "mani": 6, "manipul": [0, 44], "manner": [0, 16, 46], "map": [6, 44, 47, 49, 53, 55, 62, 63], "mark": [9, 11], "market": [44, 53], "master": [11, 15], "match": [0, 44, 64], "mathemat": [44, 53], "matrix": 46, "max": [0, 39, 41, 44, 53, 61, 69], "max_allowed_attempt": [36, 44, 53], "max_allowed_valid": [6, 44, 53], "max_burn": [6, 16, 44], "max_children": 21, "max_difficulti": [6, 16, 44], "max_int_weight": 69, "max_length": 3, "max_n": [6, 16, 44, 53], "max_regs_per_block": [6, 16, 44], "max_retri": [44, 53], "max_stak": [11, 21, 23], "max_tri": 66, "max_txn": 25, "max_valid": [6, 44], "max_valu": 69, "max_wait": [44, 53], "max_weight_limit": [6, 16, 44, 53], "max_work": [0, 44, 56], "maxalloweduid": [44, 53], "maxattemptsexcept": 36, "maximum": [9, 10, 11, 16, 21, 23, 29, 36, 44, 47, 49, 53, 54, 56], "maxsiz": [44, 56], "maxsuccessexcept": 36, "maxweightslimit": [44, 53], "may_overwrit": [44, 45], "mean": [0, 44, 53, 54, 64], "meant": [11, 18, 44, 50], "measur": [44, 46, 53, 64], "mechan": [0, 11, 18, 19, 44, 46, 47, 49, 53, 54], "meet": [0, 11, 18, 44, 45], "member": [6, 11, 19, 20, 44, 53], "membership": [11, 20, 44, 53], "memo": [27, 44], "memori": 64, "mempool": [44, 53], "merg": [27, 29, 44], "merge_al": [27, 44], "messag": [0, 1, 2, 4, 5, 7, 11, 18, 29, 30, 31, 41, 44, 47, 49, 53, 54, 62, 70], "met": [11, 18, 30, 44, 53], "metadata": [6, 30, 39, 44, 46, 47, 49, 53, 54, 65], "metadataerror": [30, 39, 44], "metagraph": [11, 29, 44, 53, 69, 70, 71], "metagraph_repr": 46, "metagraph_state_dict_ndarray_kei": 46, "metagraphcommand": [11, 14], "metagraphmixin": 46, "method": [0, 2, 4, 5, 6, 7, 8, 9, 11, 16, 18, 21, 29, 31, 44, 46, 47, 49, 51, 53, 54, 56, 60, 64, 70], "metric": [44, 46, 53, 54, 64], "middlewar": [0, 44], "middleware_cl": [0, 44], "might": [0, 44], "millifi": 61, "millisecond": 2, "min_allowed_weight": [6, 16, 44, 53], "min_burn": [6, 16, 44], "min_difficulti": [6, 16, 44], "min_required_stak": [44, 47, 49], "minallowedweight": [44, 53], "mine": [44, 53], "miner": [11, 25, 44, 46, 53, 70], "minimum": [41, 43, 44, 47, 49, 53], "minut": 61, "mirror": 46, "misc": [11, 71], "mismatch": [0, 44], "missing_required_arg": [27, 44], "ml": [44, 54], "mnemon": [11, 25, 44, 70], "mock": [44, 45, 53, 71], "mockchainst": [44, 47, 49], "mockkeyfil": [44, 45, 48], "mockmapresult": [44, 47, 49], "mocksubtensor": [44, 47, 49], "mocksubtensorst": 49, "mocksubtensorvalu": 49, "mocksystemst": 49, "mockwallet": [44, 50], "modal": [6, 44], "mode": [4, 5], "model": [44, 46, 51, 53, 54, 55], "model_config": [44, 51, 54, 55], "model_dump_json": [44, 54], "model_validate_json": [44, 54], "modern": [0, 11, 25, 44], "modif": [44, 54], "modifi": [6, 9, 11, 13, 16, 17, 21, 44, 51, 53, 64], "modul": [4, 44, 47], "module_nam": [44, 47, 49, 53], "monitor": [11, 17, 20, 21, 25, 29, 44, 47, 49, 53, 54], "monoton": [44, 54], "more": [9, 11, 14, 21, 23, 36, 44, 46, 53, 64], "most": [44, 45, 46, 47, 49, 53], "motiv": [44, 53], "move": [44, 53, 64], "movement": [44, 53], "mp": 64, "msg": [4, 5, 31, 44, 53], "much": 46, "multi": [0, 11, 18], "multilin": 25, "multipl": [0, 9, 11, 17, 18, 25, 29, 44, 46, 53, 64, 70], "multiprocess": 64, "munch": [11, 27, 44], "must": [4, 5, 9, 10, 11, 14, 16, 21, 37, 40, 44, 46, 51, 53, 62, 63, 68, 70], "mutat": 0, "my_axon": [0, 44], "my_config": [0, 44], "my_deleg": [9, 11], "my_hotkei": [9, 11, 21], "my_wallet": [0, 9, 11, 21, 44, 70], "mycustomsynaps": [0, 44], "mydelegatescommand": [9, 11], "mysyanps": [0, 44], "mysynaps": [44, 54], "n": [11, 16, 19, 44, 46, 61, 62, 69], "n_sampl": 64, "n_word": [11, 25, 44, 70], "na": [9, 11], "nacl": [44, 45], "nacl_salt": 45, "nai": [6, 11, 20, 38, 44], "name": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 16, 18, 19, 20, 21, 23, 24, 25, 29, 30, 34, 44, 45, 46, 47, 49, 51, 53, 54, 55, 56, 62, 64, 70], "namedtupl": 5, "namespac": [27, 44], "nanoseconds_in_second": 28, "nativ": [11, 18, 44, 53, 54], "natur": [9, 11, 29, 44, 46, 53], "ndarrai": [37, 40, 44, 46, 53, 55, 62, 69], "necessari": [0, 8, 11, 16, 18, 26, 29, 44, 46, 53, 54], "need": [0, 8, 11, 16, 18, 19, 20, 21, 23, 25, 26, 44, 45, 46, 47, 49, 53, 54], "nest": [27, 44], "net": 36, "netaddr": 63, "netuid": [0, 6, 11, 12, 14, 16, 17, 18, 19, 21, 23, 24, 26, 31, 34, 35, 36, 37, 39, 40, 41, 44, 46, 47, 49, 53, 57, 64, 69], "netuid_0": [44, 53], "netuid_1": [44, 53], "network": [0, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 25, 26, 29, 31, 33, 35, 37, 39, 44, 46, 47, 49, 51, 52, 53, 54, 62, 64, 69, 70, 71], "network_map": [44, 62], "networkmod": [44, 53], "networksad": 49, "neural": 46, "neurip": [44, 46, 53], "neuron": [0, 6, 11, 12, 14, 16, 17, 18, 19, 21, 23, 25, 29, 30, 31, 40, 44, 46, 47, 49, 53, 54, 69], "neuron_for_uid": [44, 47, 49, 53], "neuron_for_uid_lit": [44, 47, 49, 53], "neuron_for_wallet": [44, 53], "neuron_has_validator_permit": [44, 53], "neuron_incent": 46, "neuron_info": [6, 44], "neuron_info_decod": [6, 44], "neuron_lit": [6, 44], "neuron_rank": 46, "neuron_stak": 46, "neuroninfo": [6, 44, 47, 49, 53], "neuroninfolit": [6, 11, 17, 44, 47, 49, 53], "neurons_lit": [44, 47, 49, 53], "new": [0, 6, 9, 10, 11, 16, 18, 25, 27, 29, 34, 41, 44, 46, 49, 51, 53, 54, 55, 56, 64, 70], "new_coldkei": [6, 11, 25, 44, 70], "new_hotkei": [11, 18, 25, 44, 70], "new_wallet": [36, 44, 53], "newblockev": 64, "newcoldkeycommand": [11, 25], "newcom": [44, 53], "newhotkeycommand": [11, 25], "newli": [44, 70], "next": [0, 11, 18], "nich": [44, 53], "nn": [6, 29, 44, 46], "no_cuda": [11, 18], "no_output_in_plac": [11, 18], "no_prompt": [11, 15, 16, 18, 44, 45], "node": [0, 11, 13, 14, 21, 25, 44, 46, 47, 49, 52, 53, 54, 64], "nom": [9, 11], "nomin": [6, 9, 11, 30, 44, 47, 49, 53], "nominate_extrins": 32, "nominatecommand": [9, 11], "nominationerror": [30, 44], "non": [0, 30, 36, 44, 45, 48, 54, 62, 67, 70], "nonc": [0, 11, 18, 36, 44, 53, 54, 58, 64], "nonce_end": 64, "nonce_start": [58, 64], "none": [0, 2, 3, 4, 5, 6, 7, 9, 11, 19, 21, 24, 25, 27, 29, 30, 32, 35, 36, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 62, 64, 68, 69, 70], "nontorchmetagraph": 46, "normal": [11, 19, 24, 41, 44, 53, 61, 69], "normalize_hyperparamet": 24, "normalize_max_weight": 69, "normalize_u64_valu": 61, "notdelegateerror": [30, 32, 41, 44], "note": [39, 44, 47, 49, 63, 64], "noth": [44, 45, 48], "notregisterederror": [30, 32, 41, 43, 44], "notverifiedexcept": [30, 44], "now": [0, 44, 46, 54], "np": [37, 40, 44, 46, 53, 55, 62, 69], "null_entri": 56, "num": 61, "num_proc": 64, "num_process": [11, 18, 36, 44, 53, 64], "number": [0, 9, 11, 14, 16, 18, 20, 25, 35, 36, 39, 44, 46, 47, 49, 53, 54, 56, 58, 61, 62, 64, 69, 70], "numer": [0, 9, 44, 46], "numpi": [44, 46, 53, 55, 58, 62, 64, 69], "obj": 54, "object": [0, 4, 5, 6, 7, 8, 9, 11, 16, 21, 24, 27, 29, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 60, 62, 64, 70], "observ": [44, 47, 49, 53], "obtain": [11, 18, 46], "occur": [0, 7, 29, 44, 53, 64], "off": [4, 5, 29, 44, 62], "offer": [0, 11, 17, 19, 29, 44, 47, 49, 53, 70], "offlin": [0, 44, 46], "often": [44, 46, 53], "okai": [44, 45], "old": [11, 18, 44, 53, 64], "old_block_numb": 64, "old_coldkei": 6, "omit": 2, "on_devic": [44, 45, 48], "onboard": [44, 53], "onc": [44, 53, 54], "one": [0, 2, 6, 10, 11, 21, 22, 23, 25, 27, 29, 39, 44, 46, 47, 49, 53, 55, 56, 64], "ongo": [0, 11, 20, 44], "onli": [0, 4, 5, 10, 11, 12, 13, 15, 16, 17, 29, 44, 46, 47, 49, 50, 51, 53, 54, 55, 70], "open": 29, "opentensor": [44, 47, 49, 53], "open\u03c4ensor": [11, 19], "oper": [0, 7, 9, 11, 15, 16, 18, 19, 21, 23, 25, 29, 44, 45, 46, 47, 49, 53, 54, 60, 62, 64, 69, 70], "opt": [11, 18], "optim": [44, 54], "option": [0, 2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 62, 64, 65, 67, 70], "order": [9, 11, 25, 44, 53, 54, 64, 70], "orderbi": 25, "org": 44, "organ": [11, 13], "origin": [0, 2, 11, 18, 44, 54], "original_hotkei": [11, 18], "other": [0, 3, 6, 10, 11, 14, 16, 19, 20, 22, 29, 44, 46, 47, 49, 53, 54, 56, 60], "other_neuron_ss58": [44, 53], "otherwis": [4, 5, 24, 29, 31, 39, 44, 47, 49, 53, 54, 56, 62, 64, 68], "our": [44, 56], "out": [0, 11, 15, 16, 18, 25, 44], "outcom": [9, 11, 44, 54], "outgo": 29, "outlin": 46, "output": [0, 4, 5, 9, 11, 13, 17, 18, 19, 25, 44, 46, 64], "output_in_plac": [36, 44, 53, 64], "over": [6, 9, 11, 16, 29, 44, 46, 54, 62, 64], "overal": [11, 17, 44, 47, 49, 53], "overhead": 46, "overload": [44, 54], "overrid": [0, 2, 44, 53, 54], "overridden": [44, 54, 64], "overse": [44, 53], "overus": [44, 53], "overview": [9, 11, 12, 13, 16, 19, 21, 44, 47, 49, 53, 71], "overviewcommand": [11, 17], "overwrit": [11, 25, 44, 45, 48, 70], "overwrite_coldkei": [11, 25], "overwrite_coldkeypub": [11, 25], "overwrite_hotkei": [11, 25], "own": [6, 9, 11, 44, 46, 47, 49, 53, 54], "owner": [6, 9, 11, 16, 18, 44, 53], "owner_ss58": [6, 44], "ownership": 16, "p": [11, 13, 14, 17, 44, 53], "pack": 64, "packag": [5, 15, 54], "packed_diff": 64, "page": 71, "pageinfo": 25, "pair": [6, 11, 12, 44, 49, 53, 54, 55], "pallet": 65, "palletmetadatav14": 65, "paper": [44, 46, 53], "parachain": 44, "param": [0, 8, 11, 16, 21, 27, 31, 44, 45, 46, 47, 49, 50, 53, 58, 60, 61, 62, 63, 64, 65, 69], "param_nam": [27, 44, 53], "paramet": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70], "parameter_dict": [6, 44], "parameterdict": [6, 44], "params_no_default": [27, 44], "paramwithtyp": [44, 53], "parent": [7, 11, 21, 23, 41, 44, 51, 53, 65], "parent_address": [44, 53], "parent_hotkei": [11, 21, 23], "parenthotkei": [11, 21], "pars": [0, 27, 28, 29, 30, 44, 47, 49, 51, 53, 54, 55], "parse_headers_to_input": [44, 54], "parser": [0, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 44, 53, 56, 70], "parser_no_default": [27, 44], "part": [0, 9, 10, 11, 12, 14, 19, 25, 44, 46, 51, 53, 54], "parti": [4, 5], "partial": [11, 14], "particip": [0, 11, 12, 14, 18, 19, 20, 21, 22, 23, 25, 44, 46, 47, 49, 53, 70], "particular": [11, 16, 20, 21, 44, 47, 49, 53], "particularli": [11, 16, 18, 19, 20, 25, 44, 46, 53, 54], "pass": [0, 16, 27, 29, 32, 37, 40, 41, 44, 45, 47, 49, 51, 53, 56, 63, 69, 70], "passphras": [44, 70], "password": [11, 24, 25, 30, 44, 45, 48, 70], "past": [9, 11, 46], "path": [0, 9, 11, 12, 13, 21, 24, 25, 44, 45, 46, 48, 67, 70], "pathlib": 67, "pattern": [44, 53], "payload": [0, 44, 52, 54], "peer": [44, 46, 53], "penalti": [44, 53], "pend": [44, 56], "per": [0, 6, 9, 11, 12, 18, 21, 36, 44, 46, 53, 58, 61, 64], "perceiv": [44, 53], "percentag": [6, 9, 11, 44, 53], "percept": [44, 53], "perform": [0, 4, 5, 8, 9, 10, 11, 12, 15, 16, 18, 25, 29, 44, 46, 47, 49, 51, 53, 54, 60], "perhap": [11, 25], "period": [11, 16, 25, 44, 53], "perman": [11, 18], "permiss": [11, 26, 44, 45], "permit": [9, 11, 17, 44, 53], "persist": 46, "perspect": [44, 53], "pgp": [10, 11], "pgp_fingerprint": [10, 11, 62, 68], "phrase": [11, 25], "piec": [16, 29], "ping": [29, 44], "pip": [11, 15], "pipelin": 0, "pivot": [0, 44, 46, 53, 54], "place": [0, 11, 18, 27, 29, 44, 46, 53, 64], "placehold": [3, 39, 44, 53], "placeholder1": [6, 39, 44, 49, 53], "placeholder2": [6, 39, 44, 49, 53], "plai": [0, 11, 20, 44, 46, 53, 54], "plan": [16, 44, 47, 49, 53], "pleas": [44, 47, 49, 53], "point": [29, 44, 46, 47, 49, 53], "polici": [44, 45], "poni": [27, 44], "pool": [0, 44], "popul": [4, 5, 44, 47, 49, 53], "port": [0, 6, 11, 17, 29, 35, 39, 44, 49, 53, 54, 57, 63], "posit": [0, 11, 21, 23, 44, 51, 54, 55], "possibl": [44, 47, 49, 53], "possibli": [11, 25, 44, 70], "post": 29, "postprocess": 0, "postprocessexcept": [30, 44], "potenti": [0, 9, 11, 16, 25, 31, 44, 46, 53], "pow": [11, 16, 18, 36, 44, 47, 49, 53, 58, 60, 64], "pow_regist": [11, 18], "pow_result": [44, 47, 49, 53], "power": [11, 19, 44, 53], "powregistercommand": [11, 18], "powsolut": [44, 47, 49, 53, 64], "practic": [11, 25, 46], "preced": [27, 44, 53], "precondit": [11, 18], "predefin": [0, 44, 53], "prefer": [11, 18, 25], "prefix": [0, 4, 5, 44, 53, 54, 56, 70], "prefix_char": 7, "prepar": [4, 5, 16, 44, 52], "prepare_child_proport": 41, "prepare_synaps": [44, 52], "prepare_synapse_fn": [44, 52], "prepend": [44, 53], "preprocess": [0, 29, 44], "preprocess_synapse_for_request": [29, 44], "presenc": [0, 11, 17, 25, 44, 53], "present": [9, 11, 13, 17, 44, 53, 54], "preserv": [44, 54], "pretti": [27, 44], "prev_deleg": 9, "prevent": [0, 9, 11, 29, 44, 53, 64], "previou": [0, 9, 11, 44, 46], "previous": [11, 23, 44, 53], "previous_deleg": 9, "primari": [4, 5, 44, 54, 70], "primarili": [9, 10, 11, 15, 19, 44, 46, 53], "principl": [44, 46, 53], "print": [0, 7, 9, 11, 13, 14, 17, 27, 29, 44, 45, 46, 53, 54, 64, 70], "print_current_stak": [11, 21], "print_result": [44, 45], "prior": [44, 54], "priorit": [0, 44], "prioriti": [0, 30, 44, 56, 70], "prioritize_my_synap": [0, 44], "prioritize_my_synape_2": [0, 44], "priority_custom": [0, 44], "priority_fn": [0, 44], "priorityexcept": [30, 44], "prioritythreadpoolexecutor": [44, 56], "privat": [0, 44], "probabilist": [44, 53], "problem": [16, 58, 64], "proc_num": 64, "proce": [0, 11, 15, 18], "proceed": [9, 11, 18, 21, 22, 23, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 53], "process": [0, 4, 5, 9, 11, 16, 18, 19, 20, 21, 23, 29, 36, 44, 46, 47, 49, 51, 52, 53, 54, 55, 64], "process_error_messag": 29, "process_respons": [44, 52], "process_responses_fn": [44, 52], "process_server_respons": [29, 44], "process_streaming_respons": [44, 51], "process_tim": [44, 54], "process_weights_for_netuid": 69, "processing_dur": [44, 54], "processor": [0, 11, 18], "produc": [44, 54], "prog": 7, "program": [0, 44], "programmat": [9, 10, 11], "progress": [44, 53, 64], "prohibit": 0, "project": [2, 4], "prolifer": [44, 53], "prometheu": [6, 33, 44, 47, 49, 53, 57, 71], "prometheus_extrins": 35, "prometheus_info": [6, 44], "prometheus_info_decod": [6, 44], "prometheusinfo": [6, 44, 53], "prometheusinfodict": [44, 47, 49], "prometheusservecallparam": [44, 47, 49, 53, 57], "promis": [44, 53], "prompt": [8, 9, 10, 11, 15, 16, 18, 21, 22, 23, 24, 25, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 53], "promptbas": 24, "promptli": 0, "proof": [11, 16, 18, 44, 53, 64], "propag": 46, "proper": [29, 31, 44, 46, 54], "properli": [0, 29, 44, 46], "properti": [4, 5, 6, 29, 44, 45, 46, 48, 50, 53, 54, 56, 60, 70], "proport": [11, 21, 41, 44, 46, 53, 65], "propos": [11, 20, 38, 44, 53], "proposal_hash": [11, 20, 38, 44, 53], "proposal_idx": [38, 44, 53], "proposal_vot": [11, 20], "proposalcalldata": [6, 20, 44, 53], "proposalscommand": [11, 20], "proposalvotedata": [6, 20, 44, 53], "protect": [11, 25, 44, 46, 53, 70], "protocol": [0, 6, 7, 11, 20, 25, 39, 44, 49, 53, 54], "provid": [0, 3, 4, 5, 6, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 25, 29, 31, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 60, 65, 69, 70], "pruning_scor": [6, 44], "pubkei": 64, "public": [0, 11, 13, 14, 22, 25, 42, 44, 46, 47, 49, 53, 70], "public_kei": [44, 62, 68, 70], "public_key_hex": [11, 25], "publish": [4, 5, 39, 44, 47, 49, 53], "publish_metadata": 39, "pull": [11, 15], "punit": [44, 53], "purpos": [9, 10, 11, 16, 25, 29, 44, 46, 47, 49, 53, 70], "put": 64, "puzzl": [11, 18], "pydant": [44, 51, 54, 55], "pydantic_cor": [44, 51, 54, 55], "pypi": [44, 62, 67], "python": 9, "queri": [10, 11, 14, 16, 25, 29, 30, 44, 46, 47, 49, 52, 53, 54], "query_api": [44, 52], "query_const": [44, 47, 49, 53], "query_ident": [44, 53], "query_map": [44, 53], "query_map_subtensor": [44, 47, 49, 53], "query_modul": [44, 53], "query_respons": [44, 47, 49, 53], "query_runtime_api": [44, 53], "query_subtensor": [44, 47, 49, 53], "querymapresult": [44, 53], "queue": [0, 4, 5, 44, 56, 64], "queuehandl": [4, 5], "queuelisten": [4, 5], "quick": [11, 13, 17, 44, 47, 49, 53, 54], "quicker": 46, "quickli": 46, "quinlan": 56, "r": 46, "rais": [0, 6, 29, 30, 32, 39, 41, 43, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 62, 63, 64, 65, 67, 68, 70], "random": [44, 50], "randomli": [44, 53], "rang": [0, 9, 11, 44, 53, 63], "rank": [0, 6, 10, 11, 14, 17, 44, 46, 47, 49, 53], "rao": [44, 47, 49, 53, 60], "rao_unit": [44, 60], "raok9": [11, 19], "raopertao": 62, "rate": [11, 16, 21, 44, 46, 47, 49, 53, 64], "rather": [44, 54], "raw": [44, 46, 54, 55, 65], "raw0": 39, "raw_root_weights_data": 46, "raw_weights_data": 46, "re": [44, 53, 54, 70], "reach": 16, "read": [11, 13, 16, 17, 44, 45, 54], "readabl": [0, 11, 16, 17, 30, 44, 45, 46, 48], "readi": [0, 44, 46, 51], "real": [11, 18, 44, 47, 49, 53], "realli": 0, "realloc": [11, 23, 44, 53], "reap": [44, 53], "reason": [11, 25], "receipt": [34, 44, 53], "receiv": [0, 4, 5, 11, 14, 17, 29, 44, 46, 51, 53, 54], "received_head": [44, 54], "receiver_hotkei": [0, 44], "recent": [44, 47, 49, 53], "recept": [44, 53], "reciev": [29, 42, 44], "reclaim": [44, 56], "recogn": [44, 53], "recommend": [11, 15, 25, 29, 44, 54, 70], "recomput": [0, 44], "reconstitut": 46, "reconstruct": [0, 44, 54], "record": [2, 4, 5, 44, 46, 49, 53], "record_log": [4, 5], "recoveri": [11, 25], "recreat": [11, 25, 44, 70], "recurs": [27, 44, 54], "recycl": [11, 16, 18, 36, 44, 53], "red": [6, 9, 11], "redeploi": 0, "reduc": [44, 46, 53], "redund": [9, 11], "refer": [44, 46, 47, 49, 53, 72], "reflect": [44, 46, 53], "regard": [44, 53], "regen_coldkei": [11, 25, 44, 70], "regen_coldkeypub": [11, 25, 44, 70], "regen_hotkei": [11, 25, 44, 70], "regencoldkeycommand": [11, 25], "regencoldkeypubcommand": [11, 25], "regener": [11, 25, 44, 70], "regenerate_coldkei": [44, 70], "regenerate_coldkeypub": [44, 70], "regenerate_hotkei": [44, 70], "regenhotkeycommand": [11, 25], "regist": [0, 4, 5, 6, 9, 11, 16, 17, 19, 20, 24, 30, 32, 34, 36, 37, 38, 41, 43, 44, 47, 49, 53, 64, 71], "register_extrins": 36, "register_primary_logg": [4, 5], "register_sen": [44, 53], "register_senate_extrins": 38, "register_subnetwork": [16, 44, 53], "register_subnetwork_extrins": 34, "registercommand": [11, 18], "registersubnetworkcommand": 16, "registr": [0, 6, 11, 16, 18, 21, 29, 30, 33, 44, 46, 47, 49, 53, 55, 62, 69, 71], "registration_allow": [6, 16, 44], "registrationerror": [30, 44], "registrationstatist": 64, "registrationstatisticslogg": 64, "registri": 6, "regular": [44, 70], "reinstal": [11, 15], "rel": [11, 21, 44, 53], "relat": [11, 19, 30, 44, 53], "relationship": [44, 46, 53], "releas": [0, 29, 44, 46, 47, 49, 53], "relev": [0, 11, 20, 46], "reli": [0, 9, 29, 44], "reliabl": [0, 44, 46, 54], "relianc": [0, 44], "reload": 46, "remain": [11, 23, 29, 43, 44, 46, 53], "remov": [0, 4, 5, 11, 20, 23, 38, 43, 44, 47, 49, 53], "render": [9, 11, 21], "render_t": [11, 21], "renew": [11, 25], "replac": 2, "replai": [0, 44], "replic": [44, 54], "report": [9, 11, 12], "repositori": [11, 15], "repr": [27, 44, 46], "repres": [0, 11, 14, 21, 29, 39, 44, 45, 46, 47, 49, 53, 54, 55, 56, 60], "represent": [0, 6, 11, 17, 29, 39, 44, 45, 46, 54, 63, 69, 70], "reput": 46, "request": [0, 8, 11, 20, 29, 30, 44, 47, 49, 51, 53, 54], "request_nam": 29, "requestresponseendpoint": 0, "requests_get": 24, "requir": [0, 9, 11, 16, 18, 19, 22, 25, 26, 30, 31, 41, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 63, 64, 70], "required_hash_field": [44, 54], "reset": [44, 47, 49, 58], "reset_cuda": 58, "resili": [44, 47, 49, 53], "resourc": [0, 11, 16, 18, 29, 44, 46, 47, 49, 53, 56], "respect": [9, 11, 13, 20, 25, 44, 46, 70], "respond": [0, 44, 45], "respons": [0, 11, 18, 19, 20, 28, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 49, 51, 52, 53, 54], "response_overrid": 0, "restart": 46, "restor": [44, 46, 70], "restrict": [44, 53], "result": [0, 2, 9, 11, 12, 17, 44, 45, 47, 49, 52, 53, 54, 60], "retri": [44, 47, 49, 53], "retriev": [0, 9, 10, 11, 14, 16, 19, 20, 21, 44, 45, 46, 47, 49, 51, 53, 64, 65, 70], "retrieve_children": [11, 21], "return": [0, 2, 3, 4, 5, 6, 7, 9, 11, 12, 16, 17, 20, 21, 24, 25, 27, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70], "return_per_1000": [6, 44], "return_typ": 62, "return_valu": [11, 13], "reus": [0, 29, 44], "reveal": [11, 26, 31, 44, 53], "reveal_weight": [44, 53], "reveal_weights_extrins": 31, "revealweightcommand": [11, 26], "revel": [31, 44, 53], "revers": [9, 11], "review": [44, 53], "revok": [11, 23], "revoke_children": [11, 23], "revokechildrencommand": [11, 23], "reward": [9, 11, 12, 18, 19, 44, 46, 47, 49, 53], "rfc": 2, "rho": [6, 11, 14, 16, 17, 44, 49, 53], "rich": [9, 24, 64], "right": [11, 20], "riot": [10, 11, 62, 68], "rizzo": [11, 19], "robust": [11, 18, 44, 54, 64], "role": [0, 11, 16, 20, 25, 44, 46, 47, 49, 53, 54], "root": [3, 9, 11, 13, 14, 20, 33, 44, 46, 53, 54, 62, 69, 71], "root_regist": [44, 53], "root_register_extrins": 37, "root_set_weight": [44, 53], "root_weight": 46, "rootgetweightscommand": [11, 19], "rootlist": [11, 19], "rootregistercommand": [11, 19], "rootsetboostcommand": [11, 19], "rootsetslashcommand": [11, 19], "rootsetweightscommand": [11, 19], "rounds_tot": 64, "roundtable21": [11, 19], "rout": [44, 54], "router": [0, 44, 63], "row": [46, 69], "row_bond": 69, "row_weight": 69, "rpc": [6, 44, 53], "rtype": [44, 53, 63], "rule": [0, 44, 47, 49, 53], "run": [0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 36, 44, 47, 49, 53, 54, 56, 64, 70], "run_async": [29, 44], "run_faucet": [44, 53], "run_faucet_extrins": 36, "run_in_thread": 0, "runexcept": [30, 44], "runfaucetcommand": [11, 18], "runtim": [0, 44, 46, 53], "runtime_api": [44, 53], "s58_address": [10, 11], "safe": [29, 44, 54, 56, 70], "safer": [44, 70], "salt": [11, 26, 31, 44, 53, 69], "same": [0, 11, 18, 27, 44, 45, 46, 53, 54, 64, 70], "sampl": 64, "sanit": [44, 54], "save": [2, 44, 46, 65, 70], "scalabl": [0, 44, 53], "scale": [6, 44, 53], "scalebyt": 6, "scalecodec": 6, "scaletyp": [44, 47, 49, 53], "scaling_law_pow": [6, 44, 53], "scalinglawpow": [44, 53], "scan": [11, 13], "scenario": [0, 29, 44, 45], "schedul": [6, 44, 56], "scheduledcoldkeyswapinfo": 6, "schema": [44, 54], "scope": [44, 51], "score": [11, 14, 17, 46], "script": [10, 11], "sdk": 72, "seal": [58, 64], "seamless": 0, "seamlessli": 0, "search": [34, 44, 53], "second": [27, 29, 44, 52, 61], "secur": [0, 11, 16, 18, 21, 25, 44, 46, 47, 49, 53, 54, 70], "see": [6, 11, 16, 20, 21, 27, 30, 36, 44, 49, 53, 55, 56, 57, 62, 63, 64, 67, 72], "seed": [11, 25, 44, 50, 70], "seek": [11, 16, 17, 19, 20], "seen": [0, 44, 54], "segment": [44, 53], "select": [11, 18, 44, 53, 62], "self": [0, 2, 6, 9, 11, 27, 29, 30, 36, 39, 44, 46, 49, 51, 53, 54, 55, 56, 57, 62, 63, 64, 67], "senat": [11, 19, 33, 44, 53, 71], "senate_leav": [11, 20], "senate_regist": [11, 20], "senate_vot": [11, 20], "senatecommand": [11, 20], "senateleavecommand": [11, 20], "senateregistercommand": [11, 20], "send": [9, 11, 16, 22, 29, 44, 46, 47, 49, 51, 53, 54], "send_extrins": [44, 53], "sender": [0, 44], "sensit": [44, 46, 47, 49, 53, 54], "sent": [0, 29, 44, 51, 54], "separ": [0, 4, 5, 11, 19, 25, 26, 44, 54, 70], "sequenti": 29, "seri": [11, 15], "serial": [0, 44, 45, 54, 55], "serialized_data": [44, 54], "serialized_keypair_to_keyfile_data": [44, 45], "serv": [0, 6, 11, 18, 33, 35, 44, 46, 47, 49, 53, 54, 57, 70, 71], "serve_axon": [44, 53], "serve_axon_extrins": 39, "serve_extrins": 39, "serve_prometheu": [44, 53], "server": [0, 29, 30, 44, 51], "server_respons": [29, 44], "servic": [0, 44, 47, 49, 53], "serving_rate_limit": [6, 44, 53], "session": [29, 44, 46], "set": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 18, 19, 21, 23, 25, 27, 29, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 53, 54, 64, 66, 70], "set_childkey_tak": [11, 21, 44, 53], "set_childkey_take_extrins": 41, "set_children": [11, 21, 44, 53], "set_children_extrins": 41, "set_coldkei": [44, 70], "set_coldkeypub": [44, 70], "set_config": [4, 5], "set_debug": [4, 5], "set_difficulti": [44, 47, 49], "set_hotkei": [44, 70], "set_hyperparamet": [44, 53], "set_hyperparameter_extrins": 34, "set_ident": [10, 11], "set_keypair": [44, 45, 48], "set_name_typ": [44, 54], "set_root_weights_extrins": 37, "set_tak": [9, 11, 44, 53], "set_trac": [2, 4, 5], "set_weight": [33, 44, 53, 71], "set_weights_extrins": 40, "setchildkeytakecommand": [11, 21], "setchildrencommand": [11, 21], "setidentitycommand": [10, 11], "settakecommand": [9, 11], "setup": [0, 11, 18, 25, 44, 47, 49], "setup_config": [44, 53], "sever": [0, 9, 11, 16, 44, 56], "sgvsbg8gv29ybgq": [44, 54], "sha256": 39, "sha3": [44, 54], "shallow": [27, 44], "shape": [11, 20, 44, 53, 55], "share": [44, 46, 53, 64], "should": [0, 9, 10, 11, 15, 16, 18, 20, 21, 22, 25, 29, 36, 39, 44, 46, 47, 49, 51, 53, 54, 55, 64, 70], "should_exit": 0, "show": [9, 11, 15, 19, 20, 21, 25], "show_choic": 24, "show_default": 24, "show_deleg": 9, "show_delegates_lit": 9, "shown": [11, 21], "showvotescommand": [11, 20], "shut": [0, 44], "shutdown": [0, 44, 56], "side": [0, 9, 10, 11, 44], "sign": [0, 29, 44, 46, 47, 49, 53], "signal": [0, 29, 44], "signatur": [0, 6, 24, 27, 30, 36, 44, 49, 51, 53, 54, 55, 56, 57, 62, 63, 64, 67], "signifi": [44, 46, 53], "signific": [11, 19, 20, 44, 46, 53], "silenc": [4, 5], "silent": 29, "similar": [11, 16, 25, 29, 46], "simpl": [27, 44, 46, 54], "simpli": [44, 46, 54], "simplifi": [44, 46, 47, 49, 53], "simul": [44, 45, 47, 49, 53], "simultan": [44, 53], "sinc": [4, 5, 11, 14, 17, 44, 45, 53], "singl": [9, 11, 12, 19, 25, 29, 44, 53, 64], "size": [10, 11, 29, 44, 46, 54], "skip": [3, 44, 45], "slash": [11, 19], "small": [44, 53], "smaller": 64, "snapshot": [9, 11, 14, 44, 46, 47, 49, 53], "so": [11, 25, 27, 29, 44, 53, 54, 61, 69], "softmax": [44, 53], "softwar": [11, 18, 46], "solut": [58, 64], "solution_queu": 64, "solv": [11, 18, 36, 44, 53, 58, 64], "solve_cuda": 58, "solver": 64, "some": [11, 18, 29], "some_async_method": 29, "sort": [0, 9, 11, 17, 44, 62], "sort_bi": [11, 17], "sort_ord": [11, 17], "sound": [11, 18], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70], "space": [44, 70], "spam": 0, "special": [0, 2, 44, 46, 51, 53], "specif": [0, 4, 5, 9, 11, 16, 17, 18, 19, 20, 25, 26, 29, 31, 34, 44, 46, 47, 49, 51, 52, 53, 54, 56, 70], "specifi": [0, 2, 6, 8, 9, 11, 12, 14, 16, 18, 19, 20, 21, 22, 23, 25, 26, 29, 32, 34, 39, 41, 43, 44, 46, 47, 49, 53, 54, 55, 62, 68], "specul": [44, 46, 53], "speed": 64, "sphinx": 71, "sq": 25, "ss58": [9, 10, 11, 13, 16, 17, 21, 22, 23, 25, 32, 41, 43, 44, 47, 49, 53, 62, 68, 70], "ss58_address": [9, 11, 25, 42, 44, 47, 49, 53, 62, 68, 69, 70], "ss58_address_to_byt": [44, 62], "ss58_to_vec_u8": [44, 62], "stabil": [44, 46, 53], "stabl": 0, "stack": 29, "stage": [0, 44, 53], "stake": [6, 9, 10, 11, 12, 14, 17, 19, 23, 25, 30, 32, 33, 42, 43, 44, 46, 47, 49, 53, 70, 71], "stake_bal": [41, 43], "stake_dict": [6, 44], "stakecommand": [11, 21], "stakeerror": [30, 41, 43, 44, 47, 49, 53], "stakehold": [44, 47, 49, 53], "stakeinfo": [6, 44, 53], "stakeshow": [11, 21], "staking_actu": [44, 53], "staking_target": [44, 53], "stale": 64, "standalon": [11, 12, 14], "standard": [4, 11, 25, 44, 46, 52, 53, 54], "starlett": [0, 44, 51], "start": [0, 4, 5, 11, 18, 25, 44, 53, 54, 58, 64], "start_tim": [0, 56], "stat": 64, "state": [0, 2, 4, 5, 9, 10, 11, 12, 13, 14, 16, 17, 29, 44, 46, 47, 49, 53, 54], "state_cal": [44, 53], "state_dict": 46, "statemachin": [4, 5], "statement": 29, "static": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 44, 46, 47, 49, 53, 55, 60, 64], "statist": [9, 11, 14, 18, 64], "statu": [0, 4, 5, 8, 9, 11, 14, 17, 20, 25, 29, 44, 46, 47, 49, 53, 54, 64], "status_cod": [0, 44, 54], "status_messag": [44, 54], "stdout": [0, 44, 53, 70], "step": [0, 11, 16, 19, 20, 25, 44, 46, 53], "still": [27, 44, 64], "stop": [0, 4, 5, 44, 64], "stopev": 64, "storag": [44, 47, 49, 53], "store": [44, 45, 46, 47, 48, 49, 54, 60, 62, 64, 68, 70], "str": [0, 2, 3, 4, 5, 6, 7, 9, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 34, 35, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 58, 60, 62, 63, 64, 65, 67, 68, 69, 70], "str_val": 63, "straightforward": [11, 19], "strateg": [11, 21, 44, 53], "strategi": [44, 53], "stream": [4, 5, 29, 44, 71], "stream_respons": [44, 51], "streamer": [44, 51], "streamingrespons": [44, 51], "streamingsynaps": [0, 29, 44, 51], "streamlin": [44, 47, 49, 53], "strict": [27, 44], "strictli": [27, 44], "string": [2, 6, 10, 11, 25, 27, 29, 31, 44, 45, 46, 47, 48, 49, 53, 54, 55, 60, 62, 63, 68, 70], "stronger": 46, "strongli": [44, 47, 49, 53], "strtobool": [44, 62], "strtobool_with_default": [44, 62], "structur": [6, 10, 11, 13, 15, 16, 18, 19, 20, 44, 46, 47, 49, 51, 53, 54, 62, 68], "style": 2, "sub": [4, 64], "subclass": [44, 51, 54], "submit": [39, 44, 47, 49, 53, 56, 64], "subnet": [0, 6, 9, 10, 11, 12, 14, 16, 18, 19, 21, 23, 24, 26, 31, 36, 37, 40, 41, 43, 44, 47, 49, 53, 64, 69, 71], "subnet_exist": [44, 53], "subnetgethyperparamscommand": 16, "subnethyperparamet": [6, 24, 44, 53], "subnethyperparamscommand": 16, "subnetinfo": [6, 44, 47, 49, 53], "subnetlistcommand": 16, "subnetlockcostcommand": 16, "subnetsapi": [44, 52], "subnetsudocommand": 16, "subnetwork": [16, 34, 44, 47, 49, 53], "subnetwork_n": [6, 44, 53], "subnetworkn": [44, 53], "subqueri": 25, "subscrib": [35, 39, 44, 70], "subsequ": [0, 4, 5, 27, 29, 44, 47, 49, 53], "substensor": 35, "substrat": [44, 45, 47, 49, 53, 63, 64, 65], "substrateinterfac": [34, 65], "subtensor": [0, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 49, 62, 64, 69, 71], "subtensor_build_id": 65, "subtensor_inst": [11, 21], "subtensor_mock": [47, 71], "subtensormodul": 49, "succeed": [44, 54], "success": [0, 4, 5, 9, 10, 11, 18, 19, 20, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 49, 53, 54], "success_level_num": 2, "successfulli": [16, 39], "succinctli": 46, "sudo": 16, "sudo_force_set_bal": [44, 47, 49], "suffici": [11, 18, 21, 22, 23, 44, 47, 49, 53], "suffix": [4, 5, 61], "suggest": 46, "suit": [9, 11, 18], "suitabl": [11, 18, 44, 46, 54], "sum": [9, 11, 21, 44, 53, 54, 61, 69], "summar": 16, "summari": [11, 17], "superclass": [44, 54], "suppli": [44, 46, 53], "support": [0, 9, 11, 18, 25, 44, 45, 53], "suppress": [44, 70], "supress": [44, 62], "suri": [44, 70], "swap": [6, 8, 11, 18, 44, 53], "swap_hotkei": [11, 18, 44, 53], "swap_hotkey_extrins": 36, "swaphotkeycommand": [11, 18], "sweetapp": 56, "symbol": [44, 60], "symbolvalu": [44, 60], "synaps": [0, 29, 30, 44, 51, 52, 71], "synapse_dict": [44, 54], "synapse_histori": [29, 44], "synapse_nonc": 59, "synapse_timeout": 59, "synapse_to_respons": 0, "synapsedendritenoneexcept": [30, 44], "synapseexcept": [30, 44], "synapseparsingerror": [30, 44], "sync": [44, 46, 53], "synchron": [29, 44, 46, 47, 49, 53], "synergy_scaling_law_pow": [44, 53], "system": [3, 4, 5, 11, 18, 29, 44, 45, 46, 47, 49, 53, 70], "t": [0, 4, 5, 27, 44, 45, 46, 62], "tabl": [9, 10, 11, 12, 14, 16, 19, 21, 25], "tabular": [11, 17], "tailor": [0, 44, 46, 54], "take": [0, 6, 9, 11, 21, 27, 30, 32, 41, 44, 47, 49, 51, 53, 62], "takeerror": 30, "taken": [9, 44, 54], "talli": [11, 25], "tamper": [0, 44, 53, 54], "tao": [6, 9, 10, 11, 16, 17, 18, 21, 22, 23, 32, 36, 41, 42, 43, 44, 47, 49, 53, 60, 70], "taostat": 25, "target": [11, 18, 29, 44, 53], "target_axon": [29, 44], "target_axon_info": [29, 44], "target_regs_per_interv": [6, 16, 44], "task": [0, 44, 53, 54, 70], "tau": [11, 14], "techniqu": [0, 44], "technologi": [44, 47, 49, 53], "templat": 2, "tempo": [6, 16, 44, 53], "temporarili": [0, 44], "tensor": [6, 11, 19, 44, 46, 54, 62, 69, 71], "tensor_": [44, 55], "term": [44, 53], "termin": [0, 10, 11, 18, 44, 54], "terminal_info": [44, 54], "terminalinfo": [44, 54], "test": [9, 11, 14, 18, 19, 36, 44, 45, 46, 47, 49, 50, 53], "test_nam": 50, "test_util": [62, 71], "testnet": [11, 18, 44, 53], "text": [0, 2, 24, 44], "texttyp": 24, "th": 46, "than": [0, 44, 69], "thei": [0, 6, 8, 11, 16, 19, 20, 26, 44, 45, 46, 48, 53, 54], "theirs": 16, "them": [0, 6, 11, 18, 20, 21, 23, 29, 44, 51, 53, 54, 70], "themselv": [44, 53], "therebi": [0, 44, 53, 70], "thereof": 63, "thi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 39, 42, 44, 45, 46, 47, 49, 51, 53, 54, 56, 60, 61, 64, 70, 71], "think": [44, 54], "third": [4, 5], "thorough": [44, 53], "those": [11, 25, 27, 29, 44], "thread": [0, 11, 18, 36, 44, 53, 56, 58, 64], "thread_name_prefix": [44, 56], "thread_pool": [0, 44], "threadpool": [0, 44, 71], "threadpoolexecutor": [44, 56], "three": [44, 47, 49, 53], "threshold": [6, 11, 20, 41, 43, 44, 47, 49, 53], "through": [0, 3, 8, 29, 44, 47, 49, 53, 70], "throughout": 4, "thrown": [30, 44], "thu": [44, 53], "ti": 29, "time": [0, 2, 11, 14, 17, 25, 44, 46, 47, 49, 53, 54, 56, 61, 64], "time_averag": 64, "time_sp": 64, "time_spent_tot": 64, "timeout": [0, 29, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 52, 54, 62, 67], "timestamp": [0, 46], "to_head": [44, 54], "to_parameter_dict": [6, 44], "to_str": [0, 6, 27, 44], "token": [7, 9, 11, 18, 21, 22, 23, 44, 47, 49, 51, 53, 70], "token_stream": [44, 51], "tolist": [44, 55], "tool": [9, 11, 19, 44, 47, 49, 53, 54], "topk": [44, 62], "topologi": [0, 44, 53], "torch": [6, 29, 37, 40, 44, 46, 53, 55, 62, 64, 69], "torchmetagraph": 46, "total": [6, 9, 11, 14, 16, 21, 41, 44, 46, 53, 54, 64], "total_bal": [11, 17], "total_daily_return": [6, 44], "total_issu": [44, 53], "total_s": [44, 54], "total_stak": [6, 44, 46, 53], "totalcount": 25, "toward": [11, 20, 44, 46, 53], "tpb": [11, 18, 36, 44, 53, 58, 64], "trace": [2, 4, 5, 44], "trace_level_num": 2, "trace_log_format": 1, "traceback": 29, "tracebacktyp": 29, "track": [11, 25, 44, 46, 53, 54], "transact": [9, 10, 11, 12, 18, 22, 25, 30, 31, 32, 39, 44, 46, 47, 49, 53, 54, 70], "transfer": [7, 11, 23, 25, 30, 33, 44, 47, 49, 53, 70, 71], "transfer_bal": [44, 47, 49, 53], "transfer_extrins": [42, 44, 53], "transfercommand": [11, 22], "transfererror": [30, 44], "transferfilt": 25, "transfersorderbi": 25, "transform": [44, 46, 54], "transit": [0, 4, 5, 44], "translat": [27, 44], "transmiss": [0, 44, 54], "transmit": [29, 44, 54], "transpar": [11, 19, 20, 22, 44, 53, 54, 64], "transport": [44, 54], "travers": 54, "treat": [44, 45, 48], "tree": [11, 13], "trend": [44, 53], "tri": [9, 11, 64], "trigger": [0, 44], "troubleshoot": 29, "true": [0, 2, 4, 5, 6, 7, 11, 12, 15, 16, 19, 21, 24, 27, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 62, 64, 68, 70], "truncat": [9, 11], "trust": [0, 6, 10, 11, 14, 17, 44, 46, 47, 49, 53], "trustworthi": [0, 44, 46, 47, 49, 53], "truth": [44, 62], "try": [30, 44, 64], "tune": [44, 53], "tupl": [0, 5, 6, 11, 16, 17, 21, 24, 25, 28, 31, 41, 44, 46, 47, 49, 53, 54, 56, 58, 61, 64, 65, 69, 70], "turn": 29, "turn_console_off": 44, "turn_console_on": 44, "tv": 46, "twitter": [10, 11, 62, 68], "two": [6, 16, 27, 44, 49, 53, 55, 60, 64, 70], "tx_rate_limit": [44, 53], "txt": [44, 70], "tyep": 63, "type": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 16, 17, 20, 21, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71], "type_nam": 6, "type_str": 6, "typeddict": [6, 44, 49, 53, 57], "typeerror": [6, 44], "typic": [0, 9, 11, 18, 21, 44, 46, 51, 53, 54], "u": [44, 47, 49], "u16": [44, 53], "u16_max": [62, 69], "u16_normalized_float": [44, 62], "u16_to_float": 61, "u32": 69, "u32_max": 69, "u64": [41, 61], "u64_max": 62, "u64_normalized_float": [44, 62], "u64_to_float": 61, "u8": [44, 62], "u8_kei": [44, 62], "u8_key_to_ss58": [44, 62], "uid": [6, 11, 14, 17, 19, 21, 26, 31, 34, 35, 39, 40, 41, 43, 44, 46, 47, 49, 50, 53, 69], "uint64": 40, "un": 32, "unabl": [30, 44], "unambigu": [0, 44, 46], "unapp": 16, "unauthor": [0, 44, 54], "unavail": [11, 13], "unbiased_topk": [44, 62], "unchang": 63, "unclud": [32, 35, 36, 37, 39, 41, 42, 43], "undefin": [27, 44], "undeleg": [9, 11, 44, 47, 49, 53], "undelegate_extrins": 32, "under": [7, 11, 25, 44, 45, 48, 53, 62, 68, 70], "underli": [0, 29, 44, 46, 53], "understand": [11, 16, 18, 19, 20, 29, 44, 46, 47, 49, 53], "undesir": [0, 44], "unifi": 29, "unintention": [11, 25], "union": [6, 16, 29, 32, 36, 37, 40, 41, 42, 43, 44, 46, 47, 49, 52, 53, 55, 60, 62, 64, 68, 69, 70], "uniq_vers": 65, "uniqu": [0, 9, 11, 12, 14, 16, 17, 19, 21, 26, 29, 31, 41, 44, 46, 47, 49, 50, 53, 54, 63, 65, 69], "unit": [0, 44, 47, 49, 53, 60], "unknown": [44, 53], "unknownsynapseerror": [30, 44], "unless": [9, 29], "unlock": [9, 11, 44, 70], "unmet": 0, "unpack": 64, "unpredict": 29, "unstak": [11, 30, 32, 33, 44, 47, 49, 53, 70, 71], "unstake_extrins": 43, "unstake_multipl": [44, 53], "unstake_multiple_extrins": 43, "unstakecommand": [11, 23], "unstakeerror": [30, 44], "unstructur": 46, "until": [44, 53, 56], "up": [0, 4, 5, 9, 11, 15, 25, 29, 44, 46, 47, 49, 53, 56, 62, 67], "updat": [0, 9, 10, 11, 14, 15, 16, 17, 18, 25, 29, 30, 36, 44, 45, 46, 47, 49, 51, 53, 58, 64, 70], "update_curr_block": 64, "update_ident": [44, 53], "update_interv": [11, 18, 36, 44, 53, 58, 64], "update_with_kwarg": [27, 44], "updatecommand": [11, 15], "updatewalletcommand": [11, 25], "upgrad": [11, 25], "upon": [9, 10, 11, 13, 15, 16, 19, 29, 44, 46, 53], "upper": 58, "urgenc": 0, "uri": [44, 70], "url": [0, 9, 10, 11, 24, 29, 30, 44, 53, 62, 63], "urllib": 63, "us": [0, 2, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 36, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 62, 64, 65, 67, 70], "usag": [0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 29, 44, 46, 53, 54, 70], "use_cuda": [11, 18], "use_password": [11, 25, 44, 70], "use_torch": [6, 44, 62, 64], "user": [0, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 54, 70], "user_wallet_address": 29, "usus": [30, 44], "utf": [44, 54, 62], "util": [6, 8, 11, 21, 25, 29, 44, 46, 47, 49, 55, 70, 71], "uuid": [0, 29, 44, 54], "uvicorn": 0, "v": [6, 44, 49, 53, 55], "v_7_2_0": 28, "val": [11, 14, 44, 47, 49, 53, 62], "valid": [0, 2, 6, 9, 10, 11, 14, 17, 18, 21, 24, 37, 40, 44, 45, 46, 47, 49, 51, 53, 54, 55, 62, 63, 64, 68, 69], "validate_password": [44, 45], "validationerror": [44, 51, 54, 55], "validator_batch_s": [44, 53], "validator_epoch_length": [44, 53], "validator_epochs_per_reset": [44, 53], "validator_exclude_quantil": [44, 53], "validator_logits_diverg": [44, 53], "validator_permit": [6, 44, 46], "validator_prune_len": [44, 53], "validator_sequence_length": [44, 53], "validator_trust": [6, 44, 46], "validatorbatchs": [44, 49, 53], "validatorepochlen": [44, 53], "validatorepochsperreset": [44, 53], "validatorexcludequantil": [44, 53], "validatorlogitsdiverg": [44, 53], "validatorprunelen": [44, 53], "validatorsequencelength": [44, 53], "valu": [0, 6, 9, 10, 11, 16, 18, 19, 21, 24, 25, 27, 31, 34, 37, 40, 41, 44, 46, 47, 49, 53, 54, 55, 60, 61, 62, 63, 64, 69, 70], "valuabl": [44, 46, 47, 49, 53, 54], "valueerror": [6, 44, 45, 62, 64, 65, 68], "variabl": [0, 29, 44, 45, 51, 54, 60], "variou": [0, 9, 10, 11, 16, 17, 19, 20, 21, 44, 46, 47, 49, 53], "vault": [44, 45], "vec_u8": [6, 44], "vector": 6, "verbos": [11, 18, 64], "verif": [0, 9, 11, 18, 44, 54], "verifi": [0, 9, 11, 18, 22, 30, 44, 45, 47, 49, 53, 54], "verify_body_integr": [0, 44], "verify_custom": [0, 44], "verify_fn": [0, 44], "verify_my_synaps": [0, 44], "verify_my_synapse_2": [0, 44], "versatil": [44, 53], "version": [2, 6, 9, 11, 15, 31, 37, 40, 44, 45, 46, 47, 48, 49, 50, 53, 54, 57, 62, 63, 65, 69, 71], "version_check": [44, 62, 67], "version_check_threshold": 67, "version_fil": 67, "version_kei": [31, 37, 40, 44, 47, 49, 53, 69], "versioncheckerror": [62, 67], "via": [0, 6, 44, 49, 53, 55], "viabil": [44, 53], "view": [11, 16, 17, 20, 21, 25, 44, 47, 49, 53], "visibl": [11, 18, 19], "vital": [0, 11, 20, 29, 44, 46, 47, 49, 53, 54], "voluntarili": [11, 20], "vote": [11, 20, 38, 44, 53], "vote_data": 20, "vote_sen": [44, 53], "vote_senate_extrins": 38, "votecommand": [11, 20], "vpermit": [9, 11, 17], "vtrust": [11, 14, 17], "w": [11, 25, 44, 46, 53, 63], "w_": 46, "w_i": [44, 53], "w_j": [44, 53], "wa": [0, 24, 29, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 49, 53, 54], "wai": [29, 44, 52, 53, 54, 60, 70], "wait": [29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 49, 53, 56], "wait_for_": [44, 47, 49, 53], "wait_for_fin": [31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 49, 53], "wait_for_inclus": [31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 49, 53], "wait_tim": [44, 53], "wallet": [0, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 49, 50, 52, 53, 54, 60, 64, 69, 71], "wallet_address": 25, "wallet_mock": [47, 71], "wallet_util": [44, 62, 71], "walletbalancecommand": [11, 25], "walletcreatecommand": [11, 25], "want": [2, 8, 11, 16, 19, 20], "warn": [4, 5, 44, 53, 70], "we": [32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 49, 53, 63, 64], "web": [10, 11, 62, 68], "websocket": [44, 53, 63], "weight": [6, 11, 19, 31, 37, 40, 44, 46, 47, 49, 53, 64, 69, 70, 71], "weight_uid": 69, "weight_util": [62, 71], "weight_val": 69, "weights_as_dict": [6, 44], "weights_rate_limit": [6, 16, 44, 53], "weights_vers": [6, 16, 44], "weightssetratelimit": [44, 53], "well": [4, 5, 44, 46, 60], "were": [8, 11], "when": [0, 4, 5, 6, 7, 11, 15, 18, 20, 21, 23, 24, 25, 29, 30, 31, 44, 46, 53, 54, 56, 62, 63, 64, 68], "whenev": [44, 47, 49, 53], "where": [0, 9, 11, 12, 16, 18, 29, 44, 45, 46, 47, 49, 53, 60, 64, 70], "whether": [0, 6, 11, 13, 18, 19, 21, 23, 27, 44, 46, 47, 49, 52, 53, 62, 70], "which": [0, 6, 9, 10, 11, 12, 13, 16, 18, 19, 20, 21, 25, 26, 27, 29, 31, 39, 44, 46, 47, 49, 51, 53, 54, 62, 70], "while": [0, 44, 46, 53, 64], "who": [8, 9, 11, 16, 18, 20, 21, 23, 25, 44, 53, 54], "whole": [6, 44], "whose": [16, 44, 47, 49, 53], "wide": [11, 14, 44, 46, 53], "width": 9, "willing": [10, 11], "wish": [8, 11, 16, 18, 19, 20, 21, 23, 25, 26], "with_spac": [27, 44], "withdraw": [9, 11, 23, 44, 53], "withdrawn": [44, 53], "within": [0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 29, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 49, 51, 53, 54, 62, 64, 68], "without": [0, 6, 11, 18, 25, 29, 44, 45, 47, 49, 53, 54], "word": [11, 25, 44, 70], "word1": [11, 25], "word12": [11, 25], "word2": [11, 25], "work": [6, 11, 16, 18, 29, 44, 53, 56, 64, 65], "work_queu": 56, "worker": [0, 44, 56, 64], "world": [44, 54], "would": [24, 44, 54], "wrap": [4, 5], "wrapper": [0, 31, 44, 54], "writabl": [30, 44, 45, 48], "write": [44, 45, 48], "written": [44, 45], "wss": [44, 47, 49, 53, 63], "wt": [11, 26], "x": [10, 11, 44, 62, 69], "x13q": 45, "x83": 45, "x879": 45, "x90": 45, "x9c": 45, "xb1": 45, "xb5q": 45, "xbc": 45, "xdf": 45, "xe9": 45, "xf1z": 45, "y": [1, 11, 15, 19, 44, 62, 69], "yamlerror": [27, 44], "ye": [11, 19, 44, 53, 62], "yield": [0, 3, 29, 44], "you": [0, 2, 11, 19, 25, 29, 30, 44, 46, 53, 54], "your": [0, 2, 11, 18, 21, 25, 29, 44, 53, 54, 63, 70], "your_wallet_nam": [11, 18], "yoursynaps": [0, 44], "yuma": 46, "zero": [44, 53], "\u03ba": [44, 53], "\u03ba_i": [44, 53], "\u03c3": [44, 53], "\u03c4": [9, 11, 14, 17, 19], "\u03c4aos\u03c4a\u03c4": [11, 19]}, "titles": ["bittensor.axon", "bittensor.btlogging.defines", "bittensor.btlogging.format", "bittensor.btlogging.helpers", "bittensor.btlogging", "bittensor.btlogging.loggingmachine", "bittensor.chain_data", "bittensor.cli", "bittensor.commands.check_coldkey_swap", "bittensor.commands.delegates", "bittensor.commands.identity", "bittensor.commands", "bittensor.commands.inspect", "bittensor.commands.list", "bittensor.commands.metagraph", "bittensor.commands.misc", "bittensor.commands.network", "bittensor.commands.overview", "bittensor.commands.register", "bittensor.commands.root", "bittensor.commands.senate", "bittensor.commands.stake", "bittensor.commands.transfer", "bittensor.commands.unstake", "bittensor.commands.utils", "bittensor.commands.wallets", "bittensor.commands.weights", "bittensor.config", "bittensor.constants", "bittensor.dendrite", "bittensor.errors", "bittensor.extrinsics.commit_weights", "bittensor.extrinsics.delegation", "bittensor.extrinsics", "bittensor.extrinsics.network", "bittensor.extrinsics.prometheus", "bittensor.extrinsics.registration", "bittensor.extrinsics.root", "bittensor.extrinsics.senate", "bittensor.extrinsics.serving", "bittensor.extrinsics.set_weights", "bittensor.extrinsics.staking", "bittensor.extrinsics.transfer", "bittensor.extrinsics.unstaking", "bittensor", "bittensor.keyfile", "bittensor.metagraph", "bittensor.mock", "bittensor.mock.keyfile_mock", "bittensor.mock.subtensor_mock", "bittensor.mock.wallet_mock", "bittensor.stream", "bittensor.subnets", "bittensor.subtensor", "bittensor.synapse", "bittensor.tensor", "bittensor.threadpool", "bittensor.types", "bittensor.utils._register_cuda", "bittensor.utils.axon_utils", "bittensor.utils.balance", "bittensor.utils.formatting", "bittensor.utils", "bittensor.utils.networking", "bittensor.utils.registration", "bittensor.utils.subtensor", "bittensor.utils.test_utils", "bittensor.utils.version", "bittensor.utils.wallet_utils", "bittensor.utils.weight_utils", "bittensor.wallet", "API Reference", "Legacy Bittensor 7.4.0 Documentation"], "titleterms": {"0": 72, "4": 72, "7": 72, "_register_cuda": 58, "api": 71, "attribut": [1, 2, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 32, 37, 40, 41, 44, 45, 46, 49, 53, 55, 56, 62, 64, 65, 66, 67, 69], "axon": 0, "axon_util": 59, "balanc": 60, "bittensor": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72], "btlog": [1, 2, 3, 4, 5], "chain_data": 6, "check_coldkey_swap": 8, "class": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 64, 70], "cli": 7, "command": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "commit_weight": 31, "config": 27, "constant": 28, "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72], "defin": 1, "deleg": [9, 32], "dendrit": 29, "document": 72, "error": 30, "exampl": [44, 46, 53], "except": [27, 30, 36, 44, 56, 62, 63, 64, 67], "extrins": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "first": 72, "format": [2, 61], "function": [0, 2, 3, 6, 8, 9, 12, 16, 20, 21, 24, 25, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70], "helper": 3, "ident": 10, "inspect": 12, "keyfil": 45, "keyfile_mock": 48, "legaci": 72, "list": 13, "loggingmachin": 5, "metagraph": [14, 46], "misc": 15, "mock": [47, 48, 49, 50], "modul": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70], "network": [16, 34, 63], "overview": 17, "packag": [4, 11, 44, 47, 62], "prometheu": 35, "read": 72, "refer": 71, "regist": 18, "registr": [36, 64], "root": [19, 37], "senat": [20, 38], "serv": 39, "set_weight": 40, "stake": [21, 41], "stop": 72, "stream": 51, "submodul": [4, 11, 33, 44, 47, 62], "subnet": 52, "subpackag": 44, "subtensor": [53, 65], "subtensor_mock": 49, "synaps": 54, "tabl": 72, "tensor": 55, "test_util": 66, "thi": 72, "threadpool": 56, "transfer": [22, 42], "type": 57, "unstak": [23, 43], "util": [24, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "version": 67, "wallet": [25, 70], "wallet_mock": 50, "wallet_util": 68, "weight": 26, "weight_util": 69}})